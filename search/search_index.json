{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u77e5\u8bc6\u5e93!","text":"<ul> <li> <p>\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>MySQL\u57fa\u7840\u77e5\u8bc6\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>Go\u8bed\u8a00\u57fa\u7840\u77e5\u8bc6\u548c\u5e38\u89c1\u95ee\u9898\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>Python\u8bed\u8a00\u57fa\u7840\u77e5\u8bc6\u548c\u5e38\u89c1\u95ee\u9898\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>Kafka\u57fa\u7840\u77e5\u8bc6\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>Redis\u57fa\u7840\u77e5\u8bc6\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>LeetCode\u5e38\u89c1\u9898\u89e3\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>LLM\u76f8\u5173\u77e5\u8bc6\u5f52\u7eb3\u6574\u7406\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> <li> <p></p> <p>MacBook\u7535\u8111\u914d\u7f6e\u3002</p> <p> \u5f00\u59cb\u9605\u8bfb</p> </li> </ul>"},{"location":"algo/classic/river_crossing/","title":"\u519c\u592b\u8fc7\u6cb3\u95ee\u9898","text":"","boost":2},{"location":"algo/classic/river_crossing/#_1","title":"\u95ee\u9898","text":"<p>\u4eba\u3001\u72fc\u3001\u7f8a\u3001\u767d\u83dc\u6e21\u6cb3\u95ee\u9898\uff1a(\u72d0\u72f8\u3001\u9e45\u3001\u8c46\u5b50\u95ee\u9898) \u4eba\u3001\u72fc\u3001\u7f8a\u3001\u767d\u83dc\u8981\u4ece\u6cb3\u7684\u6b64\u5cb8\u501f\u7531\u4e00\u8258\u8239\u6e21\u6cb3\u81f3\u53e6\u4e00\u5cb8\uff0c\u5176\u4e2d\u53ea\u6709\u4eba\u4f1a\u5212\u8239\uff0c\u6bcf\u6b21\u4eba\u53ea\u80fd\u5e26\u4e00\u4ef6\u4e1c\u897f\u642d\u8239\u6e21\u6cb3\uff0c \u4e14\u72fc\u548c\u7f8a\u3001\u7f8a\u548c\u767d\u83dc\u4e0d\u80fd\u5728\u65e0\u4eba\u76d1\u63a7\u7684\u60c5\u51b5\u4e0b\u653e\u5728\u4e00\u8d77\u3002 \u5728\u8fd9\u4e9b\u6761\u4ef6\u4e0b\uff0c\u5728\u6700\u5c0f\u6e21\u6cb3\u6b21\u6570\u4e0b\u5982\u4f55\u624d\u80fd\u8ba9\u5927\u5bb6\u90fd\u6e21\u6cb3\u81f3\u53e6\u4e00\u6cb3\u5cb8?</p> <p>Refer: https://zh.wikipedia.org/zh-cn/%E6%B8%A1%E6%B2%B3%E5%95%8F%E9%A1%8C</p>","boost":2},{"location":"algo/classic/river_crossing/#_2","title":"\u6c42\u89e3","text":"","boost":2},{"location":"algo/classic/river_crossing/#1","title":"\u89e3\u6cd51","text":"No \u5de6\u5cb8 \u53f3\u5cb8 \u8bf4\u660e 0 [farmer,wolf,goat,cabbage] [] 1 [wolf,cabbage] [farmer,goat] \u519c\u592b\u5e26\u7f8a\u8fc7\u6cb3 2 [farmer,wolf,cabbage] [goat] \u519c\u592b\u8fd4\u56de 3 [cabbage] [farmer,wolf,goat] \u519c\u592b\u5e26\u72fc\u8fc7\u6cb3 4 [farmer,goat,cabbage] [wolf] \u519c\u592b\u5e26\u7f8a\u8fd4\u56de 5 [goat] [farmer,wolf,cabbage] \u519c\u592b\u5e26\u83dc\u8fc7\u6cb3 6 [farmer,goat] [wolf,cabbage] \u519c\u592b\u8fd4\u56de 7 [] [farmer,wolf,goat,cabbage] \u519c\u592b\u5e26\u7f8a\u8fc7\u6cb3","boost":2},{"location":"algo/classic/river_crossing/#2","title":"\u89e3\u6cd52","text":"No \u5de6\u5cb8 \u53f3\u5cb8 \u8bf4\u660e 0 [farmer,wolf,goat,cabbage] [] 1 [wolf,cabbage] [farmer,goat] \u519c\u592b\u5e26\u7f8a\u8fc7\u6cb3 2 [farmer,wolf,cabbage] [goat] \u519c\u592b\u8fd4\u56de 3 [wolf] [farmer,goat,cabbage] \u519c\u592b\u5e26\u83dc\u8fc7\u6cb3 4 [farmer,wolf,goat] [cabbage] \u519c\u592b\u5e26\u7f8a\u8fd4\u56de 5 [goat] [farmer,wolf,cabbage] \u519c\u592b\u5e26\u72fc\u8fc7\u6cb3 6 [farmer,goat] [wolf,cabbage] \u519c\u592b\u8fd4\u56de 7 [] [farmer,wolf,goat,cabbage] \u519c\u592b\u5e26\u7f8a\u8fc7\u6cb3","boost":2},{"location":"algo/classic/river_crossing/#_3","title":"\u4ee3\u7801","text":"Python<pre><code># -*- coding: UTF-8 -*-\nimport pandas as pd\n\nname = [\"farmer\", \"wolf\", \"goat\", \"cabbage\"]\nscheme_count = 0\n\n\n# \u5b8c\u6210\ndef is_done(status):\n    return status[0] and status[1] and status[2] and status[3]\n\n\n# \u751f\u6210\u4e0b\u4e00\u4e2a\u5c40\u9762\u7684\u6240\u6709\u60c5\u51b5\ndef create_all_next_status(status):\n    next_status_list = []\n\n    for i in range(0, 4):\n        if status[0] != status[i]:  # \u548c\u519c\u592b\u4e0d\u540c\u4e00\u4fa7\uff1f\n            continue\n\n        next_status = [status[0], status[1], status[2], status[3]]\n        # \u519c\u592b\u548c\u5176\u4e2d\u4e00\u4e2a\u8fc7\u6cb3\uff0ci \u4e3a 0 \u65f6\u5019\uff0c\u519c\u592b\u81ea\u5df1\u8fc7\u6cb3\u3002\n        next_status[0] = not next_status[0]\n        next_status[i] = next_status[0]  # \u548c\u519c\u592b\u4e00\u8d77\u8fc7\u6cb3\n\n        if is_valid_status(next_status):\n            next_status_list.append(next_status)\n\n    return next_status_list\n\n\n# \u5224\u65ad\u662f\u5426\u5408\u6cd5\u7684\u5c40\u9762\ndef is_valid_status(status):\n    if status[1] == status[2]:\n        if status[0] != status[1]:\n            # \u72fc\u548c\u7f8a\u540c\u4fa7\uff0c\u6ca1\u6709\u4eba\u5728\u573a\n            return False\n\n    if status[2] == status[3]:\n        if status[0] != status[2]:\n            # \u7f8a\u548c\u8349\u540c\u4fa7\uff0c\u6ca1\u6709\u4eba\u5728\u573a\n            return False\n\n    return True\n\n\ndef search(history_status):\n    global scheme_count\n    current_status = history_status[len(history_status) - 1]\n\n    next_status_list = create_all_next_status(current_status)\n    for next_status in next_status_list:\n        if next_status in history_status:\n            # \u51fa\u73b0\u91cd\u590d\u7684\u60c5\u51b5\u4e86\n            continue\n\n        history_status.append(next_status)\n\n        if is_done(next_status):\n            scheme_count += 1\n            print(\"scheme \" + str(scheme_count) + \":\")\n            print_history_status(history_status)\n        else:\n            search(history_status)\n\n        history_status.pop()\n\n\ndef readable_status(status, is_across):\n    result = \"\"\n    for i in range(0, 4):\n        if status[i] == is_across:\n            if len(result) != 0:\n                result += \",\"\n            result += name[i]\n\n    return \"[\" + result + \"]\"\n\n\n# \u6253\u5370\u7ed3\u679c\ndef print_history_status(history_status):\n    left_items, right_items = [], []\n    for status in history_status:\n        left_items.append(readable_status(status, False))\n        right_items.append(readable_status(status, True))\n    data = {\n        \"\u5de6\u5cb8\": left_items,\n        \"\u53f3\u5cb8\": right_items,\n    }\n    df = pd.DataFrame(data)\n    print(df)\n\n\nif __name__ == \"__main__\":\n    # \u521d\u59cb\n    status = [False, False, False, False]\n    # \u4fdd\u5b58\u5386\u53f2\u72b6\u6001\n    history_status = [status]\n\n    search(history_status)\n    print(\"*\" * 50)\n    print(\"finish search, find \" + str(scheme_count) + \" scheme\")\n</code></pre> <ul> <li>\u519c\u592b\u8fc7\u6cb3\u95ee\u9898 Python\u5b9e\u73b0\u89e3\u9898</li> </ul>","boost":2},{"location":"algo/classic/topk/","title":"Top K \u95ee\u9898","text":"","boost":2},{"location":"algo/classic/topk/#_1","title":"\u5feb\u6392","text":"Go<pre><code>/* \u54e8\u5175\u5212\u5206 */\nfunc partition(nums []int, left, right int) int {\n    // \u4ee5 nums[left] \u4e3a\u57fa\u51c6\u6570\n    i, j := left, right\n    for i &lt; j {\n        for i &lt; j &amp;&amp; nums[j] &gt;= nums[left] {\n            j-- // \u4ece\u53f3\u5411\u5de6\u627e\u9996\u4e2a\u5c0f\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\n        }\n        for i &lt; j &amp;&amp; nums[i] &lt;= nums[left] {\n            i++ // \u4ece\u5de6\u5411\u53f3\u627e\u9996\u4e2a\u5927\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\n        }\n        // \u5143\u7d20\u4ea4\u6362\n        nums[i], nums[j] = nums[j], nums[i]\n    }\n    // \u5c06\u57fa\u51c6\u6570\u4ea4\u6362\u81f3\u4e24\u5b50\u6570\u7ec4\u7684\u5206\u754c\u7ebf\n    nums[i], nums[left] = nums[left], nums[i]\n    return i // \u8fd4\u56de\u57fa\u51c6\u6570\u7684\u7d22\u5f15\n}\n\n/* \u5feb\u901f\u6392\u5e8f */\nfunc quickSort(nums []int, left, right int) {\n    // \u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\u9012\u5f52\n    if left &gt;= right {\n        return\n    }\n    // \u54e8\u5175\u5212\u5206\n    pivot := partition(nums, left, right)\n    // \u9012\u5f52\u5de6\u5b50\u6570\u7ec4\u3001\u53f3\u5b50\u6570\u7ec4\n    quickSort(nums, left, pivot-1)\n    quickSort(nums, pivot+1, right)\n}\n</code></pre> Python<pre><code>def partition(self, nums: list[int], left: int, right: int) -&gt; int:\n    \"\"\"\u54e8\u5175\u5212\u5206\"\"\"\n    # \u4ee5 nums[left] \u4e3a\u57fa\u51c6\u6570\n    i, j = left, right\n    while i &lt; j:\n        while i &lt; j and nums[j] &gt;= nums[left]:\n            j -= 1  # \u4ece\u53f3\u5411\u5de6\u627e\u9996\u4e2a\u5c0f\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\n        while i &lt; j and nums[i] &lt;= nums[left]:\n            i += 1  # \u4ece\u5de6\u5411\u53f3\u627e\u9996\u4e2a\u5927\u4e8e\u57fa\u51c6\u6570\u7684\u5143\u7d20\n        # \u5143\u7d20\u4ea4\u6362\n        nums[i], nums[j] = nums[j], nums[i]\n    # \u5c06\u57fa\u51c6\u6570\u4ea4\u6362\u81f3\u4e24\u5b50\u6570\u7ec4\u7684\u5206\u754c\u7ebf\n    nums[i], nums[left] = nums[left], nums[i]\n    return i  # \u8fd4\u56de\u57fa\u51c6\u6570\u7684\u7d22\u5f15\n\ndef quick_sort(self, nums: list[int], left: int, right: int):\n    \"\"\"\u5feb\u901f\u6392\u5e8f\"\"\"\n    # \u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u65f6\u7ec8\u6b62\u9012\u5f52\n    if left &gt;= right:\n        return\n    # \u54e8\u5175\u5212\u5206\n    pivot = self.partition(nums, left, right)\n    # \u9012\u5f52\u5de6\u5b50\u6570\u7ec4\u3001\u53f3\u5b50\u6570\u7ec4\n    self.quick_sort(nums, left, pivot - 1)\n    self.quick_sort(nums, pivot + 1, right)\n</code></pre>","boost":2},{"location":"algo/classic/topk/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002<ul> <li>\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u54e8\u5175\u5212\u5206\u7684\u9012\u5f52\u5c42\u6570\u4e3a \\(log n\\)\uff0c\u6bcf\u5c42\u4e2d\u7684\u603b\u5faa\u73af\u6570\u4e3a \\(n\\)\uff0c\u603b\u4f53\u4f7f\u7528 \\(O(n \\log n)\\) \u65f6\u95f4\u3002</li> </ul> </li> <li> <p> \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)</p> </li> <li> <p>https://www.hello-algo.com/chapter_sorting/quick_sort/</p> </li> </ul>","boost":2},{"location":"cloud_native/k8s/service/","title":"Service","text":"<p>Kubernetes \u4e2d Service \u662f \u5c06\u8fd0\u884c\u5728\u4e00\u4e2a\u6216\u4e00\u7ec4 Pod \u4e0a\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u4e3a\u7f51\u7edc\u670d\u52a1\u7684\u65b9\u6cd5<sup>1</sup>\u3002</p>"},{"location":"cloud_native/k8s/service/#service","title":"\u5b9a\u4e49Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app.kubernetes.io/name: MyApp  # pod \u9009\u62e9\u5668\n  ports:                           # \u7aef\u53e3\u5b9a\u4e49\n    - name: http\n      protocol: TCP                # \u4e0d\u6307\u5b9a\u9ed8\u8ba4 tcp\n      port: 80\n      targetPort: 9376\n</code></pre>"},{"location":"cloud_native/k8s/service/#_1","title":"\u670d\u52a1\u7c7b\u578b","text":"ClusterIP (\u9ed8\u8ba4\u7c7b\u578b) <p>\u901a\u8fc7\u96c6\u7fa4\u7684\u5185\u90e8IP\u516c\u5f00Service</p> NodePort <p>\u901a\u8fc7\u6bcf\u4e2a\u8282\u70b9\u7684 IP \u548c\u9759\u6001\u7aef\u53e3\u516c\u5f00Service\u3002</p> LoadBalance <p>\u4f7f\u7528\u4e91\u5e73\u53f0\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5411\u5916\u90e8\u516c\u5f00Service</p>"},{"location":"cloud_native/k8s/service/#_2","title":"\u670d\u52a1\u53d1\u73b0","text":"<p>\u5bf9\u4e8e\u5728\u96c6\u7fa4\u5185\u8fd0\u884c\u7684\u5ba2\u6237\u7aef\uff0cKubernetes \u652f\u6301\u4e24\u79cd\u4e3b\u8981\u7684\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff1a\u73af\u5883\u53d8\u91cf \u548c DNS\u3002</p> <ol> <li> <p>Kubernetes \u670d\u52a1\uff08Service\uff09 \u21a9</p> </li> </ol>"},{"location":"golang/","title":"Index","text":"","boost":2},{"location":"golang/#1","title":"1. \u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff08\u5fc5\u95ee\uff09","text":"<ul> <li>\u8fdb\u7a0b\uff1a\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u540c\u7684\u8fdb\u7a0b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u6765\u901a\u4fe1\u3002</li> <li>\u7ebf\u7a0b\uff1a\u4ece\u5c5e\u4e8e\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u662f CPU \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\u5e76\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u7b49\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u6765\u901a\u4fe1\u3002</li> <li>\u534f\u7a0b\uff1a\u4e3a\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c\u4e0e\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u534f\u7a0b\u4e0d\u53d7\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\uff0c\u534f\u7a0b\u7684\u8c03\u5ea6\u5668\u7531\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\uff0c\u534f\u7a0b\u8c03\u5ea6\u5668\u6309\u7167\u8c03\u5ea6\u7b56\u7565\u628a\u534f\u7a0b\u8c03\u5ea6\u5230\u7ebf\u7a0b\u4e2d\u8fd0\u884c</li> </ul>","boost":2},{"location":"golang/#2-go","title":"2. Go \u9762\u5411\u5bf9\u8c61\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f","text":"<p>Go \u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7684\u4e24\u4e2a\u5173\u952e\u662f <code>struct</code> \u548c <code>interface</code>\u3002</p> <ul> <li>\u5c01\u88c5\uff1a\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5305\uff0c\u5bf9\u8c61\u5bf9\u5305\u5185\u7684\u6587\u4ef6\u53ef\u89c1\uff1b\u5bf9\u4e0d\u540c\u7684\u5305\uff0c\u9700\u8981\u5c06\u5bf9\u8c61\u4ee5\u5927\u5199\u5f00\u5934\u624d\u662f\u53ef\u89c1\u7684\u3002</li> <li>\u7ee7\u627f\uff1a\u7ee7\u627f\u662f\u7f16\u8bd1\u65f6\u7279\u5f81\uff0c\u5728 struct \u5185\u52a0\u5165\u6240\u9700\u8981\u7ee7\u627f\u7684\u7c7b\u5373\u53ef\uff1a</li> <li>\u591a\u6001\uff1a\u591a\u6001\u662f\u8fd0\u884c\u65f6\u7279\u5f81\uff0cGo \u591a\u6001\u901a\u8fc7 interface \u6765\u5b9e\u73b0\u3002\u7c7b\u578b\u548c\u63a5\u53e3\u662f\u677e\u8026\u5408\u7684\uff0c\u67d0\u4e2a\u7c7b\u578b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u6240\u5b9e\u73b0\u7684\u4efb\u610f\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u3002</li> </ul>","boost":2},{"location":"golang/#3-make-new","title":"3. make \u548c new \u7684\u533a\u522b\uff1f","text":"<ul> <li>new \u53ea\u7528\u4e8e\u5206\u914d\u5185\u5b58\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5730\u5740\u7684\u6307\u9488\u3002\u5b83\u4e3a\u6bcf\u4e2a\u65b0\u7c7b\u578b\u5206\u914d\u4e00\u7247\u5185\u5b58\uff0c\u521d\u59cb\u5316\u4e3a 0 \u4e14\u8fd4\u56de\u7c7b\u578b *T \u7684\u5185\u5b58\u5730\u5740\uff0c\u5b83\u76f8\u5f53\u4e8e <code>&amp;T{}</code>\u3002</li> <li>make \u53ea\u53ef\u7528\u4e8e slice\uff0cmap\uff0cchannel \u7684\u521d\u59cb\u5316\uff0c\u8fd4\u56de\u7684\u662f\u5f15\u7528\u3002</li> </ul>","boost":2},{"location":"golang/#4-defer","title":"4. defer \u7684\u6267\u884c\u987a\u5e8f","text":"<p>defer \u6267\u884c\u987a\u5e8f\u548c\u8c03\u7528\u987a\u5e8f\u76f8\u53cd\uff0c\u7c7b\u4f3c\u4e8e\u6808\u540e\u8fdb\u5148\u51fa(LIFO)\u3002</p> <p>panic \u9519\u8bef\u5e76\u4e0d\u80fd\u7ec8\u6b62 defer \u7684\u6267\u884c\u3002</p>","boost":2},{"location":"golang/#5-struct","title":"5. \u7a7a struct{} \u7684\u7528\u9014","text":"<ol> <li>\u7528 map \u6a21\u62df\u4e00\u4e2a set\uff0c\u90a3\u4e48\u5c31\u8981\u628a\u503c\u7f6e\u4e3a struct{}\uff0cstruct{}\u672c\u8eab\u4e0d\u5360\u4efb\u4f55\u7a7a\u95f4\uff0c\u53ef\u4ee5\u907f\u514d\u4efb\u4f55\u591a\u4f59\u7684\u5185\u5b58\u5206\u914d\u3002</li> <li>\u6709\u65f6\u5019\u7ed9\u901a\u9053\u53d1\u9001\u4e00\u4e2a\u7a7a\u7ed3\u6784\u4f53\uff0cchannel&lt;-struct{}{}\uff0c\u4e5f\u662f\u8282\u7701\u4e86\u7a7a\u95f4\u3002</li> <li>\u4ec5\u6709\u65b9\u6cd5\u7684\u7ed3\u6784\u4f53</li> </ol>","boost":2},{"location":"golang/#6-init","title":"6. init() \u51fd\u6570\u662f\u4ec0\u4e48\u65f6\u5019\u6267\u884c\u7684\uff1f","text":"<p>\u5728 main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002init()\u51fd\u6570\u662f go \u521d\u59cb\u5316\u7684\u4e00\u90e8\u5206\uff0c\u7531 runtime \u521d\u59cb\u5316\u6bcf\u4e2a\u5bfc\u5165\u7684\u5305\uff0c\u521d\u59cb\u5316\u4e0d\u662f\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\u7684\u5bfc\u5165\u987a\u5e8f\uff0c\u800c\u662f\u6309\u7167\u89e3\u6790\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6ca1\u6709\u4f9d\u8d56\u7684\u5305\u6700\u5148\u521d\u59cb\u5316\u3002</p> <p>\u6bcf\u4e2a\u5305\u9996\u5148\u521d\u59cb\u5316\u5305\u4f5c\u7528\u57df\u7684\u5e38\u91cf\u548c\u53d8\u91cf\uff08\u5e38\u91cf\u4f18\u5148\u4e8e\u53d8\u91cf\uff09\uff0c\u7136\u540e\u6267\u884c\u5305\u7684 init()\u51fd\u6570\u3002\u540c\u4e00\u4e2a\u5305\uff0c\u751a\u81f3\u662f\u540c\u4e00\u4e2a\u6e90\u6587\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a init()\u51fd\u6570\u3002init()\u51fd\u6570\u6ca1\u6709\u5165\u53c2\u548c\u8fd4\u56de\u503c\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u51fd\u6570\u8c03\u7528\uff0c\u540c\u4e00\u4e2a\u5305\u5185\u591a\u4e2a init()\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u4e0d\u4f5c\u4fdd\u8bc1\u3002</p> <p>\u6267\u884c\u987a\u5e8f\uff1aimport \u2013&gt; const \u2013&gt; var \u2013&gt;init()\u2013&gt;main()</p>","boost":2},{"location":"golang/#7-go","title":"7. Go \u7684\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b","text":"<p>\u503c\u7c7b\u578b\uff1aint\u3001float\u3001bool\u3001string\u3001array\u3001sturct \u7b49</p> <p>\u5f15\u7528\u7c7b\u578b\uff1aslice\uff0cmap\uff0cchannel\uff0cinterface\uff0cfunc \u7b49</p> <ul> <li>\u503c\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u79f0\u4e3a\u6df1\u62f7\u8d1d\uff0c\u5f62\u53c2\u6539\u53d8\uff0c\u5b9e\u53c2\u4e0d\u53d8\uff0c\u56e0\u4e3a\u4f20\u9012\u7684\u662f\u503c\u7684\u526f\u672c\uff0c\u5f62\u53c2\u4f1a\u65b0\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\uff0c\u4e0e\u5b9e\u53c2\u6307\u5411\u4e0d\u540c\u3002</li> <li>\u5f15\u7528\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u79f0\u4e3a\u6d45\u62f7\u8d1d\uff0c\u5f62\u53c2\u6539\u53d8\uff0c\u5b9e\u53c2\u6570\u8ddf\u968f\u53d8\u5316\u3002\u56e0\u4e3a\u4f20\u9012\u7684\u662f\u5730\u5740\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u90fd\u6307\u5411\u540c\u4e00\u5757\u5730\u5740\u3002</li> </ul> <p>Note</p> <ul> <li>map/channel \u672c\u8eab\u5c31\u662f\u6307\u9488\uff0c\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u6240\u4ee5\u76f4\u63a5\u4f20 map \u548c channel \u672c\u8eab\u5c31\u53ef\u4ee5\u3002</li> <li>slice \u7684\u8d4b\u503c\u64cd\u4f5c\u5176\u5b9e\u662f\u9488\u5bf9 slice \u7ed3\u6784\u4f53\u5185\u90e8\u7684\u6307\u9488\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u662f\u6307\u9488\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20 slice \u672c\u8eab\u3002</li> </ul>","boost":2},{"location":"golang/#8-go","title":"8. Go \u8bed\u8a00\u5230\u5e95\u662f\u503c\u4f20\u9012\uff0c\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f","text":"<p>Go \u91cc\u9762\u6ca1\u6709\u5f15\u7528\u4f20\u9012\uff0cGo \u8bed\u8a00\u662f\u503c\u4f20\u9012\u3002</p> <ul> <li>\u503c\u4f20\u9012\uff1a\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u590d\u5236\u4e00\u4efd\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5728\u51fd\u6570\u4e2d\u5982\u679c\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002</li> <li>\u5f15\u7528\u4f20\u9012\uff1a\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u7684\u5730\u5740\u76f4\u63a5\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4e2d\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u5c06\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002</li> </ul>","boost":2},{"location":"golang/#9-unsafepointer","title":"9. unsafe.Pointer","text":"<ol> <li>\u4efb\u4f55\u7c7b\u578b\u7684\u6307\u9488\u90fd\u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a <code>unsafe.Pointer</code>\uff1b</li> <li><code>unsafe.Pointer</code>\u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a\u4efb\u4f55\u7c7b\u578b\u7684\u6307\u9488\uff1b</li> <li><code>uintptr</code> \u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a <code>unsafe.Pointer</code>\uff1b</li> <li><code>unsafe.Pointer</code> \u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a <code>uintptr</code>\u3002</li> </ol> <p>Note</p> <p><code>uintptr</code> \u662f\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\uff0c\u8db3\u591f\u5927\u80fd\u4fdd\u5b58\u4efb\u4f55\u4e00\u79cd\u6307\u9488\u7c7b\u578b\u3002<code>uintptr</code> \u6307\u7684\u662f\u5177\u4f53\u7684\u5185\u5b58\u5730\u5740\uff0c\u4e0d\u662f\u4e2a\u6307\u9488\uff0c\u56e0\u6b64 uintptr \u5730\u5740\u5173\u8054\u7684\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u3002\u800c <code>unsafe.Pointer</code> \u6709\u6307\u9488\u8bed\u4e49\uff0c\u53ef\u4ee5\u4fdd\u62a4\u5b83\u4e0d\u4f1a\u88ab\u5783\u573e\u56de\u6536\u3002</p> <p>unsafe.Pointer \u6709\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u4f5c\u4e3a\u4e0d\u540c\u7c7b\u578b\u6307\u9488\u4e92\u76f8\u8f6c\u6362\u7684\u4e2d\u4ecb\uff1b</li> <li>\u5229\u7528 <code>uintptr</code> \u7a81\u7834\u6307\u9488\u4e0d\u80fd\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u7684\u9650\u5236\uff0c\u4ece\u800c\u8fbe\u5230\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u7684\u76ee\u7684\u3002</li> </ul> <p>unsafe.Pointer \u7c7b\u578b\u53ef\u4ee5\u7ed5\u5f00 Go \u8bed\u8a00\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\uff0c\u65b9\u4fbf\u4e86\u5f88\u591a\u4ee3\u7801\u7684\u7f16\u5199\uff0c\u4e14\u63d0\u5347\u4e86\u4ee3\u7801\u6027\u80fd\uff0c\u6bd4\u5982\uff1a\u5e95\u5c42\u7c7b\u578b\u76f8\u540c\u7684\u6307\u9488\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u8bbf\u95ee\u7ed3\u6784\u4f53\u79c1\u6709\u5b57\u6bb5\u7b49\u3002\u4f46\u540c\u65f6\u56e0\u4e3a\u5176\u7279\u6027\uff0c\u4f7f\u5176\u53d8\u5f97\u5f88\u4e0d\u5b89\u5168\uff0c\u56e0\u6b64\u9700\u8981\u614e\u7528\u3002</p>","boost":2},{"location":"golang/#10","title":"10. \u4ec0\u4e48\u662f\u5185\u5b58\u9003\u9038\uff1f","text":"<p>Go \u8bed\u8a00\u4e2d\uff0c\u5806\u5185\u5b58\u662f\u901a\u8fc7\u5783\u573e\u56de\u6536\u673a\u5236\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u65e0\u9700\u5f00\u53d1\u8005\u6307\u5b9a\u3002\u90a3\u4e48\uff0cGo \u7f16\u8bd1\u5668\u600e\u4e48\u77e5\u9053\u67d0\u4e2a\u53d8\u91cf\u9700\u8981\u5206\u914d\u5728\u6808\u4e0a\uff0c\u8fd8\u662f\u5806\u4e0a\u5462\uff1f\u7f16\u8bd1\u5668\u51b3\u5b9a\u5185\u5b58\u5206\u914d\u4f4d\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c31\u79f0\u4e4b\u4e3a\u9003\u9038\u5206\u6790(escape analysis)\u3002\u9003\u9038\u5206\u6790\u7531\u7f16\u8bd1\u5668\u5b8c\u6210\uff0c\u4f5c\u7528\u4e8e\u7f16\u8bd1\u9636\u6bb5\u3002 \u4e0d\u9003\u9038\u7684\u5bf9\u8c61\u653e\u6808\u4e0a\uff0c\u53ef\u80fd\u9003\u9038\u7684\u653e\u5806\u4e0a\u3002</p>","boost":2},{"location":"golang/#_1","title":"\u4e3a\u4f55\u9700\u8981\u9003\u9038\u5206\u6790\uff1f","text":"<ol> <li>\u51cf\u5c11 gc \u538b\u529b\uff0c\u6808\u4e0a\u7684\u53d8\u91cf\uff0c\u968f\u7740\u51fd\u6570\u9000\u51fa\u540e\u7cfb\u7edf\u76f4\u63a5\u56de\u6536\uff0c\u4e0d\u9700\u8981 gc \u6807\u8bb0\u540e\u518d\u6e05\u9664\u3002</li> <li>\u51cf\u5c11\u5185\u5b58\u788e\u7247\u7684\u4ea7\u751f\u3002</li> <li>\u51cf\u8f7b\u5206\u914d\u5806\u5185\u5b58\u7684\u5f00\u9500\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u901f\u5ea6\u3002</li> </ol>","boost":2},{"location":"golang/#_2","title":"\u5982\u4f55\u786e\u5b9a\u662f\u5426\u9003\u9038\uff1f","text":"<pre><code>go build -gcflags '-m -l' main.go\n</code></pre> <ul> <li><code>-m</code> \u4f1a\u6253\u5370\u51fa\u9003\u9038\u5206\u6790\u7684\u4f18\u5316\u7b56\u7565\uff0c\u5b9e\u9645\u4e0a\u6700\u591a\u603b\u5171\u53ef\u4ee5\u7528 4 \u4e2a -m\uff0c\u4f46\u662f\u4fe1\u606f\u91cf\u8f83\u5927\uff0c\u4e00\u822c\u7528 1 \u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002</li> <li><code>-l</code> \u4f1a\u7981\u7528\u51fd\u6570\u5185\u8054\uff0c\u5728\u8fd9\u91cc\u7981\u7528\u6389\u5185\u8054\u80fd\u66f4\u597d\u7684\u89c2\u5bdf\u9003\u9038\u60c5\u51b5\uff0c\u51cf\u5c11\u5e72\u6270\u3002</li> </ul>","boost":2},{"location":"golang/#_3","title":"\u5185\u5b58\u9003\u9038\u7684\u60c5\u51b5\uff1a","text":"<ul> <li>\u6307\u9488\u9003\u9038\uff1a\u5728\u51fd\u6570\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd4\u56de\u4e86\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\u3002</li> <li>interface{}\u52a8\u6001\u7c7b\u578b\u9003\u9038\uff1a\u5982\u679c\u51fd\u6570\u53c2\u6570\u4e3a interface{}\uff0c\u7f16\u8bd1\u671f\u95f4\u5f88\u96be\u786e\u5b9a\u5176\u53c2\u6570\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u4e5f\u4f1a\u53d1\u751f\u9003\u9038\u3002</li> <li>\u6808\u7a7a\u95f4\u4e0d\u8db3\uff1a\u5f53\u6808\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u5b58\u653e\u5f53\u524d\u5bf9\u8c61\u6216\u65e0\u6cd5\u5224\u65ad\u5f53\u524d\u5207\u7247\u957f\u5ea6\u65f6\u4f1a\u5c06\u5bf9\u8c61\u5206\u914d\u5230\u5806\u4e2d\u3002</li> <li>\u95ed\u5305\u5f15\u7528\u5bf9\u8c61\u9003\u9038\uff1a\u95ed\u5305\u51fd\u6570\u5982\u679c\u8bbf\u95ee\u4e86\u5916\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u9500\u6bc1\uff0c\u4f46\u53d8\u91cf\u4e0d\u4f1a\u56de\u6536\uff0c\u4f1a\u9003\u9038\u5230\u5806\u4e0a\u3002</li> <li>\u53d8\u91cf\u8f83\u5927\uff08\u6808\u7a7a\u95f4\u4e0d\u8db3\uff09\u548c \u53d8\u91cf\u5927\u5c0f\u4e0d\u786e\u5b9a\uff08\u5982 slice \u957f\u5ea6\u6216\u5bb9\u91cf\u4e0d\u5b9a\uff09\u4e5f\u4f1a\u5f15\u8d77\u9003\u9038</li> </ul>","boost":2},{"location":"golang/#11-go-tag","title":"11. Go \u89e3\u6790 Tag \u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f","text":"<p>\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u6807\u7b7e\uff08Tag\uff09\u662f\u9644\u52a0\u5230\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u5143\u4fe1\u606f\uff0c\u5b83\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b58\u50a8\u7684\u3002\u8fd9\u4e9b\u6807\u7b7e\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\uff08reflection\uff09\u673a\u5236\u6765\u83b7\u53d6\uff0c\u5e76\u53ef\u4ee5\u88ab\u7528\u4e8e\u5404\u79cd\u76ee\u7684\u3002</p> <pre><code>type User struct {\n    Name    string `json:\"name\"`\n    Email   string `json:\"email\"`\n    Age     int    `json:\"age\"`\n}\n</code></pre> <p>\u5e38\u89c1\u7528\u9014</p> <ol> <li>\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316</li> <li>\u6570\u636e\u9a8c\u8bc1</li> <li>\u6570\u636e\u5e93 ORM \u6620\u5c04</li> <li>HTTP \u8def\u7531\u548c\u5904\u7406</li> </ol>","boost":2},{"location":"golang/#12-go","title":"12. Go \u5185\u5b58\u5206\u914d","text":"<p>Golang \u5185\u5b58\u5206\u914d\u7ba1\u7406\u7b56\u7565\u662f\u6309\u7167\u4e0d\u540c\u5927\u5c0f\u7684\u5bf9\u8c61\u548c\u4e0d\u540c\u7684\u5185\u5b58\u5c42\u7ea7\u6765\u5206\u914d\u7ba1\u7406\u5185\u5b58\u3002\u901a\u8fc7\u8fd9\u79cd\u591a\u5c42\u7ea7\u5206\u914d\u7b56\u7565\uff0c\u5f62\u6210\u65e0\u9501\u5316\u6216\u8005\u964d\u4f4e\u9501\u7684\u7c92\u5ea6\uff0c\u4ee5\u53ca\u5c3d\u91cf\u51cf\u5c11\u5185\u5b58\u788e\u7247\uff0c\u6765\u63d0\u9ad8\u5185\u5b58\u5206\u914d\u6548\u7387\u3002</p> \u7c7b\u522b \u5927\u5c0f \u5fae\u5bf9\u8c61 <code>tiny object (0, 16B)</code> \u5c0f\u5bf9\u8c61 <code>small object [16B, 32KB]</code> \u5927\u5bf9\u8c61 <code>large object (32KB, +\u221e)</code> <p>Golang \u4e2d\u5185\u5b58\u7ba1\u7406\u7684\u5c42\u7ea7\u4ece\u6700\u4e0b\u5230\u6700\u4e0a\u53ef\u4ee5\u5206\u4e3a\uff1a<code>mspan -&gt; mcache -&gt; mcentral -&gt; mheap -&gt; heapArena</code>\u3002golang \u4e2d\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u5c0f\u4e8e 16 \u4e2a\u5b57\u8282\u7684\u5bf9\u8c61\u4f7f\u7528 mcache \u7684\u5fae\u5bf9\u8c61\u5206\u914d\u5668\u8fdb\u884c\u5206\u914d\u5185\u5b58</li> <li>\u5927\u5c0f\u5728 16 \u4e2a\u5b57\u8282\u5230 32k \u5b57\u8282\u4e4b\u95f4\u7684\u5bf9\u8c61\uff0c\u9996\u5148\u8ba1\u7b97\u51fa\u9700\u8981\u4f7f\u7528\u7684 span \u5927\u5c0f\u89c4\u683c\uff0c\u7136\u540e\u4f7f\u7528 mcache \u4e2d\u76f8\u540c\u5927\u5c0f\u89c4\u683c\u7684 mspan \u5206\u914d</li> <li>\u5982\u679c\u5bf9\u5e94\u7684\u5927\u5c0f\u89c4\u683c\u5728 mcache \u4e2d\u6ca1\u6709\u53ef\u7528\u7684 mspan\uff0c\u5219\u5411 mcentral \u7533\u8bf7</li> <li>\u5982\u679c mcentral \u4e2d\u6ca1\u6709\u53ef\u7528\u7684 mspan\uff0c\u5219\u5411 mheap \u7533\u8bf7\uff0c\u5e76\u6839\u636e BestFit \u7b97\u6cd5\u627e\u5230\u6700\u5408\u9002\u7684 mspan\u3002\u5982\u679c\u7533\u8bf7\u5230\u7684 mspan \u8d85\u51fa\u7533\u8bf7\u5927\u5c0f\uff0c\u5c06\u4f1a\u6839\u636e\u9700\u6c42\u8fdb\u884c\u5207\u5206\uff0c\u4ee5\u8fd4\u56de\u7528\u6237\u6240\u9700\u7684\u9875\u6570\uff0c\u5269\u4f59\u7684\u9875\u6784\u6210\u4e00\u4e2a\u65b0\u7684 mspan \u653e\u56de mheap \u7684\u7a7a\u95f2\u5217\u8868</li> <li>\u5982\u679c mheap \u4e2d\u6ca1\u6709\u53ef\u7528 span\uff0c\u5219\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u7cfb\u5217\u65b0\u7684\u9875\uff08\u6700\u5c0f 1MB\uff09</li> <li>\u5bf9\u4e8e\u5927\u4e8e 32K \u7684\u5927\u5bf9\u8c61\u76f4\u63a5\u4ece mheap \u5206\u914d</li> </ol>","boost":2},{"location":"golang/#13-go-context","title":"13. Go Context \u7b80\u4ecb","text":"<p>\u53c2\u8003\uff1a\u4e0a\u4e0b\u6587 - context</p> <p>Context \u662f\u7531 Golang \u5b98\u65b9\u5f00\u53d1\u7684\u5e76\u53d1\u63a7\u5236\u5305\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u7528\u4e8e\u5f53\u8bf7\u6c42\u8d85\u65f6\u6216\u8005\u53d6\u6d88\u65f6\uff0c\u76f8\u5173\u7684 goroutine \u9a6c\u4e0a\u9000\u51fa\u91ca\u653e\u8d44\u6e90\uff0c\u53e6\u4e00\u65b9\u9762 Context \u672c\u8eab\u542b\u4e49\u5c31\u662f\u4e0a\u4e0b\u6587\uff0c\u5176\u53ef\u4ee5\u5728\u591a\u4e2a goroutine \u6216\u8005\u591a\u4e2a\u5904\u7406\u51fd\u6570\u4e4b\u95f4\u4f20\u9012\u5171\u4eab\u7684\u4fe1\u606f\u3002</p> <p>Context \u63a5\u53e3\u4e00\u5171\u5305\u542b\u56db\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li><code>Deadline</code>\uff1a\u8fd4\u56de\u7ed1\u5b9a\u8be5 context \u4efb\u52a1\u7684\u6267\u884c\u8d85\u65f6\u65f6\u95f4\uff0c\u82e5\u672a\u8bbe\u7f6e\uff0c\u5219 ok \u7b49\u4e8e false</li> <li><code>Done</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb\u901a\u9053\uff0c\u5f53\u7ed1\u5b9a\u8be5 context \u7684\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u5e76\u8c03\u7528 cancel \u65b9\u6cd5\u6216\u8005\u4efb\u52a1\u6267\u884c\u8d85\u65f6\u65f6\u5019\uff0c\u8be5\u901a\u9053\u4f1a\u88ab\u5173\u95ed</li> <li><code>Err</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u5982\u679c Done \u8fd4\u56de\u7684\u901a\u9053\u672a\u5173\u95ed\u5219\u8fd4\u56de nil,\u5982\u679c context \u5982\u679c\u88ab\u53d6\u6d88\uff0c\u8fd4\u56de Canceled \u9519\u8bef\uff0c\u5982\u679c\u8d85\u65f6\u5219\u4f1a\u8fd4\u56de DeadlineExceeded \u9519\u8bef</li> <li><code>Value</code>\uff1a\u6839\u636e key \u8fd4\u56de\uff0c\u5b58\u50a8\u5728 context \u4e2d k-v \u6570\u636e</li> </ul>","boost":2},{"location":"golang/#context","title":"\u5b9e\u73b0 Context \u63a5\u53e3\u7684\u7c7b\u578b","text":"<p>Context \u4e00\u5171\u6709 4 \u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 Context \u63a5\u53e3, \u5206\u522b\u662f <code>emptyCtx, cancelCtx, timerCtx, valueCtx</code>\u3002\u6bcf\u4e2a\u7c7b\u578b\u90fd\u5173\u8054\u4e00\u4e2a\u521b\u5efa\u65b9\u6cd5\u3002</p> <p> </p>","boost":2},{"location":"golang/#context_1","title":"Context \u7684\u4f7f\u7528\u573a\u666f","text":"<pre><code>ctx, cancel := context.WithTimeout(context.Background(), time.Second*5)\ndefer cancel()\n\nfor {\n    select {\n    default:\n      fmt.Println(\"work\")\n    case &lt;-ctx.Done():\n      fmt.Println(\"work done\")\n      return\n    }\n}\n</code></pre> <ol> <li>\u5e76\u53d1\u63a7\u5236\uff1a<code>context.WithCancel</code>\u3002\u5f53\u6211\u4eec\u9700\u8981\u540c\u65f6\u542f\u52a8\u591a\u4e2a goroutine \u8fdb\u884c\u4efb\u52a1\u5904\u7406\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Context \u6765\u63a7\u5236\u8fd9\u4e9b goroutine \u7684\u6267\u884c\u3002\u5728\u6bcf\u4e2a goroutine \u4e2d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u68c0\u6d4b Context \u5bf9\u8c61\u662f\u5426\u88ab\u53d6\u6d88\uff0c\u5982\u679c\u662f\uff0c\u5219\u9000\u51fa goroutine \u7684\u6267\u884c\uff0c\u5426\u5219\u7ee7\u7eed\u6267\u884c\u3002</li> <li>\u8d85\u65f6\u63a7\u5236\uff1a<code>context.WithTimeout</code>\u3002\u5bf9\u4e00\u4e2a\u64cd\u4f5c\u8bbe\u7f6e\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Context \u6765\u63a7\u5236\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u3002\u5728\u64cd\u4f5c\u6267\u884c\u8d85\u65f6\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u77e5 Context \u5bf9\u8c61\u548c\u5176\u5b50 Context \u5bf9\u8c61\u53d6\u6d88\u6267\u884c\u3002</li> <li>\u6570\u636e\u5e93\u8fde\u63a5\uff1a<code>context.WithTimeout</code>\u3002\u4f7f\u7528 Context \u6765\u63a7\u5236\u8fde\u63a5\u7684\u751f\u547d\u5468\u671f\u3002</li> <li>HTTP \u8bf7\u6c42\uff1a<code>context.WithTimeout</code>\u3002\u8bbe\u7f6e\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u786e\u4fdd\u8bf7\u6c42\u80fd\u591f\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5f97\u5230\u54cd\u5e94\u3002<code>http.NewRequestWithContext(ctx, http.MethodGet, \"https://www.example.com\", nil)</code>\u3002</li> <li>gRPC \u8bf7\u6c42\uff1a<code>context.WithTimeout</code>\u3002</li> </ol> <p>Context \u4f7f\u7528\u89c4\u8303</p> <p>\u4f7f\u7528 Context \u7684\u662f\u5e94\u8be5\u51c6\u5b88\u4ee5\u4e0b\u539f\u5219\u6765\u4fdd\u8bc1\u5728\u4e0d\u540c\u5305\u4e2d\u4f7f\u7528\u65f6\u5019\u7684\u63a5\u53e3\u4e00\u81f4\u6027\uff0c\u4ee5\u53ca\u80fd\u8ba9\u9759\u6001\u5206\u6790\u5de5\u5177\u53ef\u4ee5\u68c0\u67e5 context \u7684\u4f20\u64ad\uff1a</p> <ul> <li>\u4e0d\u8981\u5c06 Context \u4f5c\u4e3a\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u5b57\u6bb5\u5b58\u50a8\uff0c\u76f8\u53cd\u800c\u5e94\u8be5\u663e\u793a\u4f20\u9012 Context \u7ed9\u6bcf\u4e00\u4e2a\u9700\u8981\u5b83\u7684\u51fd\u6570\uff0cContext \u5e94\u8be5\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u547d\u540d\u4e3a ctx</li> <li>\u4e0d\u8981\u4f20\u9012\u4e00\u4e2a nil Context \u7ed9\u4e00\u4e2a\u51fd\u6570\uff0c\u5373\u4f7f\u8be5\u51fd\u6570\u80fd\u591f\u63a5\u53d7\u5b83\u3002\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a Context\uff0c\u90a3\u4f60\u5c31\u4f20\u9012 context.TODO</li> <li>context \u662f\u5e76\u53d1\u5b89\u5168\u7684\uff0c\u76f8\u540c\u7684 Context \u80fd\u591f\u4f20\u9012\u7ed9\u8fd0\u884c\u5728\u4e0d\u540c goroutine \u7684\u51fd\u6570</li> </ul>","boost":2},{"location":"golang/#14-go-panic","title":"14. Go \u6355\u83b7\u5b50\u534f\u7a0b panic","text":"<p>\u5f53\u4e00\u4e2a\u5b50\u534f\u7a0b\u4e2d\u53d1\u751f panic \u65f6\uff0c\u5b83\u4f1a\u5411\u4e0a\u4f20\u64ad\u76f4\u5230\u88ab\u4e3b\u534f\u7a0b\u6216\u5b83\u7684\u7236\u534f\u7a0b\u6355\u83b7\u6216\u5bfc\u81f4\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u4f7f\u7528 defer \u5173\u952e\u5b57\u548c recover() \u51fd\u6570\u53ef\u4ee5\u9632\u6b62 panic \u5411\u4e0a\u4f20\u64ad\u5e76\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    go func() {\n        defer func() {\n            if r := recover(); r != nil {\n                fmt.Println(\"Recovered from panic:\", r)\n            }\n        }()\n        panic(\"Oops! Something went wrong!\")\n    }()\n    fmt.Println(\"Main goroutine exiting...\")\n}\n</code></pre>","boost":2},{"location":"golang/#15-kill-goroutine","title":"15. \u8fdb\u7a0b\u88ab kill\uff0c\u5982\u4f55\u4fdd\u8bc1\u6240\u6709 goroutine \u987a\u5229\u9000\u51fa\uff1f","text":"<p>\u4f7f\u7528 Go \u8bed\u8a00\u63d0\u4f9b\u7684 <code>sync.WaitGroup</code> \u7c7b\u578b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd</p> <pre><code>var wg sync.WaitGroup\n\n// \u5728\u542f\u52a8\u65b0\u7684goroutine\u65f6\uff0c\u8c03\u7528WaitGroup\u7684Add\u65b9\u6cd5\u6765\u589e\u52a0goroutine\u7684\u8ba1\u6570\u5668\nwg.Add(1)\ngo func() {\n    // \u5728goroutine\u7ed3\u675f\u65f6\uff0c\u8c03\u7528WaitGroup\u7684Done\u65b9\u6cd5\u6765\u51cf\u5c11\u8ba1\u6570\u5668\u7684\u503c\n    defer wg.Done()\n\n    // goroutine\u4ee3\u7801\n}()\n\n// \u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u8c03\u7528WaitGroup\u7684Wait\u65b9\u6cd5\u6765\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u7684goroutine\u90fd\u7ed3\u675f\nwg.Wait()\n</code></pre>","boost":2},{"location":"golang/#16-go-interface","title":"16. Go Interface \u4ecb\u7ecd","text":"<p>\u5728 Golang \u4e2d\uff0cinterface \u662f\u4e00\u7ec4 method \u7684\u96c6\u5408\uff0c\u662f duck-type programming \u7684\u4e00\u79cd\u4f53\u73b0\uff0c\u9e2d\u5b50\u7c7b\u578b\u7f16\u7a0b\u3002</p>","boost":2},{"location":"golang/#interface","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528 Interface\uff1f","text":"<ol> <li>\u53ef\u4ee5\u5b9e\u73b0\u6cdb\u578b\u7f16\u7a0b\uff1a    Sort \u51fd\u6570\u7684\u5f62\u53c2\u662f\u4e00\u4e2a interface\uff0c\u5305\u542b\u4e86\u4e09\u4e2a\u65b9\u6cd5\uff1aLen()\uff0cLess(i,j int)\uff0cSwap(i, j int)\u3002\u4f7f\u7528\u7684\u65f6\u5019\u4e0d\u7ba1\u6570\u7ec4\u7684\u5143\u7d20\u7c7b\u578b\u662f\u4ec0\u4e48\u7c7b\u578b\uff08int, float, string\u2026\uff09\uff0c\u53ea\u8981\u6211\u4eec\u5b9e\u73b0\u4e86\u8fd9\u4e09\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4f7f\u7528 Sort \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u201c\u6cdb\u578b\u7f16\u7a0b\u201d</li> <li>\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2a interface\uff0c\u53ea\u80fd\u901a\u8fc7 interface \u91cc\u9762\u7684\u65b9\u6cd5\u6765\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5177\u4f53\u5185\u90e8\u5b9e\u73b0\u5e76\u4e0d\u77e5\u9053\u3002\u4f8b\u5982\u6211\u4eec\u5e38\u7528\u7684 context \u5305\u3002</li> <li>\u53ef\u4ee5\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u591a\u6001\u7528\u6cd5\u3002\u5728 Go \u91cc\u9762\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\u5b9e\u73b0 interface \u4e2d\u5b9a\u4e49\u7684\u90a3\u4e9b\u51fd\u6570\uff0c\u5219\u79f0\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u5b9e\u73b0\uff08implement\uff09\u4e86\u8fd9\u4e2a\u63a5\u53e3 interface\u3002</li> <li>\u7a7a\u63a5\u53e3\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\uff1a\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u6240\u6709\u5176\u5b83\u6570\u636e\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3\u3002\u5f53\u6211\u4eec\u7ed9 func \u5b9a\u4e49\u4e86\u4e00\u4e2a interface{} \u7c7b\u578b\u7684\u53c2\u6570(\u4e5f\u5c31\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3)\u4e4b\u540e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\uff0c\u5b98\u65b9\u5305\u4e2d\u6700\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f\u6807\u51c6\u5e93 fmt \u5305\u4e2d\u7684 Print \u548c Fprint \u7cfb\u5217\u7684\u51fd\u6570\u3002\u975e\u4fb5\u5165\u5f0f\u63a5\u53e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002</li> </ol>","boost":2},{"location":"golang/#go-interface","title":"Go interface \u7684\u5e38\u89c1\u5e94\u7528","text":"<ol> <li>\u901a\u8fc7\u5bf9\u8c61\u5b9e\u4f8b\u8d4b\u503c\uff1a</li> <li>interface \u63a5\u53e3\u5d4c\u5957\uff1a\u5982 io package \u4e2d\u7684 ReadWrite \u63a5\u53e3\uff0c\u5d4c\u5957\u4e86 <code>io.Reader</code> \u548c <code>io.Writer</code> \u4e24\u4e2a\u63a5\u53e3\u3002\u4f46 Go \u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\u4e0d\u80fd\u9012\u5f52\u5d4c\u5957\u3002</li> <li>interface \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a<code>ret, ok := interface.(type)</code> \u65ad\u8a00\uff0c<code>switch x.(type)</code></li> <li>interface \u4e0e nil \u7684\u6bd4\u8f83\uff1a\u4e00\u4e2a interface{} \u7c7b\u578b\u7684\u53d8\u91cf\u5305\u542b\u4e86 2 \u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u9488\u6307\u5411\u503c\u7684\u7c7b\u578b <code>T</code>\uff0c\u53e6\u5916\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b9e\u9645\u7684\u503c <code>V</code>\u3002interface \u7c7b\u578b\u6bd4\u8f83\uff0c \u8981\u662f\u4e24\u4e2a\u6307\u9488\u90fd\u76f8\u7b49\uff0c\u624d\u80fd\u76f8\u7b49\u3002</li> </ol> <p>2 \u4e2a interface \u53ef\u4ee5\u6bd4\u8f83\u5417 \uff1f</p> <p>Go \u8bed\u8a00\u4e2d\uff0cinterface \u7684\u5185\u90e8\u5b9e\u73b0\u5305\u542b\u4e86 2 \u4e2a\u5b57\u6bb5\uff0c\u7c7b\u578b T \u548c \u503c V\uff0cinterface \u53ef\u4ee5\u4f7f\u7528 == \u6216 != \u6bd4\u8f83\u30022 \u4e2a interface \u76f8\u7b49\u6709\u4ee5\u4e0b 2 \u79cd\u60c5\u51b5</p> <ul> <li>\u4e24\u4e2a interface \u5747\u7b49\u4e8e nil\uff08\u6b64\u65f6 V \u548c T \u90fd\u5904\u4e8e unset \u72b6\u6001\uff09</li> <li>\u7c7b\u578b T \u76f8\u540c\uff0c\u4e14\u5bf9\u5e94\u7684\u503c V \u76f8\u7b49\u3002</li> </ul>","boost":2},{"location":"golang/#17-2-nil","title":"17. 2 \u4e2a nil \u53ef\u80fd\u4e0d\u76f8\u7b49\u5417\uff1f","text":"<p>\u53ef\u80fd\u4e0d\u7b49\u3002interface \u5728\u8fd0\u884c\u65f6\u7ed1\u5b9a\u503c\uff0c\u53ea\u6709\u503c\u4e3a nil \u63a5\u53e3\u503c\u624d\u4e3a nil\uff0c\u4f46\u662f\u4e0e\u6307\u9488\u7684 nil \u4e0d\u76f8\u7b49\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>var p *int = nil\nvar i interface{} = nil\nif(p == i){\n    fmt.Println(\"Equal\")\n}\n</code></pre> <p>\u4e24\u8005\u5e76\u4e0d\u76f8\u540c\u3002\u603b\u7ed3\uff1a\u4e24\u4e2a nil \u53ea\u6709\u5728\u7c7b\u578b\u76f8\u540c\u65f6\u624d\u76f8\u7b49\u3002</p>","boost":2},{"location":"golang/#18-goroutine","title":"18. \u5982\u4f55\u7075\u6d3b\u63a7\u5236 goroutine \u5e76\u53d1\u6570\u91cf\uff1f","text":"<ul> <li>\u5e26\u7f13\u51b2\u7684 channel + sync \u5e93\uff1a <code>sync.WaitGroup</code>\u3002</li> <li>\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff1a\u5982 panjf2000/ants</li> </ul>","boost":2},{"location":"golang/#19-go-select","title":"19. Go select \u4f18\u5148\u7ea7\u6267\u884c","text":"<p>\u53c2\u8003\uff1aGo \u8bed\u8a00\u5728 select \u8bed\u53e5\u4e2d\u5b9e\u73b0\u4f18\u5148\u7ea7</p> <ul> <li>select \u4e0d\u5b58\u5728\u4efb\u4f55\u7684 case\uff1a\u6c38\u4e45\u963b\u585e\u5f53\u524d\u7684 goroutine</li> <li>select \u53ea\u5b58\u5728\u4e00\u4e2a case\uff1a\u963b\u585e\u7684\u53d1\u9001/\u63a5\u6536</li> <li>select \u5b58\u5728\u591a\u4e2a case\uff1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684 case \u6267\u884c</li> <li>select \u5b58\u5728 default\uff0c\u5176\u4ed6 case \u90fd\u4e0d\u6ee1\u8db3\uff1a\u6267\u884c default \u4e2d\u7684\u4ee3\u7801</li> </ul>","boost":2},{"location":"golang/#select","title":"select \u8bed\u53e5\u4e2d\u5b9e\u73b0\u4f18\u5148\u7ea7","text":"<p>\u5d4c\u5957 select\uff0c\u7ec4\u5408\u4f7f\u7528 <code>for</code> \u548c <code>LABEL</code>\u3002\u5916\u5c42 select \u9009\u4e2d\u6267\u884c <code>B := &lt;-ch2</code>\u65f6\uff0c\u8fdb\u5165\u5185\u5b58\u7684 select \u5faa\u73af\u5c1d\u8bd5\u6267\u884c <code>A := &lt;-ch1:</code>\uff0c\u5f53 <code>ch1</code> \u5c31\u7eea\u5c31\u4f1a\u4e00\u76f4\u6267\u884c\uff0c\u5426\u5219\u8df3\u51fa\u5185\u5c42\u7684 select\uff0c\u6267\u884c B\u3002</p> <p>\u5148\u8dd1 A\uff0cA \u786e\u5b9a\u6ca1\u8dd1\u518d\u8dd1 B</p> <pre><code>func worker(ch1, ch2 &lt;-chan int, stopCh chan struct{}) {\n    for {\n        select {\n        case &lt;-stopCh:\n            return\n        case A := &lt;-ch1:\n            fmt.Println(job1)\n        case B := &lt;-ch2:\n\n        priority:\n            for {\n                select {\n                case A := &lt;-ch1:\n                    fmt.Println(A)\n                default:\n                    break priority\n                }\n            }\n            fmt.Println(B)\n        }\n    }\n}\n</code></pre>","boost":2},{"location":"golang/#20-go-slice","title":"20. go slice \u662f\u600e\u4e48\u6269\u5bb9\u7684\uff1f","text":"","boost":2},{"location":"golang/#go-117","title":"Go &lt;= 1.17","text":"<p>\u4ee5\u5bb9\u91cf 1024 \u4e3a\u4e34\u754c\u70b9</p> <ul> <li>\u5982\u679c\u5f53\u524d\u5bb9\u91cf\u5c0f\u4e8e 1024\uff0c\u5219\u5224\u65ad\u6240\u9700\u5bb9\u91cf\u662f\u5426\u5927\u4e8e\u539f\u6765\u5bb9\u91cf 2 \u500d\uff0c\u5982\u679c\u5927\u4e8e\uff0c\u5f53\u524d\u5bb9\u91cf\u52a0\u4e0a\u6240\u9700\u5bb9\u91cf\uff1b\u5426\u5219\u5f53\u524d\u5bb9\u91cf\u4e58 2\u3002</li> <li>\u5982\u679c\u5f53\u524d\u5bb9\u91cf\u5927\u4e8e 1024\uff0c\u5219\u6bcf\u6b21\u6309\u7167 1.25 \u500d\u901f\u5ea6\u9012\u589e\u5bb9\u91cf\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u52a0\u4e0a cap/4\u3002</li> </ul>","boost":2},{"location":"golang/#go118","title":"Go1.18 \u4e4b\u540e\uff0c\u5f15\u5165\u4e86\u65b0\u7684\u6269\u5bb9\u89c4\u5219","text":"<p>\u53c2\u8003\uff1aGo 1.18 \u5168\u65b0\u7684\u5207\u7247\u6269\u5bb9\u673a\u5236</p> <p>Go1.18 \u4e0d\u518d\u4ee5 1024 \u4e3a\u4e34\u754c\u70b9\uff0c\u800c\u662f\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u503c\u4e3a 256 \u7684 threshold\uff0c\u4ee5 256 \u4e3a\u4e34\u754c\u70b9\uff1b\u8d85\u8fc7 256\uff0c\u4e0d\u518d\u662f\u6bcf\u6b21\u6269\u5bb9 1/4\uff0c\u800c\u662f\u6bcf\u6b21\u589e\u52a0 <code>(\u65e7\u5bb9\u91cf+3*256)/4</code>\uff1b</p> <ul> <li>\u5f53\u65b0\u5207\u7247\u9700\u8981\u7684\u5bb9\u91cf cap \u5927\u4e8e\u4e24\u500d\u6269\u5bb9\u7684\u5bb9\u91cf\uff0c\u5219\u76f4\u63a5\u6309\u7167\u65b0\u5207\u7247\u9700\u8981\u7684\u5bb9\u91cf\u6269\u5bb9\uff1b</li> <li>\u5f53\u539f <code>slice \u5bb9\u91cf &lt; threshold</code>\uff0c\u65b0 slice \u5bb9\u91cf\u53d8\u6210\u539f\u6765\u7684 2 \u500d\uff1b</li> <li>\u5f53\u539f <code>slice \u5bb9\u91cf &gt; threshold</code>\uff0c\u8fdb\u5165\u4e00\u4e2a\u5faa\u73af\uff0c\u6bcf\u6b21\u5bb9\u91cf\u589e\u52a0 <code>(\u65e7\u5bb9\u91cf+3*256)/4</code>\u3002</li> </ul> \\[ new_cap = \\begin{cases} cap                                       &amp; if \\ cap &gt; old\\_cap * 2 \\\\ old\\_cap * 2                              &amp; if \\ old\\_cap &lt; threshold \\\\ old\\_cap + \\frac{old\\_cap+3*threshold}{4} &amp; if \\ old\\_cap &gt; threshold \\\\ \\end{cases} \\]","boost":2},{"location":"golang/#_4","title":"\u53c2\u8003","text":"<ul> <li>Go \u8bed\u8a00 unsafe.Pointer \u6d45\u6790</li> </ul>","boost":2},{"location":"golang/coding/","title":"\u4ee3\u7801\u9898\u76ee","text":"","boost":2},{"location":"golang/coding/#2-goroutine","title":"2 \u4e2a goroutine \u4ea4\u66ff\u6253\u5370\u5947\u6570\u548c\u5076\u6570","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc main() {\n    wg := sync.WaitGroup{}\n    ch1 := make(chan struct{})\n    ch2 := make(chan struct{})\n    wg.Add(2)\n\n    go func() {\n        defer wg.Done()\n        for i := 1; i &lt; 100; i += 2 {\n            &lt;-ch1\n            fmt.Println(\"g1: \", i)\n            ch2 &lt;- struct{}{}\n        }\n        &lt;-ch1 // \u8bfb\u8d70\u6700\u540e\u4e00\u4e2a\u4ece\u534f\u7a0b2\u4f20\u5165\u7684\uff0c\u9632\u6b62\u6b7b\u9501\n    }()\n\n    go func() {\n        defer wg.Done()\n        for i := 2; i &lt;= 100; i += 2 {\n            &lt;-ch2\n            fmt.Println(\"g2: \", i)\n            ch1 &lt;- struct{}{}\n        }\n    }()\n\n    ch1 &lt;- struct{}{}\n    wg.Wait()\n}\n</code></pre>","boost":2},{"location":"golang/coding/#2-goroutine_1","title":"2 \u4e2a goroutine \u4ea4\u66ff\u6253\u5370\u5b57\u6bcd\u548c\u6570\u5b57","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc main() {\n    var numChan, strChan = make(chan struct{}), make(chan struct{})\n    var wg sync.WaitGroup\n\n    wg.Add(2)\n\n    // \u6253\u5370\u6570\u5b57\n    go func() {\n        defer wg.Done()\n        for i := 1; i &lt;= 26; i++ {\n            &lt;-numChan             // \u963b\u585e\u76f4\u5230\u5b57\u6bcd\u88ab\u6253\u5370\u540e numChan\u5199\u5165\n            fmt.Printf(\"%v\", i)   /// \u6253\u5370\u6570\u5b57\n            strChan &lt;- struct{}{} // strChan\u5199\u5165\uff0c\u6253\u5370\u5b57\u6bcd\u7684\u534f\u7a0b\u7684strChan\u53d6\u51fa\uff0c\u624d\u4f1a\u6253\u5370\u5b57\u6bcd\n        }\n        &lt;-numChan // \u8bfb\u8d70\u6700\u540e\u4e00\u4e2a\u4ece\u534f\u7a0b2\u4f20\u5165\u7684\uff0c\u9632\u6b62\u6b7b\u9501\n    }()\n\n    // \u6253\u5370\u5b57\u6bcd\n    go func() {\n        defer wg.Done()\n        for i := 65; i &lt;= 90; i++ {\n            &lt;-strChan\n            fmt.Printf(\"%v\", string(rune(i)))\n            numChan &lt;- struct{}{}\n        }\n    }()\n\n    numChan &lt;- struct{}{}\n    wg.Wait()\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <pre><code>1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z\n</code></pre>","boost":2},{"location":"golang/coding/#2-goroutine-ab","title":"2 \u4e2a goroutine \u4ea4\u66ff\u6253\u5370 AB","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc main() {\n\n    wg := sync.WaitGroup{}\n    c1 := make(chan int, 1)\n    c2 := make(chan int)\n    wg.Add(2)\n\n    go func() {\n        defer wg.Done()\n        for i := 0; i &lt; 10; i++ {\n            &lt;-c1\n            fmt.Print(\"A\")\n            c2 &lt;- 1\n        }\n    }()\n\n    go func() {\n        defer wg.Done()\n        for i := 0; i &lt; 10; i++ {\n            &lt;-c2\n            fmt.Print(\"B\")\n            c1 &lt;- 1\n        }\n    }()\n\n    c1 &lt;- 1\n    wg.Wait()\n}\n</code></pre> <p>\u7ed3\u679c\u8f93\u51fa</p> <pre><code>ABABABABABABABABABAB\n</code></pre>","boost":2},{"location":"golang/coding/#3-goroutine-abc","title":"3 \u4e2a goroutine \u4ea4\u66ff\u6253\u5370 ABC","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc main() {\n    var (\n        ch1 = make(chan struct{})\n        ch2 = make(chan struct{})\n        ch3 = make(chan struct{})\n        wg  = sync.WaitGroup{}\n    )\n    wg.Add(3)\n    go func(s string) {\n        defer wg.Done()\n        for i := 0; i &lt;= 10; i++ {\n            &lt;-ch1\n            fmt.Print(s)\n            ch2 &lt;- struct{}{}\n        }\n        &lt;-ch1\n    }(\"A\")\n\n    go func(s string) {\n        defer wg.Done()\n        for i := 0; i &lt;= 10; i++ {\n            &lt;-ch2\n            fmt.Print(s)\n            ch3 &lt;- struct{}{}\n        }\n    }(\"B\")\n\n    go func(s string) {\n        defer wg.Done()\n        for i := 0; i &lt;= 10; i++ {\n            &lt;-ch3\n            fmt.Print(s)\n            ch1 &lt;- struct{}{}\n        }\n    }(\"C\")\n\n    ch1 &lt;- struct{}{}\n    wg.Wait()\n}\n</code></pre> <p>\u7ed3\u679c\u8f93\u51fa</p> <pre><code>ABCABCABCABCABCABCABCABCABCABCABC\n</code></pre>","boost":2},{"location":"golang/coding/#_1","title":"\u4f7f\u7528\u591a\u534f\u7a0b\u5e76\u53d1\u5730\u6309\u7167\u987a\u5e8f\u6253\u5370\u5b57\u6bcd\u8868","text":"<p>[Goroutine]\u4f7f\u7528\u591a\u534f\u7a0b\u5e76\u53d1\u5730\u6309\u7167\u987a\u5e8f\u6253\u5370\u5b57\u6bcd\u8868</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nfunc printAlphabet(letter rune, prevCh, nextCh chan struct{}, wg *sync.WaitGroup) {\n    defer wg.Done()\n    for i := 0; i &lt; 3; i++ {\n        &lt;-prevCh\n        fmt.Printf(\"%c\", letter)\n        nextCh &lt;- struct{}{}\n    }\n    // \u7b2c\u4e00\u4e2a\u534f\u7a0b\u5fc5\u987b\u8981\u9000\u51fa\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u534f\u7a0b\u5f80\u7ba1\u9053\u91cc\u9762\u5199\u5165\u6570\u636e\u4e86\uff0c\u9700\u8981\u7834\u73af\u800c\u51fa\u4e0d\u7136\u5c31\u4f1a\u6b7b\u9501\n    if letter == 'a' {\n        &lt;-prevCh\n    }\n}\n\nfunc main() {\n    var wg sync.WaitGroup\n    wg.Add(26)\n\n    var signals []chan struct{}\n    for i := 0; i &lt; 26; i++ {\n        signals = append(signals, make(chan struct{}))\n    }\n\n    for letter, i := 'a', 0; letter &lt;= 'z'; letter++ {\n        if letter == 'z' {\n            go printAlphabet(letter, signals[i], signals[0], &amp;wg)\n            break\n        }\n        go printAlphabet(letter, signals[i], signals[i+1], &amp;wg)\n        i++\n    }\n\n    // \u542f\u52a8\u7b2c\u4e00\u4e2a\u534f\u7a0b\n    signals[0] &lt;- struct{}{}\n    wg.Wait()\n}\n</code></pre> <pre><code>abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\n</code></pre>","boost":2},{"location":"golang/coding/#n-groutine-1-100","title":"N \u4e2a groutine \u4ea4\u66ff\u6253\u5370 1-100","text":"<p>\u591a\u4e2a\u534f\u7a0b\u4ea4\u66ff\u6253\u5370</p> <ol> <li>\u542f\u52a8 N \u4e2a\u534f\u7a0b\uff0c\u5171\u7528\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u8303\u56f4\u662f 1 \u5230 100</li> <li>\u5f00\u542f N \u4e2a\u6709\u7f13\u51b2 chan\uff0cchans[i]\u585e\u5165\u6570\u636e\u4ee3\u8868\u534f\u7a0b i \u53ef\u4ee5\u8fdb\u884c\u6253\u5370\u4e86</li> <li>\u534f\u7a0b i \u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230 chan[i]\u901a\u9053\u6709\u6570\u636e\u53ef\u4ee5\u62c9\uff0c\u624d\u6253\u5370</li> </ol> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    goroutineNum := 5\n    var chanSlice []chan int\n    exitChan := make(chan int)\n\n    for i := 0; i &lt; goroutineNum; i++ { // \u521b\u5efaN\u4e2achannel\n        chanSlice = append(chanSlice, make(chan int, 1))\n    }\n\n    num := 1\n    j := 0\n    for i := 0; i &lt; goroutineNum; i++ { // \u521b\u5efaN\u4e2a\u534f\u7a0b\n        go func(i int) {\n            for {\n                &lt;-chanSlice[i] // \u5faa\u73af\u963b\u585e\u7b49\u5f85\n                if num &gt; 100 {\n                    exitChan &lt;- 1\n                    break\n                }\n\n                fmt.Println(fmt.Sprintf(\"gorutine%v:%v\", i, num))\n                num++\n\n                if j == goroutineNum-1 { // j\u6765\u63a7\u5236\u542f\u52a8\u54ea\u4e2a\u534f\u7a0b\u6765\u6253\u5370\n                    j = 0\n                } else {\n                    j++\n                }\n                chanSlice[j] &lt;- 1\n            }\n        }(i)\n    }\n    chanSlice[0] &lt;- 1\n\n    select {\n    case &lt;-exitChan:\n        fmt.Println(\"end\")\n    }\n}\n</code></pre>","boost":2},{"location":"golang/gc/","title":"\u5783\u573e\u56de\u6536GC","text":"","boost":2},{"location":"golang/gc/#gc","title":"GC","text":"<p>GC\uff0c\u5168\u79f0 Garbage Collection\uff0c\u5373\u5783\u573e\u56de\u6536\uff0c\u662f\u4e00\u79cd\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\u7684\u673a\u5236\u3002\u5783\u573e\u56de\u6536\u673a\u5236\u662f Go \u4e00\u5927\u7279\u70b9\u3002</p> <ul> <li>Go 1.3 \u91c7\u7528\u6807\u8bb0\u6e05\u9664\u6cd5</li> <li>Go 1.5 \u91c7\u7528\u4e09\u8272\u6807\u8bb0\u6cd5</li> <li>Go 1.8 \u91c7\u7528\u4e09\u8272\u6807\u8bb0\u6cd5+\u6df7\u5408\u5199\u5c4f\u969c</li> </ul>","boost":2},{"location":"golang/gc/#go-13","title":"Go 1.3 \u6807\u8bb0\u6e05\u9664\u6cd5","text":"<p>\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u6807\u8bb0\u548c\u6e05\u9664</p> <ul> <li>\u6807\u8bb0\u9636\u6bb5\uff1a\u4ece\u6839\u5bf9\u8c61\u51fa\u53d1\u5bfb\u627e\u5e76\u6807\u8bb0\u6240\u6709\u5b58\u6d3b\u7684\u5bf9\u8c61\u3002</li> <li>\u6e05\u9664\u9636\u6bb5\uff1a\u904d\u5386\u5806\u4e2d\u7684\u5bf9\u8c61\uff0c\u56de\u6536\u672a\u6807\u8bb0\u7684\u5bf9\u8c61\uff0c\u5e76\u52a0\u5165\u7a7a\u95f2\u94fe\u8868\u3002</li> </ul> <p>\u7f3a\u70b9\u662f\u9700\u8981\u6682\u505c\u7a0b\u5e8f STW\u3002</p>","boost":2},{"location":"golang/gc/#go-15","title":"Go 1.5 \u4e09\u8272\u6807\u8bb0\u6cd5\uff1a","text":"<p>\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u767d\u8272\uff0c\u7070\u8272\u6216\u9ed1\u8272\u3002</p> <ul> <li>\u767d\u8272\uff1a\u4e0d\u786e\u5b9a\u5bf9\u8c61\uff08\u9ed8\u8ba4\u8272\uff09\uff1b</li> <li>\u9ed1\u8272\uff1a\u5b58\u6d3b\u5bf9\u8c61\u3002</li> <li>\u7070\u8272\uff1a\u5b58\u6d3b\u5bf9\u8c61\uff0c\u5b50\u5bf9\u8c61\u5f85\u5904\u7406\u3002</li> </ul> <p>\u6807\u8bb0\u5f00\u59cb\u65f6\uff0c\u5148\u5c06\u6240\u6709\u5bf9\u8c61\u52a0\u5165\u767d\u8272\u96c6\u5408\uff08\u9700\u8981 STW\uff09\u3002\u9996\u5148\u5c06\u6839\u5bf9\u8c61\u6807\u8bb0\u4e3a\u7070\u8272\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u4ece\u7070\u8272\u96c6\u5408\u53d6\u51fa\uff0c\u904d\u5386\u5176\u5b50\u5bf9\u8c61\uff0c\u653e\u5165\u7070\u8272\u96c6\u5408\u3002\u540c\u65f6\u5c06\u53d6\u51fa\u7684\u5bf9\u8c61\u653e\u5165\u9ed1\u8272\u96c6\u5408\uff0c\u76f4\u5230\u7070\u8272\u96c6\u5408\u4e3a\u7a7a\u3002\u6700\u540e\u7684\u767d\u8272\u96c6\u5408\u5bf9\u8c61\u5c31\u662f\u9700\u8981\u6e05\u7406\u7684\u5bf9\u8c61\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e00\u4e2a\u7f3a\u9677\uff0c\u5982\u679c\u5bf9\u8c61\u7684\u5f15\u7528\u88ab\u7528\u6237\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u4e4b\u524d\u7684\u6807\u8bb0\u5c31\u65e0\u6548\u4e86\u3002\u56e0\u6b64 Go \u91c7\u7528\u4e86\u5199\u5c4f\u969c\u6280\u672f\uff0c\u5f53\u5bf9\u8c61\u65b0\u589e\u6216\u8005\u66f4\u65b0\u4f1a\u5c06\u5176\u7740\u8272\u4e3a\u7070\u8272\u3002</p>","boost":2},{"location":"golang/gc/#go-18","title":"Go 1.8 \u5199\u5c4f\u969c\u6280\u672f","text":"<p>\u4e00\u6b21\u5b8c\u6574\u7684 GC \u5206\u4e3a\u56db\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>\u51c6\u5907\u6807\u8bb0\uff08\u9700\u8981 STW\uff09\uff0c\u5f00\u542f\u5199\u5c4f\u969c\u3002</li> <li>\u5f00\u59cb\u6807\u8bb0</li> <li>\u6807\u8bb0\u7ed3\u675f\uff08STW\uff09\uff0c\u5173\u95ed\u5199\u5c4f\u969c</li> <li>\u6e05\u7406\uff08\u5e76\u53d1\uff09</li> </ol> <p>\u57fa\u4e8e\u63d2\u5165\u5199\u5c4f\u969c\u548c\u5220\u9664\u5199\u5c4f\u969c\u5728\u7ed3\u675f\u65f6\u9700\u8981 STW \u6765\u91cd\u65b0\u626b\u63cf\u6808\uff0c\u5e26\u6765\u6027\u80fd\u74f6\u9888\u3002</p> <p>\u6df7\u5408\u5199\u5c4f\u969c\u5206\u4e3a\u4ee5\u4e0b\u56db\u6b65\uff1a</p> <ol> <li>GC \u5f00\u59cb\u65f6\uff0c\u5c06\u6808\u4e0a\u7684\u5168\u90e8\u5bf9\u8c61\u6807\u8bb0\u4e3a\u9ed1\u8272\uff08\u4e0d\u9700\u8981\u4e8c\u6b21\u626b\u63cf\uff0c\u65e0\u9700 STW\uff09\uff1b</li> <li>GC \u671f\u95f4\uff0c\u4efb\u4f55\u6808\u4e0a\u521b\u5efa\u7684\u65b0\u5bf9\u8c61\u5747\u4e3a\u9ed1\u8272</li> <li>\u88ab\u5220\u9664\u5f15\u7528\u7684\u5bf9\u8c61\u6807\u8bb0\u4e3a\u7070\u8272</li> <li>\u88ab\u6dfb\u52a0\u5f15\u7528\u7684\u5bf9\u8c61\u6807\u8bb0\u4e3a\u7070\u8272</li> </ol> <p>\u603b\u800c\u8a00\u4e4b\u5c31\u662f\u786e\u4fdd\u9ed1\u8272\u5bf9\u8c61\u4e0d\u80fd\u5f15\u7528\u767d\u8272\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u6539\u8fdb\u76f4\u63a5\u4f7f\u5f97 GC \u65f6\u95f4\u4ece 2s \u964d\u4f4e\u5230 2us\u3002</p>","boost":2},{"location":"golang/gc/#stw","title":"STW \u662f\u4ec0\u4e48\u610f\u601d\uff1f","text":"<p><code>STW</code> \u53ef\u4ee5\u662f Stop the World \u7684\u7f29\u5199\uff0c\u4e5f\u53ef\u4ee5\u662f Start the World \u7684\u7f29\u5199\u3002\u901a\u5e38\u610f\u4e49\u4e0a\u6307\u6307\u4ee3\u4ece Stop the World \u8fd9\u4e00\u52a8\u4f5c\u53d1\u751f\u65f6\u5230 Start the World \u8fd9\u4e00\u52a8\u4f5c\u53d1\u751f\u65f6\u8fd9\u4e00\u6bb5\u65f6\u95f4\u95f4\u9694\uff0c\u5373\u4e07\u7269\u9759\u6b62\u3002STW \u5728\u5783\u573e\u56de\u6536\u8fc7\u7a0b\u4e2d\u4e3a\u4e86\u4fdd\u8bc1\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u3001\u9632\u6b62\u65e0\u6b62\u5883\u7684\u5185\u5b58\u589e\u957f\u7b49\u95ee\u9898\u800c\u4e0d\u53ef\u907f\u514d\u7684\u9700\u8981\u505c\u6b62\u8d4b\u503c\u5668\u8fdb\u4e00\u6b65\u64cd\u4f5c\u5bf9\u8c61\u56fe\u7684\u4e00\u6bb5\u8fc7\u7a0b\u3002</p>","boost":2},{"location":"golang/gmp/","title":"GMP\u8c03\u5ea6\u6a21\u578b","text":"","boost":2},{"location":"golang/gmp/#1-gmp","title":"1. GMP \u6a21\u578b\u7b80\u4ecb","text":"<p>G-M-P \u5206\u522b\u4ee3\u8868\uff1a</p> <ul> <li>G - Goroutine\uff0cGo \u534f\u7a0b\uff0c\u662f\u53c2\u4e0e\u8c03\u5ea6\u4e0e\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002</li> <li>M - Machine\uff0c\u6307\u7684\u662f\u7cfb\u7edf\u7ea7\u7ebf\u7a0b\uff0c\u5b83\u76f4\u63a5\u5173\u8054\u4e00\u4e2a os \u5185\u6838\u7ebf\u7a0b\uff0c\u7528\u4e8e\u6267\u884c G\u3002</li> <li>P - Processor\uff0c\u6307\u7684\u662f\u903b\u8f91\u5904\u7406\u5668\uff0cP \u5173\u8054\u4e86\u7684\u672c\u5730\u53ef\u8fd0\u884c G \u7684\u961f\u5217(\u4e5f\u79f0\u4e3a LRQ)\uff0c\u6700\u591a\u53ef\u5b58\u653e 256 \u4e2a G\u3002P \u91cc\u9762\u4e00\u822c\u4f1a\u5b58\u5f53\u524d goroutine \u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff08\u51fd\u6570\u6307\u9488\uff0c\u5806\u6808\u5730\u5740\u53ca\u5730\u5740\u8fb9\u754c\uff09\uff0cP \u4f1a\u5bf9\u81ea\u5df1\u7ba1\u7406\u7684 goroutine \u961f\u5217\u505a\u4e00\u4e9b\u8c03\u5ea6\u3002</li> </ul>","boost":2},{"location":"golang/gmp/#2-gmp","title":"2. GMP \u8c03\u5ea6\u6d41\u7a0b","text":"GMP\u6a21\u578b <p>\u5728 Go \u4e2d\uff0c\u7ebf\u7a0b\u662f\u8fd0\u884c goroutine \u7684\u5b9e\u4f53\uff0c\u8c03\u5ea6\u5668\u7684\u529f\u80fd\u662f\u628a\u53ef\u8fd0\u884c\u7684 goroutine \u5206\u914d\u5230\u5de5\u4f5c\u7ebf\u7a0b\u4e0a</p> <ul> <li>\u5168\u5c40\u961f\u5217\uff08Global Queue\uff09\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G</li> <li>P \u7684\u672c\u5730\u961f\u5217\uff08LRQ\uff09\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684 G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7 256 \u4e2a\u3002\u65b0\u5efa G'\u65f6\uff0cG'\u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u5219\u4f1a\u628a\u672c\u5730\u961f\u5217\u4e2d\u4e00\u534a\u7684 G \u79fb\u52a8\u5230\u5168\u5c40\u961f\u5217</li> <li>P \u5217\u8868\uff1a\u6240\u6709\u7684 P \u90fd\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5e76\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u6700\u591a\u6709 GOMAXPROCS(\u53ef\u914d\u7f6e)\u4e2a</li> <li>M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0cP \u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u62ff\u4e00\u6279 G \u653e\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u6216\u4ece\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u4e00\u534a\u653e\u5230\u81ea\u5df1 P \u7684\u672c\u5730\u961f\u5217\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb</li> </ul> <p>P \u548c M \u7684\u6570\u91cf\u95ee\u9898</p> <ul> <li>P\u7684\u6570\u91cf\uff1a\u73af\u5883\u53d8\u91cf <code>$GOMAXPROCS</code>\uff1b\u5728\u7a0b\u5e8f\u4e2d\u901a\u8fc7 <code>runtime.GOMAXPROCS()</code> \u6765\u8bbe\u7f6e</li> <li>M\u7684\u6570\u91cf\uff1aGo\u9ed8\u8ba4\u9650\u5236\u6700\u5927\u662f 10000\u4e2a (\u4f46\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fbe\u4e0d\u5230)\uff1b\u901a\u8fc7 <code>runtime/debug</code> \u5305\u4e2d\u7684 <code>SetMaxThreads</code> \u51fd\u6570\u6765\u8bbe\u7f6e\uff1b\u6709\u4e00\u4e2aM\u963b\u585e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684M\uff1b\u5982\u679c\u6709M\u7a7a\u95f2\uff0c\u90a3\u4e48\u5c31\u4f1a\u56de\u6536\u6216\u8005\u4f11\u7720</li> </ul> <p>M\u4e0eP\u7684\u6570\u91cf\u6ca1\u6709\u7edd\u5bf9\u5173\u7cfb\uff0c\u4e00\u4e2aM\u963b\u585e\uff0cP\u5c31\u4f1a\u53bb\u521b\u5efa\u6216\u8005\u5207\u6362\u53e6\u4e00\u4e2aM\uff0c\u6240\u4ee5\uff0c\u5373\u4f7fP\u7684\u9ed8\u8ba4\u6570\u91cf\u662f1\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u521b\u5efa\u5f88\u591a\u4e2aM\u51fa\u6765\u3002</p>","boost":2},{"location":"golang/gmp/#3","title":"3. \u8c03\u5ea6\u5668\u7684\u8bbe\u8ba1\u7b56\u7565","text":"<p>golang \u8c03\u5ea6\u5668\u7684\u8bbe\u8ba1\u7b56\u7565\u601d\u60f3\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ul> <li>\u590d\u7528\u7ebf\u7a0b</li> <li>\u5229\u7528\u5e76\u884c</li> <li>\u62a2\u5360</li> <li>\u5168\u5c40 G \u961f\u5217</li> </ul>","boost":2},{"location":"golang/gmp/#31","title":"3.1. \u590d\u7528\u7ebf\u7a0b","text":"<p>golang \u5728\u590d\u7528\u7ebf\u7a0b\u4e0a\u4e3b\u8981\u4f53\u73b0\u5728 work stealing \u673a\u5236 \u548c hand off \u673a\u5236\uff08\u5077\u522b\u4eba\u7684\u53bb\u6267\u884c\uff0c\u548c\u81ea\u5df1\u6254\u6389\u6267\u884c\uff09</p> <p> </p> <p>work stealing \u673a\u5236</p> <p>\u5e72\u5b8c\u6d3b\u7684\u7ebf\u7a0b\u4e0e\u5176\u7b49\u7740\uff0c\u4e0d\u5982\u53bb\u5e2e\u5176\u4ed6\u7ebf\u7a0b\u5e72\u6d3b\uff0c\u4e8e\u662f\u5b83\u5c31\u53bb\u5176\u4ed6\u7ebf\u7a0b\u7684\u961f\u5217\u91cc\u7a83\u53d6\u4e00\u4e2a\u4efb\u52a1\u6765\u6267\u884c\u3002\u800c\u5728\u8fd9\u65f6\u5b83\u4eec\u4f1a\u8bbf\u95ee\u540c\u4e00\u4e2a\u961f\u5217\uff0c\u6240\u4ee5\u4e3a\u4e86\u51cf\u5c11\u7a83\u53d6\u4efb\u52a1\u7ebf\u7a0b\u548c\u88ab\u7a83\u53d6\u4efb\u52a1\u7ebf\u7a0b\u4e4b\u95f4\u7684\u7ade\u4e89\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u53cc\u7aef\u961f\u5217\uff0c\u88ab\u7a83\u53d6\u4efb\u52a1\u7ebf\u7a0b\u6c38\u8fdc\u4ece\u53cc\u7aef\u961f\u5217\u7684\u5934\u90e8\u62ff\u4efb\u52a1\u6267\u884c\uff0c\u800c\u7a83\u53d6\u4efb\u52a1\u7684\u7ebf\u7a0b\u6c38\u8fdc\u4ece\u53cc\u7aef\u961f\u5217\u7684\u5c3e\u90e8\u62ff\u4efb\u52a1\u6267\u884c\u3002</p> <p> </p> <p>hand off \u673a\u5236</p> <p>\u5f53\u672c\u7ebf\u7a0b\u56e0\u4e3aG\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u963b\u585e\u65f6\uff0c\u7ebf\u7a0b\u91ca\u653e\u7ed1\u5b9a\u7684P\uff0c\u628aP\u8f6c\u79fb\u7ed9\u5176\u4ed6\u7a7a\u95f2\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\u6b64\u65f6M1\u5982\u679c\u957f\u65f6\u95f4\u963b\u585e\uff0c\u53ef\u80fd\u4f1a\u6267\u884c\u7761\u7720\u6216\u9500\u6bc1\u3002</p>","boost":2},{"location":"golang/gmp/#32","title":"3.2. \u5229\u7528\u5e76\u884c","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 GOMAXPROCS \u8bbe\u7f6e P \u7684\u6570\u91cf\uff0c\u8fd9\u6837\u7684\u8bdd\u6700\u591a\u6709 GOMAXPROCS \u4e2a\u7ebf\u7a0b\u5206\u5e03\u5728\u591a\u4e2a CPU \u4e0a\u540c\u65f6\u8fd0\u884c\u3002</p> <p>GOMAXPROCS \u4e5f\u9650\u5236\u4e86\u5e76\u53d1\u7684\u7a0b\u5ea6\uff0c\u6bd4\u5982 GOMAXPROCS = \u6838\u6570/2\uff0c\u5219\u6700\u591a\u5229\u7528\u4e86\u4e00\u534a\u7684 CPU \u6838\u8fdb\u884c\u5e76\u884c</p>","boost":2},{"location":"golang/gmp/#33","title":"3.3. \u62a2\u5360\u7b56\u7565","text":"<ul> <li>1 \u5bf9 1 \u6a21\u578b\u7684\u8c03\u5ea6\u5668\uff0c\u9700\u8981\u7b49\u5f85\u4e00\u4e2a co-routine \u4e3b\u52a8\u91ca\u653e\u540e\u624d\u80fd\u8f6e\u5230\u4e0b\u4e00\u4e2a\u8fdb\u884c\u4f7f\u7528</li> <li>golang \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a goroutine \u4f7f\u7528 10ms \u8fd8\u6ca1\u6267\u884c\u5b8c\uff0cCPU \u8d44\u6e90\u5c31\u4f1a\u88ab\u5176\u4ed6 goroutine \u6240\u62a2\u5360</li> </ul>","boost":2},{"location":"golang/gmp/#34-g","title":"3.4. \u5168\u5c40 G \u961f\u5217","text":"<ul> <li>\u5168\u5c40 G \u961f\u5217\u5176\u5b9e\u662f\u590d\u7528\u7ebf\u7a0b\u7684\u8865\u5145\uff0c\u5f53\u5de5\u4f5c\u7a83\u53d6\u65f6\uff0c\u4f18\u5148\u4ece\u5168\u5c40\u961f\u5217\u53bb\u53d6\uff0c\u53d6\u4e0d\u5230\u624d\u4ece\u522b\u7684 p \u672c\u5730\u961f\u5217\u53d6\uff081.17 \u7248\u672c\uff09</li> <li>\u5728\u65b0\u7684\u8c03\u5ea6\u5668\u4e2d\u4f9d\u7136\u6709\u5168\u5c40 G \u961f\u5217\uff0c\u4f46\u529f\u80fd\u5df2\u7ecf\u88ab\u5f31\u5316\u4e86\uff0c\u5f53 M \u6267\u884c work stealing \u4ece\u5176\u4ed6 P \u5077\u4e0d\u5230 G \u65f6\uff0c\u5b83\u53ef\u4ee5\u4ece\u5168\u5c40 G \u961f\u5217\u83b7\u53d6 G</li> </ul>","boost":2},{"location":"golang/gmp/#4-go-func","title":"4. go func()\u7ecf\u5386\u4e86\u90a3\u4e9b\u8fc7\u7a0b\uff1f","text":"go func() <ol> <li>\u6211\u4eec\u901a\u8fc7 <code>go func()</code> \u6765\u521b\u5efa\u4e00\u4e2a goroutine</li> <li>\u6709\u4e24\u4e2a\u5b58\u50a8 G \u7684\u961f\u5217\uff0c\u4e00\u4e2a\u662f\u5c40\u90e8\u8c03\u5ea6\u5668 P \u7684\u672c\u5730\u961f\u5217\u3001\u4e00\u4e2a\u662f\u5168\u5c40 G \u961f\u5217\u3002\u65b0\u521b\u5efa\u7684 G \u4f1a\u5148\u4fdd\u5b58\u5728 P \u7684\u672c\u5730\u961f\u5217\u4e2d\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u5c31\u4f1a\u4fdd\u5b58\u5728\u5168\u5c40\u7684\u961f\u5217\u4e2d</li> <li>G \u53ea\u80fd\u8fd0\u884c\u5728 M \u4e2d\uff0c\u4e00\u4e2a M \u5fc5\u987b\u6301\u6709\u4e00\u4e2a P\uff0cM \u4e0e P \u662f 1\uff1a1 \u7684\u5173\u7cfb\u3002M \u4f1a\u4ece P \u7684\u672c\u5730\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u72b6\u6001\u7684 G \u6765\u6267\u884c\uff0c\u5982\u679c P \u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a\uff0c\u5c31\u4f1a\u60f3\u5176\u4ed6\u7684 MP \u7ec4\u5408\u5077\u53d6\u4e00\u4e2a\u53ef\u6267\u884c\u7684 G \u6765\u6267\u884c</li> <li>\u4e00\u4e2a M \u8c03\u5ea6 G \u6267\u884c\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5faa\u73af\u673a\u5236</li> <li>\u5f53 M \u6267\u884c\u67d0\u4e00\u4e2a G \u65f6\u5019\u5982\u679c\u53d1\u751f\u4e86 <code>syscall</code> \u6216\u8005\u5176\u4ed6\u963b\u585e\u64cd\u4f5c\uff0cM \u4f1a\u963b\u585e\uff0c\u5982\u679c\u5f53\u524d\u6709\u4e00\u4e9b G \u5728\u6267\u884c\uff0cruntime \u4f1a\u628a\u8fd9\u4e2a\u7ebf\u7a0b M \u4ece P \u4e2d\u6458\u9664(detach)\uff0c\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b(\u5982\u679c\u6709\u7a7a\u95f2\u7684\u7ebf\u7a0b\u53ef\u7528\u5c31\u590d\u7528\u7a7a\u95f2\u7ebf\u7a0b)\u6765\u670d\u52a1\u4e8e\u8fd9\u4e2a P</li> <li>\u5f53 M \u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u65f6\u5019\uff0c\u8fd9\u4e2a G \u4f1a\u5c1d\u8bd5\u83b7\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684 P \u6267\u884c\uff0c\u5e76\u653e\u5165\u5230\u8fd9\u4e2a P \u7684\u672c\u5730\u961f\u5217\u3002\u5982\u679c\u83b7\u53d6\u4e0d\u5230 P\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b M \u53d8\u6210\u4f11\u7720\u72b6\u6001\uff0c \u52a0\u5165\u5230\u7a7a\u95f2\u7ebf\u7a0b\u4e2d\uff0c\u7136\u540e\u8fd9\u4e2a G \u4f1a\u88ab\u653e\u5165\u5168\u5c40\u961f\u5217\u4e2d</li> </ol>","boost":2},{"location":"golang/gmp/#5-gmp","title":"5. GMP \u573a\u666f\u5206\u6790","text":"","boost":2},{"location":"golang/gmp/#51-g1-g3","title":"5.1. G1 \u521b\u5efa G3","text":"<p>P \u62e5\u6709 G1\uff0cM1 \u83b7\u53d6 P \u540e\u5f00\u59cb\u8fd0\u884c G1\uff0cG1 \u4f7f\u7528 go func()\u521b\u5efa\u4e86 G2\uff0c\u4e3a\u4e86\u5c40\u90e8\u6027 G2 \u4f18\u5148\u52a0\u5165\u5230 P1 \u7684\u672c\u5730\u961f\u5217</p> <p> </p>","boost":2},{"location":"golang/gmp/#52-g1","title":"5.2. G1 \u6267\u884c\u5b8c\u6bd5","text":"<p>G1 \u8fd0\u884c\u5b8c\u6210\u540e(\u51fd\u6570\uff1agoexit)\uff0cM \u4e0a\u8fd0\u884c\u7684 goroutine \u5207\u6362\u4e3a G0\uff0cG0 \u8d1f\u8d23\u8c03\u5ea6\u65f6\u534f\u7a0b\u7684\u5207\u6362\uff08\u51fd\u6570\uff1aschedule\uff09\u3002\u4ece P \u7684\u672c\u5730\u961f\u5217\u53d6 G2\uff0c\u4ece G0 \u5207\u6362\u5230 G2\uff0c\u5e76\u5f00\u59cb\u8fd0\u884c G2(\u51fd\u6570\uff1aexecute)\u3002\u5b9e\u73b0\u4e86\u7ebf\u7a0b M1 \u7684\u590d\u7528</p> <p> </p>","boost":2},{"location":"golang/gmp/#53-g","title":"5.3. G \u6ea2\u51fa","text":"<p>\u5047\u8bbe\u6bcf\u4e2a P \u7684\u672c\u5730\u961f\u5217\u53ea\u80fd\u5b58 3 \u4e2a G\u3002G2 \u8981\u521b\u5efa\u4e86 6 \u4e2a G\uff0c\u524d 3 \u4e2a G\uff08G3, G4, G5\uff09\u5df2\u7ecf\u52a0\u5165 p1 \u7684\u672c\u5730\u961f\u5217\uff0cp1 \u672c\u5730\u961f\u5217\u6ee1\u4e86</p> <p> </p> <p>G2 \u5728\u521b\u5efa G7 \u7684\u65f6\u5019\uff0c\u53d1\u73b0 P1 \u7684<code>\u672c\u5730\u961f\u5217</code>\u5df2\u6ee1\uff0c\u9700\u8981\u6267\u884c\u8d1f\u8f7d\u5747\u8861\uff08\u628a P1 \u4e2d\u672c\u5730\u961f\u5217\u4e2d\u524d\u4e00\u534a\u7684 G\uff0c\u8fd8\u6709\u65b0\u521b\u5efa G\u8f6c\u79fb\u5230\u5168\u5c40\u961f\u5217\uff09\u3002</p> <p>\u79fb\u8d70\u524d\u4e00\u534a\u7684<code>G</code>\u662f\u4e3a\u4e86\u9632\u6b62\u540e\u9762 G<code>\u9965\u997f</code></p> <p> </p> <p>\u8fd9\u4e9b G \u88ab\u8f6c\u79fb\u5230\u5168\u5c40\u961f\u5217\u65f6\uff0c\u4f1a\u88ab\u6253\u4e71\u987a\u5e8f\u3002\u6240\u4ee5 G3,G4,G7 \u88ab\u8f6c\u79fb\u5230\u5168\u5c40\u961f\u5217\u3002</p> <p>G2 \u521b\u5efa G8 \u65f6\uff0cP1 \u7684\u672c\u5730\u961f\u5217\u672a\u6ee1\uff0c\u6240\u4ee5 G8 \u4f1a\u88ab\u52a0\u5165\u5230 P1 \u7684\u672c\u5730\u961f\u5217</p> <p> </p>","boost":2},{"location":"golang/gmp/#54-m","title":"5.4. \u5524\u9192\u6b63\u5728\u4f11\u7720\u7684 M","text":"<p>\u89c4\u5b9a\uff1a\u5728\u521b\u5efa G \u65f6\uff0c\u8fd0\u884c\u7684 G \u4f1a\u5c1d\u8bd5\u5524\u9192\u5176\u4ed6\u7a7a\u95f2\u7684 P \u548c M \u7ec4\u5408\u53bb\u6267\u884c</p> <p>\u5047\u5b9a G2 \u5524\u9192\u4e86 M2\uff0cM2 \u7ed1\u5b9a\u4e86 P2\uff0c\u5e76\u8fd0\u884c G0\uff0c\u4f46 P2 \u672c\u5730\u961f\u5217\u6ca1\u6709 G\uff0cM2 \u6b64\u65f6\u4e3a<code>\u81ea\u65cb\u7ebf\u7a0b</code>\uff08\u6ca1\u6709 G \u4f46\u4e3a\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u4e0d\u65ad\u5bfb\u627e G\uff09</p> <p>\u5148\u4ece\u5168\u5c40\u961f\u5217\u4e2d\u83b7\u53d6\uff0c\u6ca1\u6709\u518d\u4ece\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u5077\u53d6\uff08\u5148\u5168\u540e\u5077\uff09</p> <p> </p>","boost":2},{"location":"golang/gmp/#55-g","title":"5.5. \u81ea\u65cb\u7ebf\u7a0b\u83b7\u53d6 G","text":"<p>M2 \u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217(\u7b80\u79f0\u201cGQ\u201d)\u53d6\u4e00\u6279 G \u653e\u5230 P2 \u7684\u672c\u5730\u961f\u5217\uff08\u51fd\u6570\uff1a<code>findrunnable()</code>\uff09\u3002M2 \u4ece\u5168\u5c40\u961f\u5217\u53d6\u7684 G \u6570\u91cf\u7b26\u5408\u4e0b\u9762\u7684\u516c\u5f0f\uff1a</p> <pre><code>n =  min(len(GQ) / GOMAXPROCS +  1,  cap(LQ) / 2 )\n</code></pre> <ul> <li>GQ\uff1a\u5168\u5c40\u961f\u5217\u603b\u957f\u5ea6\uff08\u961f\u5217\u4e2d\u73b0\u5728\u5143\u7d20\u7684\u4e2a\u6570\uff09</li> <li>GOMAXPROCS\uff1ap \u7684\u4e2a\u6570</li> <li>\u81f3\u5c11\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a g\uff0c\u4f46\u6bcf\u6b21\u4e0d\u8981\u4ece\u5168\u5c40\u961f\u5217\u79fb\u52a8\u592a\u591a\u7684 g \u5230 p \u672c\u5730\u961f\u5217\uff0c\u7ed9\u5176\u4ed6 p \u7559\u70b9\u3002\u8fd9\u662f\u4ece\u5168\u5c40\u961f\u5217\u5230 P \u672c\u5730\u961f\u5217\u7684\u8d1f\u8f7d\u5747\u8861</li> <li>\u5047\u5b9a\u6211\u4eec\u573a\u666f\u4e2d\u4e00\u5171\u6709 4 \u4e2a P\uff08GOMAXPROCS \u8bbe\u7f6e\u4e3a 4\uff0c\u90a3\u4e48\u6211\u4eec\u5141\u8bb8\u6700\u591a\u5c31\u80fd\u7528 4 \u4e2a P \u6765\u4f9b M \u4f7f\u7528\uff09\u3002\u6240\u4ee5 M2 \u53ea\u4ece\u80fd\u4ece\u5168\u5c40\u961f\u5217\u53d6 1 \u4e2a G\uff08\u5373 G3\uff09\u79fb\u52a8 P2 \u672c\u5730\u961f\u5217\uff0c\u7136\u540e\u5b8c\u6210\u4ece G0 \u5230 G3 \u7684\u5207\u6362\uff0c\u8fd0\u884c G3</li> <li>\u5f53 M2 \u6709\u4e86\u65b0\u7684 G\uff08\u4e0d\u518d\u662f G0\uff09\uff0c\u4fbf\u4e0d\u662f \u81ea\u65cb\u7ebf\u7a0b \u4e86</li> </ul> <p> </p> <p>\u76f8\u5173\u6e90\u7801\u53c2\u8003\uff1a</p> <pre><code>// \u4ece\u5168\u5c40\u961f\u5217\u4e2d\u5077\u53d6\uff0c\u8c03\u7528\u65f6\u5fc5\u987b\u9501\u4f4f\u8c03\u5ea6\u5668\nfunc globrunqget(_p_ *p, max int32) *g {\n    // \u5982\u679c\u5168\u5c40\u961f\u5217\u4e2d\u6ca1\u6709 g \u76f4\u63a5\u8fd4\u56de\n    if sched.runqsize == 0 {\n        return nil\n    }\n\n    // per-P \u7684\u90e8\u5206\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a P \u7684\u5168\u90e8\u53d6\n    n := sched.runqsize/gomaxprocs + 1\n    if n &gt; sched.runqsize {\n        n = sched.runqsize\n    }\n\n    // \u4e0d\u80fd\u8d85\u8fc7\u53d6\u7684\u6700\u5927\u4e2a\u6570\n    if max &gt; 0 &amp;&amp; n &gt; max {\n        n = max\n    }\n\n    // \u8ba1\u7b97\u80fd\u4e0d\u80fd\u5728\u672c\u5730\u961f\u5217\u4e2d\u653e\u4e0b n \u4e2a\n    if n &gt; int32(len(_p_.runq))/2 {\n        n = int32(len(_p_.runq)) / 2\n    }\n\n    // \u4fee\u6539\u672c\u5730\u961f\u5217\u7684\u5269\u4f59\u7a7a\u95f4\n    sched.runqsize -= n\n    // \u62ff\u5230\u5168\u5c40\u961f\u5217\u961f\u5934 g\n    gp := sched.runq.pop()\n    // \u8ba1\u6570\n    n--\n\n    // \u7ee7\u7eed\u53d6\u5269\u4e0b\u7684 n-1 \u4e2a\u5168\u5c40\u961f\u5217\u653e\u5165\u672c\u5730\u961f\u5217\n    for ; n &gt; 0; n-- {\n        gp1 := sched.runq.pop()\n        runqput(_p_, gp1, false)\n    }\n    return gp\n}\n</code></pre>","boost":2},{"location":"golang/gmp/#56-m2-m1-g","title":"5.6. M2 \u4ece M1 \u4e2d\u5077\u53d6 G","text":"<p>\u5168\u5c40\u961f\u5217\u5df2\u7ecf\u6ca1\u6709 G\uff0c\u90a3 m \u5c31\u8981\u6267\u884c work stealing(\u5077\u53d6)\uff1a\u4ece\u5176\u4ed6\u6709 G \u7684 P \u54ea\u91cc\u5077\u53d6\u4e00\u534a G \u8fc7\u6765\uff0c\u653e\u5230\u81ea\u5df1\u7684 P \u672c\u5730\u961f\u5217\u3002P2 \u4ece P1 \u7684\u672c\u5730\u961f\u5217\u5c3e\u90e8\u53d6\u4e00\u534a\u7684 G\uff0c\u672c\u4f8b\u4e2d\u4e00\u534a\u5219\u53ea\u6709 1 \u4e2a G8\uff0c\u653e\u5230 P2 \u7684\u672c\u5730\u961f\u5217\u5e76\u6267\u884c\u3002</p> <p>\u5077\u53d6\u961f\u5217\u5143\u7d20\u7684\u4e00\u534a</p> <p> </p>","boost":2},{"location":"golang/gmp/#57","title":"5.7. \u81ea\u65cb\u7ebf\u7a0b\u7684\u6700\u5927\u9650\u5236","text":"<p>G1 \u672c\u5730\u961f\u5217 G5\u3001G6 \u5df2\u7ecf\u88ab\u5176\u4ed6 M \u5077\u8d70\u5e76\u8fd0\u884c\u5b8c\u6210\uff0c\u5f53\u524d M1 \u548c M2 \u5206\u522b\u5728\u8fd0\u884c G2 \u548c G8\uff0cM3 \u548c M4 \u6ca1\u6709 goroutine \u53ef\u4ee5\u8fd0\u884c\uff0cM3 \u548c M4 \u5904\u4e8e\u81ea\u65cb\u72b6\u6001\uff0c\u5b83\u4eec\u4e0d\u65ad\u5bfb\u627e goroutine</p> <ul> <li>\u6b63\u5728\u8fd0\u884c\u7684 M + \u81ea\u65cb\u7ebf\u7a0b &lt;= GOMAXPROCS</li> <li>\u5982\u679c M \u5927\u4e8e P\uff0c\u5219\u8fdb\u5165\u4f11\u7720\u7ebf\u7a0b\u961f\u5217</li> </ul> <p> </p> <p>\u4e3a\u4ec0\u4e48\u8981\u8ba9 m3 \u548c m4 \u81ea\u65cb\uff1f</p> <p>\u81ea\u65cb\u672c\u8d28\u662f\u5728\u8fd0\u884c\uff0c\u7ebf\u7a0b\u5728\u8fd0\u884c\u5374\u6ca1\u6709\u6267\u884c G\uff0c\u5c31\u53d8\u6210\u4e86\u6d6a\u8d39 CPU</p> <p>\u4e3a\u4ec0\u4e48\u4e0d\u9500\u6bc1\u73b0\u573a\uff0c\u6765\u8282\u7ea6 CPU \u8d44\u6e90\uff1f</p> <p>\u56e0\u4e3a\u521b\u5efa\u548c\u9500\u6bc1 CPU \u4e5f\u4f1a\u6d6a\u8d39\u65f6\u95f4\uff0c\u6211\u4eec\u5e0c\u671b\u5f53\u6709\u65b0 goroutine \u521b\u5efa\u65f6\uff0c\u7acb\u523b\u80fd\u6709 M \u8fd0\u884c\u5b83\uff0c\u5982\u679c\u9500\u6bc1\u518d\u65b0\u5efa\u5c31\u589e\u52a0\u4e86\u65f6\u5ef6\uff0c\u964d\u4f4e\u4e86\u6548\u7387</p> <p>\u5f53\u7136\u4e5f\u8003\u8651\u4e86\u8fc7\u591a\u7684\u81ea\u65cb\u7ebf\u7a0b\u662f\u6d6a\u8d39 CPU\uff0c\u6240\u4ee5\u7cfb\u7edf\u4e2d\u6700\u591a\u6709<code>GOMAXPROCS</code>\u4e2a\u81ea\u65cb\u7684\u7ebf\u7a0b(\u5f53\u524d\u4f8b\u5b50\u4e2d\u7684<code>GOMAXPROCS</code>=4\uff0c\u6240\u4ee5\u4e00\u5171 4 \u4e2a P)\uff0c\u591a\u4f59\u7684\u6ca1\u4e8b\u505a\u7ebf\u7a0b\u4f1a\u8ba9\u4ed6\u4eec\u4f11\u7720\u3002</p>","boost":2},{"location":"golang/gmp/#58-g","title":"5.8. G \u53d1\u9001\u7cfb\u7edf\u8c03\u7528/\u963b\u585e","text":"<p>\u5047\u5b9a\u5f53\u524d\u9664\u4e86 M3 \u548c M4 \u4e3a\u81ea\u65cb\u7ebf\u7a0b\uff0c\u8fd8\u6709 M5 \u548c M6 \u4e3a\u7a7a\u95f2\u7684\u7ebf\u7a0b(\u6ca1\u6709\u5f97\u5230 P \u7684\u7ed1\u5b9a\uff0c\u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\u6700\u591a\u5c31\u53ea\u80fd\u591f\u5b58\u5728 4 \u4e2a P\uff0c\u6240\u4ee5 P \u7684\u6570\u91cf\u5e94\u8be5\u6c38\u8fdc\u662f M&gt;=P\uff0c\u5927\u90e8\u5206\u90fd\u662f M \u5728\u62a2\u5360\u9700\u8981\u8fd0\u884c\u7684 P)\uff0cG8 \u521b\u5efa\u4e86 G9\uff0cG8 \u8fdb\u884c\u4e86\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\uff0cM2 \u548c P2 \u7acb\u5373\u89e3\u7ed1\uff0cP2 \u4f1a\u6267\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a</p> <ul> <li>\u5982\u679c P2 \u672c\u5730\u961f\u5217\u6709 G\u3001\u5168\u5c40\u961f\u5217\u6709 G \u6216\u6709\u7a7a\u95f2\u7684 M\uff0cP2 \u90fd\u4f1a\u7acb\u9a6c\u5524\u9192 1 \u4e2a M \u548c\u5b83\u7ed1\u5b9a\uff0c\u5426\u5219 P2 \u5219\u4f1a\u52a0\u5165\u5230\u7a7a\u95f2 P \u5217\u8868\uff0c\u7b49\u5f85 M \u6765\u83b7\u53d6\u53ef\u7528\u7684 p\u3002</li> </ul> <p>\u672c\u573a\u666f\u4e2d\uff0cP2 \u672c\u5730\u961f\u5217\u6709 G9\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6\u7a7a\u95f2\u7684\u7ebf\u7a0b M5 \u7ed1\u5b9a\u3002</p> <p>\u81ea\u65cb\u7ebf\u7a0b\u62a2\u5360 G\uff0c\u4e0d\u62a2\u5360 P</p> <p> </p>","boost":2},{"location":"golang/gmp/#59-g","title":"5.9. G \u53d1\u9001\u7cfb\u7edf\u8c03\u7528/\u975e\u963b\u585e","text":"<p>\u4e0a\u8ff0<code>G8</code>\u5982\u679c\u6267\u884c\u5b8c\u6bd5\uff0c\u6b64\u65f6 M2 \u4f1a\u9996\u5148\u5bfb\u627e\u4e4b\u524d\u7684 P\uff0c\u5982\u679c\u6ca1\u6709\u5219\u5c1d\u8bd5\u4ece<code>\u7a7a\u95f2p\u961f\u5217</code>\u4e2d\u83b7\u53d6\uff0c\u5982\u679c\u6ca1\u83b7\u53d6\u4e0d\u5230\uff0c\u4f1a\u8fdb\u5165<code>M\u963b\u585e\u961f\u5217</code>\u4e2d\uff08\u957f\u65f6\u95f4\u4f11\u7720\u7b49\u5f85 GC \u56de\u6536\u9500\u6bc1\uff09</p> <p> </p>","boost":2},{"location":"golang/gmp/#_1","title":"\u53c2\u8003","text":"<ul> <li>golang \u5927\u6740\u5668\u2014\u2014GMP \u6a21\u578b</li> </ul>","boost":2},{"location":"kafka/","title":"Kafka\u57fa\u7840","text":"","boost":2},{"location":"kafka/#kafka","title":"Kafka \u7b80\u4ecb","text":"<p>Kafka \u662f\u4e00\u4e2a\u57fa\u4e8e\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\u7684\u6d88\u606f\u961f\u5217\u4e2d\u95f4\u4ef6\u3002\u5b83\u7531 Producer, Consumer, Broker \u548c Partition \u51e0\u4e2a\u7ec4\u6210\u3002</p> <p>Kafka \u662f\u6700\u521d\u7531 Linkedin \u516c\u53f8\u5f00\u53d1\uff0c\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u3001\u652f\u6301\u5206\u533a\u7684\uff08partition\uff09\u3001\u591a\u526f\u672c\u7684\uff08replica\uff09\uff0c\u57fa\u4e8e zookeeper \u534f\u8c03\u7684\u5206\u5e03\u5f0f\u6d88\u606f\u7cfb\u7edf\uff0c\u5b83\u7684\u6700\u5927\u7684\u7279\u6027\u5c31\u662f\u53ef\u4ee5\u5b9e\u65f6\u7684\u5904\u7406\u5927\u91cf\u6570\u636e\u4ee5\u6ee1\u8db3\u5404\u79cd\u9700\u6c42\u573a\u666f\uff1a\u6bd4\u5982\u57fa\u4e8e hadoop \u7684\u6279\u5904\u7406\u7cfb\u7edf\u3001\u4f4e\u5ef6\u8fdf\u7684\u5b9e\u65f6\u7cfb\u7edf\u3001Storm/Spark \u6d41\u5f0f\u5904\u7406\u5f15\u64ce\uff0cweb/nginx \u65e5\u5fd7\u3001\u8bbf\u95ee\u65e5\u5fd7\uff0c\u6d88\u606f\u670d\u52a1\u7b49\u7b49\uff0c\u7528 scala \u8bed\u8a00\u7f16\u5199\uff0cLinkedin \u4e8e 2010 \u5e74\u8d21\u732e\u7ed9\u4e86 Apache \u57fa\u91d1\u4f1a\u5e76\u6210\u4e3a\u9876\u7ea7\u5f00\u6e90\u9879\u76ee\u3002</p>","boost":2},{"location":"kafka/#kafka_1","title":"Kafka \u7684\u4f7f\u7528\u573a\u666f","text":"<ul> <li>\u65e5\u5fd7\u805a\u5408\uff1a\u53ef\u6536\u96c6\u5404\u79cd\u670d\u52a1\u7684\u65e5\u5fd7\u5199\u5165 kafka \u7684\u6d88\u606f\u961f\u5217\u8fdb\u884c\u5b58\u50a8</li> <li>\u6d88\u606f\u7cfb\u7edf\uff1a\u5e7f\u6cdb\u7528\u4e8e\u6d88\u606f\u4e2d\u95f4\u4ef6</li> <li>\u7cfb\u7edf\u89e3\u8026\uff1a\u5728\u91cd\u8981\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53d1\u9001\u6d88\u606f\uff0c\u7531\u522b\u7684\u670d\u52a1\u7cfb\u7edf\u6765\u5b8c\u6210\u5176\u4ed6\u64cd\u4f5c</li> <li>\u6d41\u91cf\u524a\u5cf0\uff1a\u4e00\u822c\u7528\u4e8e\u79d2\u6740\u6216\u62a2\u8d2d\u6d3b\u52a8\u4e2d\uff0c\u6765\u7f13\u51b2\u7f51\u7ad9\u77ed\u65f6\u95f4\u5185\u9ad8\u6d41\u91cf\u5e26\u6765\u7684\u538b\u529b</li> <li>\u5f02\u6b65\u5904\u7406\uff1a\u901a\u8fc7\u5f02\u6b65\u5904\u7406\u673a\u5236\uff0c\u53ef\u4ee5\u628a\u4e00\u4e2a\u6d88\u606f\u653e\u5165\u961f\u5217\u4e2d\uff0c\u4f46\u4e0d\u7acb\u5373\u5904\u7406\u5b83\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u518d\u8fdb\u884c\u5904\u7406</li> </ul>","boost":2},{"location":"kafka/#kafka_2","title":"Kafka \u57fa\u672c\u6982\u5ff5","text":"<p>kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\uff0c\u5206\u533a\u7684\u6d88\u606f(\u5b98\u65b9\u79f0\u4e4b\u4e3a commit log)\u670d\u52a1\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u6d88\u606f\u7cfb\u7edf\u5e94\u8be5\u5177\u5907\u7684\u529f\u80fd\uff0c\u4f46\u662f\u786e\u6709\u7740\u72ec\u7279\u7684\u8bbe\u8ba1\u3002\u53ef\u4ee5\u8fd9\u6837\u6765\u8bf4\uff0cKafka \u501f\u9274\u4e86 JMS \u89c4\u8303\u7684\u601d\u60f3\uff0c\u4f46\u662f\u786e\u5e76\u6ca1\u6709\u5b8c\u5168\u9075\u5faa JMS \u89c4\u8303\u3002</p> \u540d\u79f0 \u89e3\u91ca Broker \u6d88\u606f\u4e2d\u95f4\u4ef6\u5904\u7406\u8282\u70b9\uff0c\u4e00\u4e2a Kafka \u8282\u70b9\u5c31\u662f\u4e00\u4e2a broker\uff0c\u4e00\u4e2a\u6216\u8005\u591a\u4e2a Broker \u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a Kafka \u96c6\u7fa4(Kafka Cluster) Topic Kafka \u6839\u636e topic \u5bf9\u6d88\u606f\u8fdb\u884c\u5f52\u7c7b\uff0c\u53d1\u5e03\u5230 Kafka \u96c6\u7fa4\u7684\u6bcf\u6761\u6d88\u606f\u90fd\u9700\u8981\u6307\u5b9a\u4e00\u4e2a topic Producer \u6d88\u606f\u751f\u4ea7\u8005\uff0c\u5411 Broker \u53d1\u9001\u6d88\u606f\u7684\u5ba2\u6237\u7aef Consumer \u6d88\u606f\u6d88\u8d39\u8005\uff0c\u4ece Broker \u8bfb\u53d6\u6d88\u606f\u7684\u5ba2\u6237\u7aef ConsumerGroup \u6bcf\u4e2a Consumer \u5c5e\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684 Consumer Group\uff0c\u4e00\u6761\u6d88\u606f\u53ef\u4ee5\u88ab\u591a\u4e2a\u4e0d\u540c\u7684 Consumer Group \u6d88\u8d39\uff0c\u4f46\u662f\u4e00\u4e2a Consumer Group \u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a Consumer \u80fd\u591f\u6d88\u8d39\u8be5\u6d88\u606f Partition \u7269\u7406\u4e0a\u7684\u6982\u5ff5\uff0c\u4e00\u4e2a topic \u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a partition\uff0c\u6bcf\u4e2a partition \u5185\u90e8\u6d88\u606f\u662f\u6709\u5e8f\u7684 Replica\uff08\u526f\u672c\uff09 \u4e00\u4e2a topic \u7684\u6bcf\u4e2a\u5206\u533a\u90fd\u6709\u82e5\u5e72\u4e2a\u526f\u672c\uff0c\u4e00\u4e2a Leader \u548c\u82e5\u5e72\u4e2a Follower Leader \u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u7684\u201c\u4e3b\u201d\uff0c\u751f\u4ea7\u8005\u53d1\u9001\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u4ee5\u53ca\u6d88\u8d39\u8005\u6d88\u8d39\u6570 \u636e\u7684\u5bf9\u8c61\u90fd\u662f Leader Follower \u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u4e2d\u7684\u201c\u4ece\u201d\uff0c\u5b9e\u65f6\u4ece Leader \u4e2d\u540c\u6b65\u6570\u636e\uff0c\u4fdd\u6301\u548c Leader \u6570\u636e\u7684\u540c\u6b65\u3002Leader \u53d1\u751f\u6545\u969c\u65f6\uff0c\u67d0\u4e2a Follower \u4f1a\u6210\u4e3a\u65b0\u7684 Leader\u3002 <ul> <li>Producer \u5c06\u6d88\u606f\u53d1\u9001\u5230\u7279\u5b9a\u7684\u4e3b\u9898\uff0cConsumer \u901a\u8fc7\u8ba2\u9605\u7279\u5b9a\u7684 Topic(\u4e3b\u9898) \u6765\u6d88\u8d39\u6d88\u606f\u3002</li> <li>Partition \u5c5e\u4e8e Topic \u7684\u4e00\u90e8\u5206\u3002\u4e00\u4e2a Topic \u53ef\u4ee5\u6709\u591a\u4e2a Partition \uff0c\u5e76\u4e14\u540c\u4e00 Topic \u4e0b\u7684 Partition \u53ef\u4ee5\u5206\u5e03\u5728\u4e0d\u540c\u7684 Broker \u4e0a\uff0c\u8fd9\u4e5f\u5c31\u8868\u660e\u4e00\u4e2a Topic \u53ef\u4ee5\u6a2a\u8de8\u591a\u4e2a Broker \u3002</li> <li>\u670d\u52a1\u7aef(brokers)\u548c\u5ba2\u6237\u7aef(producer\u3001consumer)\u4e4b\u95f4\u901a\u4fe1\u901a\u8fc7 TCP \u534f\u8bae\u6765\u5b8c\u6210\u3002</li> </ul>","boost":2},{"location":"kafka/#kafka_3","title":"Kafka \u7684\u591a\u526f\u672c\u673a\u5236","text":"","boost":2},{"location":"kafka/#kafka_4","title":"Kafka \u6d88\u606f\u7684\u6d88\u8d39\u6a21\u5f0f","text":"<p>\u91c7\u7528 Pull \u6a21\u5f0f\u3002</p> <p>Consumer \u53ef\u4ee5\u81ea\u4e3b\u51b3\u5b9a\u662f\u5426\u6279\u91cf\u7684\u4ece Broker \u62c9\u53d6\u6570\u636e\u3002Pull \u6a21\u5f0f\u6709\u4e2a\u7f3a\u70b9\u662f\uff0c\u5982\u679c Broker \u6ca1\u6709\u53ef\u4f9b\u6d88\u8d39\u7684\u6d88\u606f\uff0c\u5c06\u5bfc\u81f4 Consumer \u4e0d\u65ad\u5728\u5faa\u73af\u4e2d\u8f6e\u8be2\uff0c\u76f4\u5230\u65b0\u6d88\u606f\u5230\u8fbe\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u70b9\uff0cKafka \u6709\u4e2a\u53c2\u6570\u53ef\u4ee5\u8ba9 Consumer \u963b\u585e\u76f4\u5230\u65b0\u6d88\u606f\u5230\u8fbe\u3002</p>","boost":2},{"location":"kafka/#kafka_5","title":"Kafka \u5982\u4f55\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u4e0e\u6545\u969c\u8f6c\u79fb","text":"<p>\u8d1f\u8f7d\u5747\u8861</p> <ul> <li>Kakfa \u7684\u8d1f\u8f7d\u5747\u8861\u5c31\u662f\u6bcf\u4e2a Broker \u90fd\u6709\u5747\u7b49\u7684\u673a\u4f1a\u4e3a Kafka \u7684\u5ba2\u6237\u7aef\uff08\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\uff09\u63d0\u4f9b\u670d\u52a1\uff0c\u53ef\u4ee5\u8d1f\u8f7d\u5206\u6563\u5230\u6240\u6709\u96c6\u7fa4\u4e2d\u7684\u673a\u5668\u4e0a\u3002Kafka \u901a\u8fc7\u667a\u80fd\u5316\u7684\u5206\u533a\u9886\u5bfc\u8005\u9009\u4e3e\u6765\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u63d0\u4f9b\u667a\u80fd\u5316\u7684 Leader \u9009\u4e3e\u7b97\u6cd5\uff0c\u53ef\u5728\u96c6\u7fa4\u7684\u6240\u6709\u673a\u5668\u4e0a\u5747\u5300\u5206\u6563\u5404\u4e2a Partition \u7684 Leader\uff0c\u4ece\u800c\u6574\u4f53\u4e0a\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002</li> </ul> <p>\u6545\u969c\u8f6c\u79fb</p> <ul> <li>Kafka \u7684\u6545\u969c\u8f6c\u79fb\u662f\u901a\u8fc7\u4f7f\u7528\u4f1a\u8bdd\u673a\u5236\u5b9e\u73b0\u7684\uff0c\u6bcf\u53f0 Kafka \u670d\u52a1\u5668\u542f\u52a8\u540e\u4f1a\u4ee5\u4f1a\u8bdd\u7684\u5f62\u5f0f\u628a\u81ea\u5df1\u6ce8\u518c\u5230 Zookeeper \u670d\u52a1\u5668\u4e0a\u3002\u4e00\u65e6\u670d\u52a1\u5668\u8fd0\u8f6c\u51fa\u73b0\u95ee\u9898\uff0c\u5c31\u4f1a\u5bfc\u81f4\u4e0e Zookeeper \u7684\u4f1a\u8bdd\u4e0d\u80fd\u7ef4\u6301\u4ece\u800c\u8d85\u65f6\u65ad\u8fde\uff0c\u6b64\u65f6 Kafka \u96c6\u7fa4\u4f1a\u9009\u4e3e\u51fa\u53e6\u4e00\u53f0\u670d\u52a1\u5668\u6765\u5b8c\u5168\u66ff\u4ee3\u8fd9\u53f0\u670d\u52a1\u5668\u7ee7\u7eed\u63d0\u4f9b\u670d\u52a1\u3002</li> </ul>","boost":2},{"location":"kafka/#kafka-zookeeper","title":"Kafka \u4e2d Zookeeper \u7684\u4f5c\u7528","text":"<p>ZooKeeper \u4e3b\u8981\u4e3a Kafka \u63d0\u4f9b\u5143\u6570\u636e\u7684\u7ba1\u7406\u7684\u529f\u80fd\u3002</p> <ul> <li>Kafka \u662f\u4e00\u4e2a\u4f7f\u7528 Zookeeper \u6784\u5efa\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002Kafka \u7684\u5404 Broker \u5728\u542f\u52a8\u65f6\u90fd\u8981\u5728 Zookeeper \u4e0a\u6ce8\u518c\uff0c\u7531 Zookeeper \u7edf\u4e00\u534f\u8c03\u7ba1\u7406\u3002</li> <li>\u5982\u679c\u4efb\u4f55\u8282\u70b9\u5931\u8d25\uff0c\u53ef\u901a\u8fc7 Zookeeper \u4ece\u5148\u524d\u63d0\u4ea4\u7684\u504f\u79fb\u91cf\u4e2d\u6062\u590d\uff0c\u56e0\u4e3a\u5b83\u4f1a\u505a\u5468\u671f\u6027\u63d0\u4ea4\u504f\u79fb\u91cf\u5de5\u4f5c\u3002</li> <li>\u540c\u4e00\u4e2a Topic \u7684\u6d88\u606f\u4f1a\u88ab\u5206\u6210\u591a\u4e2a\u5206\u533a\u5e76\u5c06\u5176\u5206\u5e03\u5728\u591a\u4e2a Broker \u4e0a\uff0c\u8fd9\u4e9b\u5206\u533a\u4fe1\u606f\u53ca\u4e0e Broker \u7684\u5bf9\u5e94\u5173\u7cfb\u4e5f\u662f Zookeeper \u5728\u7ef4\u62a4\u3002</li> </ul> <p>\u8fd8\u6267\u884c\u5176\u4ed6\u6d3b\u52a8\uff0c\u5982: eader \u68c0\u6d4b\u3001\u5206\u5e03\u5f0f\u540c\u6b65\u3001\u914d\u7f6e\u7ba1\u7406\u3001\u8bc6\u522b\u65b0\u8282\u70b9\u4f55\u65f6\u79bb\u5f00\u6216\u8fde\u63a5\u3001\u96c6\u7fa4\u3001\u8282\u70b9\u5b9e\u65f6\u72b6\u6001\u7b49\u3002</p>","boost":2},{"location":"kafka/#kafka-ack","title":"Kafka \u7684 ACK \u673a\u5236","text":"ACK \u8bf4\u660e \u4f18\u7f3a\u70b9 0 \u76f8\u5f53\u4e8e\u5f02\u6b65\u64cd\u4f5c\uff0cProducer \u4e0d\u9700\u8981 Leader \u7ed9\u4e88\u56de\u590d\uff0c\u53d1\u9001\u5b8c\u5c31\u8ba4\u4e3a\u6210\u529f\uff0c\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u6761\uff08\u6279\uff09Message \u6b64\u673a\u5236\u5177\u6709\u6700\u4f4e\u5ef6\u8fdf\uff0c\u4f46\u662f\u6301\u4e45\u6027\u53ef\u9760\u6027\u4e5f\u6700\u5dee\uff0c\u5f53\u670d\u52a1\u5668\u53d1\u751f\u6545\u969c\u65f6\uff0c\u5f88\u53ef\u80fd\u53d1\u751f\u6570\u636e\u4e22\u5931\u3002 1 Kafka \u9ed8\u8ba4\u7684\u8bbe\u7f6e\u3002\u8868\u793a Producer \u8981 Leader \u786e\u8ba4\u5df2\u6210\u529f\u63a5\u6536\u6570\u636e\u624d\u53d1\u9001\u4e0b\u4e00\u6761\uff08\u6279\uff09Message\u3002\u4e0d\u8fc7 Leader \u5b95\u673a\uff0cFollower \u5c1a\u672a\u590d\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5c31\u4f1a\u4e22\u5931\u3002 \u6b64\u673a\u5236\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u6301\u4e45\u6027\u548c\u8f83\u4f4e\u7684\u5ef6\u8fdf\u6027\u3002 -1 Leader \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\uff0c\u8fd8\u5fc5\u987b\u8981\u6c42 ISR \u5217\u8868\u91cc\u8ddf Leader \u4fdd\u6301\u540c\u6b65\u7684\u90a3\u4e9b Follower \u90fd\u786e\u8ba4\u6d88\u606f\u5df2\u540c\u6b65\uff0cProducer \u624d\u53d1\u9001\u4e0b\u4e00\u6761\uff08\u6279\uff09Message\u3002 \u6b64\u673a\u5236\u6301\u4e45\u6027\u53ef\u9760\u6027\u6700\u597d\uff0c\u4f46\u5ef6\u65f6\u6027\u6700\u5dee\u3002","boost":2},{"location":"kafka/ha_hp/","title":"Kafka\u9ad8\u6027\u80fd\u548c\u9ad8\u53ef\u7528","text":""},{"location":"kafka/ha_hp/#kafka","title":"Kafka \u7684\u9ad8\u6027\u80fd\u662f\u5982\u4f55\u4fdd\u8bc1\u7684\uff1f","text":"<ol> <li>\u96f6\u62f7\u8d1d\u3002\u5728 Linux \u4e0a Kafka \u4f7f\u7528\u4e86\u4e24\u79cd\u624b\u6bb5\uff0cmmap \u548c sendfile\uff0c\u524d\u8005\u7528\u4e8e\u89e3\u51b3 Producer \u5199\u5165\u6570\u636e\uff0c\u540e\u8005\u7528\u4e8e Consumer \u8bfb\u53d6\u6570\u636e\uff1b</li> <li>\u987a\u5e8f\u5199\uff1aKafka \u7684\u6570\u636e\uff0c\u53ef\u4ee5\u770b\u505a\u662f AOF \uff08append only file\uff09\uff0c\u5b83\u53ea\u5141\u8bb8\u8ffd\u52a0\u6570\u636e\uff0c\u800c\u4e0d\u5141\u8bb8\u4fee\u6539\u5df2\u6709\u7684\u6570\u636e\u3002\uff08\u540e\u9762\u662f\u4eae\u70b9\uff09\u8be5\u624b\u6bb5\u4e5f\u5728\u6570\u636e\u5e93\u5982 MySQL\uff0cRedis \u4e0a\u5f88\u5e38\u89c1\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e00\u822c\u8bf4 Kafka \u7528\u673a\u68b0\u786c\u76d8\u5c31\u53ef\u4ee5\u4e86\u3002\u6709\u4eba\u505a\u8fc7\u5b9e\u9a8c\uff08\u7684\u786e\u6709\uff0c\u4f60\u4eec\u53ef\u4ee5\u627e\u627e\uff0c\u6211\u5df2\u7ecf\u627e\u4e0d\u5230\u94fe\u63a5\u4e86\uff09\uff0c\u673a\u68b0\u78c1\u76d8 Kafka \u548c SSD Kafka \u5728\u6027\u80fd\u4e0a\u5dee\u8ddd\u4e0d\u5927\uff1b</li> <li>Page Cache\uff1aKafka \u5141\u8bb8\u843d\u76d8\u7684\u65f6\u5019\uff0c\u662f\u5199\u5230 Page Cache \u7684\u65f6\u5019\u5c31\u8fd4\u56de\uff0c\u8fd8\u662f\u4e00\u5b9a\u8981\u5237\u65b0\u5230\u78c1\u76d8\uff08\u4e3b\u8981\u5c31\u662f mmap \u4e4b\u540e\u8981\u4e0d\u8981\u5f3a\u5236\u5237\u65b0\u78c1\u76d8\uff09\uff0c\u7c7b\u4f3c\u7684\u673a\u5236\u5728 MySQL, Redis \u4e0a\u4e5f\u662f\u5e38\u89c1\uff0c\uff08\u7b80\u8981\u8bc4\u4ef7\u4e00\u4e0b\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff09\u5982\u679c\u5199\u5230 Page Cache \u5c31\u8fd4\u56de\uff0c\u90a3\u4e48\u4f1a\u5b58\u5728\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u3002</li> <li>\u6279\u91cf\u64cd\u4f5c\uff1a\u5305\u62ec Producer \u6279\u91cf\u53d1\u9001\uff0c\u4e5f\u5305\u62ec Broker \u6279\u91cf\u843d\u76d8\u3002\u6279\u91cf\u80fd\u591f\u653e\u5927\u987a\u5e8f\u5199\u7684\u4f18\u52bf\uff0c\u6bd4\u5982\u8bf4 Producer \u8fd8\u6ca1\u6512\u591f\u4e00\u6279\u6570\u636e\u53d1\u9001\u5c31\u5b95\u673a\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931\uff1b</li> <li>\u6570\u636e\u538b\u7f29\uff1aKafka \u63d0\u4f9b\u4e86\u6570\u636e\u538b\u7f29\u9009\u9879\uff0c\u91c7\u7528\u6570\u636e\u538b\u7f29\u80fd\u51cf\u5c11\u6570\u636e\u4f20\u8f93\u91cf\uff0c\u63d0\u9ad8\u6548\u7387\uff1b</li> <li>\u65e5\u5fd7\u5206\u6bb5\u5b58\u50a8\uff1aKafka \u5c06\u65e5\u5fd7\u5206\u6210\u4e0d\u540c\u7684\u6bb5\uff0c\u53ea\u6709\u6700\u65b0\u7684\u6bb5\u53ef\u4ee5\u5199\uff0c\u522b\u7684\u6bb5\u90fd\u53ea\u80fd\u8bfb\u3002\u540c\u65f6\u4e3a\u6bcf\u4e00\u4e2a\u6bb5\u4fdd\u5b58\u4e86\u504f\u79fb\u91cf\u7d22\u5f15\u6587\u4ef6\u548c\u65f6\u95f4\u6233\u7d22\u5f15\u6587\u4ef6\uff0c\u91c7\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u6570\u636e\uff0c\u6548\u7387\u6781\u9ad8\u3002\u540c\u65f6 Kafka \u4f1a\u786e\u4fdd\u7d22\u5f15\u6587\u4ef6\u80fd\u591f\u5168\u90e8\u88c5\u5165\u5185\u5b58\uff0c\u4ee5\u907f\u514d\u8bfb\u53d6\u7d22\u5f15\u5f15\u53d1\u78c1\u76d8 IO\u3002\uff08\u8fd9\u91cc\u6709\u4e00\u70b9\u5f88\u6709\u610f\u601d\uff0c\u5c31\u662f\u5728 MySQL \u4e0a\uff0c\u6211\u4eec\u4e5f\u4f1a\u5c3d\u91cf\u8bf4\u628a\u7d22\u5f15\u5927\u5c0f\u63a7\u5236\u4f4f\uff0c\u80fd\u591f\u5728\u5185\u5b58\u88c5\u4e0b\uff0c\u5728\u8ba8\u8bba\u6570\u636e\u5e93\u78c1\u76d8 IO \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f88\u5c11\u4f1a\u8ba1\u7b97\u7d22\u5f15\u65e0\u6cd5\u88c5\u5165\u5185\u5b58\u5f15\u53d1\u7684\u78c1\u76d8 IO\uff0c\u800c\u662f\u53ea\u8ba1\u7b97\u8bfb\u53d6\u6570\u636e\u7684\u78c1\u76d8 IO\uff09</li> </ol> <p>\u6279\u91cf\u64cd\u4f5c+\u538b\u7f29\u7684\u4eae\u70b9</p> <ul> <li>\u6279\u91cf\u53d1\u9001\u548c\u6570\u636e\u538b\u7f29\uff0c\u5728\u5904\u7406\u5927\u6570\u636e\u7684\u4e2d\u95f4\u4ef6\u4e2d\u6bd4\u8f83\u5e38\u89c1\u3002\u6bd4\u5982\u8bf4\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf CAT \u548c skywalking \u90fd\u6709\u7c7b\u4f3c\u7684\u6280\u672f\u3002\u4ee3\u4ef7\u5c31\u662f\u5b58\u5728\u6570\u636e\u4e22\u5931\u7684\u98ce\u9669\uff1b</li> <li>\u6570\u636e\u538b\u7f29\u867d\u7136\u80fd\u591f\u51cf\u5c11\u6570\u636e\u4f20\u8f93\uff0c\u4f46\u662f\u4f1a\u6d88\u8017\u66f4\u8fc7 CPU\u3002\u4e0d\u8fc7\u5728 IO \u5bc6\u96c6\u578b\u7684\u5e94\u7528\u91cc\u9762\uff0c\u8fd9\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff1b</li> </ul>"},{"location":"kafka/ha_hp/#kafka_1","title":"Kafka \u9ad8\u53ef\u7528","text":"<ol> <li>\u6570\u636e\u590d\u5236\uff08Replication\uff09\uff1a Kafka \u4f7f\u7528\u526f\u672c\u673a\u5236\u6765\u5b9e\u73b0\u6570\u636e\u7684\u5197\u4f59\u5b58\u50a8\u548c\u5bb9\u9519\u3002\u6bcf\u4e2a\u5206\u533a\u90fd\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u526f\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3a\u9886\u5bfc\u8005\uff08Leader\uff09\uff0c\u5176\u4ed6\u526f\u672c\u4f5c\u4e3a\u8ffd\u968f\u8005\uff08Follower\uff09\u3002\u9886\u5bfc\u8005\u8d1f\u8d23\u5904\u7406\u6240\u6709\u7684\u8bfb\u5199\u8bf7\u6c42\uff0c\u800c\u8ffd\u968f\u8005\u5219\u901a\u8fc7\u590d\u5236\u9886\u5bfc\u8005\u7684\u6570\u636e\u6765\u63d0\u4f9b\u5197\u4f59\u5907\u4efd\u548c\u6545\u969c\u6062\u590d\u3002\u5f53\u9886\u5bfc\u8005\u53d1\u751f\u6545\u969c\u65f6\uff0c\u8ffd\u968f\u8005\u4e2d\u7684\u4e00\u4e2a\u4f1a\u88ab\u9009\u4e3e\u4e3a\u65b0\u7684\u9886\u5bfc\u8005\u3002</li> <li>ISR\uff08In-Sync Replica\uff09\u673a\u5236\uff1a \u5728 Kafka \u4e2d\uff0c\u8ffd\u968f\u8005\u7684\u526f\u672c\u9700\u8981\u4e0e\u9886\u5bfc\u8005\u4fdd\u6301\u540c\u6b65\u624d\u80fd\u63d0\u4f9b\u53ef\u9760\u7684\u6570\u636e\u590d\u5236\u3002Kafka \u4f7f\u7528 ISR \u673a\u5236\u6765\u786e\u5b9a\u4e00\u7ec4\u5904\u4e8e\u540c\u6b65\u72b6\u6001\u7684\u526f\u672c\u3002\u53ea\u6709\u5c5e\u4e8e ISR \u4e2d\u7684\u526f\u672c\u624d\u80fd\u53c2\u4e0e\u6570\u636e\u7684\u590d\u5236\u548c\u8bfb\u53d6\u64cd\u4f5c\u3002\u5982\u679c\u67d0\u4e2a\u526f\u672c\u65e0\u6cd5\u53ca\u65f6\u590d\u5236\u9886\u5bfc\u8005\u7684\u6570\u636e\u6216\u53d1\u751f\u6545\u969c\uff0c\u5b83\u5c06\u4ece ISR \u4e2d\u79fb\u9664\uff0c\u76f4\u5230\u4e0e\u9886\u5bfc\u8005\u4fdd\u6301\u540c\u6b65\u4e3a\u6b62\u3002</li> <li>Controller \u9009\u4e3e\uff1a Kafka \u96c6\u7fa4\u4e2d\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u8282\u70b9\u79f0\u4e3a Controller\uff0c\u8d1f\u8d23\u7ba1\u7406\u5206\u533a\u548c\u526f\u672c\u7684\u72b6\u6001\u3002\u5f53\u96c6\u7fa4\u4e2d\u7684 Controller \u53d1\u751f\u6545\u969c\u65f6\uff0c\u4f1a\u81ea\u52a8\u8fdb\u884c Controller \u7684\u9009\u4e3e\uff0c\u786e\u4fdd\u96c6\u7fa4\u80fd\u591f\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u3002\u9009\u4e3e\u5b8c\u6210\u540e\uff0c\u65b0\u9009\u4e3e\u51fa\u7684 Controller \u8d1f\u8d23\u7ef4\u62a4\u548c\u7ba1\u7406\u5206\u533a\u548c\u526f\u672c\u7684\u72b6\u6001\u3002</li> <li>\u6545\u969c\u6062\u590d\uff1a \u5f53\u9886\u5bfc\u8005\u6216\u526f\u672c\u53d1\u751f\u6545\u969c\u65f6\uff0cKafka \u4f1a\u81ea\u52a8\u8fdb\u884c\u6545\u969c\u6062\u590d\u3002\u8ffd\u968f\u8005\u4e2d\u7684\u4e00\u4e2a\u526f\u672c\u4f1a\u88ab\u9009\u4e3e\u4e3a\u65b0\u7684\u9886\u5bfc\u8005\uff0c\u5e76\u4ece ISR \u4e2d\u6dfb\u52a0\u65b0\u7684\u526f\u672c\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u7684\u53ef\u9760\u6027\u548c\u9ad8\u53ef\u7528\u6027\u3002\u4e00\u65e6\u6545\u969c\u526f\u672c\u6062\u590d\u6b63\u5e38\uff0c\u5b83\u5c06\u518d\u6b21\u52a0\u5165 ISR\uff0c\u53c2\u4e0e\u6570\u636e\u7684\u590d\u5236\u548c\u8bfb\u53d6\u3002</li> <li>\u6570\u636e\u6301\u4e45\u5316\uff1a Kafka \u4f7f\u7528\u78c1\u76d8\u4f5c\u4e3a\u4e3b\u8981\u7684\u6570\u636e\u5b58\u50a8\u4ecb\u8d28\uff0c\u6d88\u606f\u548c\u65e5\u5fd7\u88ab\u6301\u4e45\u5316\u5199\u5165\u5230\u78c1\u76d8\u4e2d\u3002\u8fd9\u6837\u5373\u4f7f\u53d1\u751f\u8282\u70b9\u6545\u969c\uff0c\u6570\u636e\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002Kafka \u8fd8\u652f\u6301\u6570\u636e\u7684\u538b\u7f29\u548c\u6570\u636e\u6bb5\u7684\u5206\u5272\uff0c\u4ee5\u4f18\u5316\u5b58\u50a8\u548c\u63d0\u9ad8\u8bfb\u5199\u6027\u80fd\u3002</li> </ol>"},{"location":"kafka/optimization/","title":"Kafka\u4f18\u5316","text":""},{"location":"kafka/optimization/#_1","title":"\u5982\u4f55\u9632\u6b62\u6d88\u606f\u4e22\u5931\uff1f","text":""},{"location":"kafka/optimization/#producer","title":"Producer \u7aef","text":"ack \u673a\u5236 <p>Producer \u5728\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e ack \u673a\u5236\u6765\u4fdd\u8bc1\u6d88\u606f\u7684\u53d1\u9001\u6210\u529f\u3002ack \u673a\u5236\u6709\u4e09\u79cd\u7ea7\u522b\uff1a</p> <ul> <li>0\uff1a\u4e0d\u7b49\u5f85\u4efb\u4f55 ack\uff0c\u6d88\u606f\u53d1\u9001\u540e\u7acb\u5373\u8fd4\u56de\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u6d88\u606f\u4e22\u5931\u7684\u53ef\u80fd\u6027\u6700\u9ad8\u3002</li> <li>1\uff1a\u7b49\u5f85 Leader \u5206\u533a\u526f\u672c\u6536\u5230\u6d88\u606f\u540e\u8fd4\u56de\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u53ea\u6709 Leader \u5206\u533a\u526f\u672c\u4e22\u5931\uff0c\u624d\u4f1a\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u3002</li> <li>all\uff1a\u7b49\u5f85\u6240\u6709 ISR \u5206\u533a\u526f\u672c\u6536\u5230\u6d88\u606f\u540e\u8fd4\u56de\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u53ea\u6709\u6240\u6709 ISR \u5206\u533a\u526f\u672c\u90fd\u4e22\u5931\uff0c\u624d\u4f1a\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u3002</li> </ul> \u91cd\u8bd5\u673a\u5236 <p>Producer \u5728\u53d1\u9001\u6d88\u606f\u5931\u8d25\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e\u91cd\u8bd5\u673a\u5236\u6765\u518d\u6b21\u53d1\u9001\u6d88\u606f\u3002\u91cd\u8bd5\u673a\u5236\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u6d88\u606f\u4e22\u5931\u7684\u53ef\u80fd\u6027\u3002</p> <ul> <li>Producer \u7aef\u53d1\u9001\u6d88\u606f\u7684\u91cd\u8bd5\u6b21</li> <li>\u4e24\u6b21\u91cd\u8bd5\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4</li> </ul>"},{"location":"kafka/optimization/#broker","title":"Broker \u7aef","text":"<ul> <li>\u6d88\u606f\u6301\u4e45\u5316\uff1aKafka \u5c06\u6d88\u606f\u6301\u4e45\u5316\u5230\u78c1\u76d8\u4e0a\uff0c\u5373\u4f7f Broker \u5b95\u673a\uff0c\u6d88\u606f\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002</li> <li>\u526f\u672c\u673a\u5236\uff1aKafka \u5c06\u6bcf\u4e2a\u5206\u533a\u7684\u6d88\u606f\u590d\u5236\u5230\u591a\u4e2a\u526f\u672c\u4e0a\uff0c\u5373\u4f7f\u4e00\u4e2a\u526f\u672c\u4e22\u5931\uff0c\u5176\u4ed6\u526f\u672c\u4ecd\u7136\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\u3002</li> </ul>"},{"location":"kafka/optimization/#consumer","title":"Consumer \u7aef","text":"<p>offset \u673a\u5236\uff1aConsumer \u6d88\u8d39\u6d88\u606f\u65f6\uff0c\u4f1a\u8bb0\u5f55\u6d88\u8d39\u7684\u4f4d\u7f6e\uff0c\u79f0\u4e3a offset\u3002</p> <p>offset \u673a\u5236\u4fdd\u8bc1\u4e86 Consumer \u4e0d\u4f1a\u91cd\u590d\u6d88\u8d39\u6d88\u606f\u3002</p> <p>\u4e3a\u4e86\u4e0d\u4e22\u6570\u636e\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u662f\uff1a\u62c9\u53d6\u6570\u636e\u3001 \u4e1a\u52a1\u903b\u8f91\u5904\u7406\u3001 \u63d0\u4ea4\u6d88\u8d39 Offset \u4f4d\u79fb\u4fe1\u606f\u3002</p> <p>\u8bbe\u7f6e\u53c2\u6570 <code>enable.auto.commit = false</code>, \u91c7\u7528\u624b\u52a8\u63d0\u4ea4\u4f4d\u79fb\u7684\u65b9\u5f0f\u3002\u53e6\u5916\u5bf9\u4e8e\u6d88\u8d39\u6d88\u606f\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u4e1a\u52a1\u81ea\u5df1\u4fdd\u8bc1\u5e42\u7b49\u6027, \u4fdd\u8bc1\u53ea\u6210\u529f\u6d88\u8d39\u4e00\u6b21\u5373\u53ef\u3002</p> <p>\u4e1a\u52a1\u5b9e\u73b0\u5e42\u7b49\u6027</p> <p>\u4ee5\u5904\u7406\u8ba2\u5355\u6d88\u606f\u4e3a\u4f8b\u3002</p> <p>\u5e42\u7b49Key\u7531\u8ba2\u5355\u7f16\u53f7+\u8ba2\u5355\u72b6\u6001\u6240\u7ec4\u6210\uff0c\u5728\u5904\u7406\u4e4b\u524d\uff0c\u9996\u5148\u4f1a\u53bbRedis\u67e5\u8be2\u662f\u5426\u5b58\u5728\u5f53\u524dKey\u3002</p> <ul> <li>\u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u5df2\u7ecf\u5904\u7406\u8fc7\uff0c\u76f4\u63a5\u4e22\u5f03\uff1b</li> <li>\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u7ee7\u7eed\u5f80\u4e0b\u5904\u7406\uff0c\u6700\u7ec8\u7684\u903b\u8f91\u662f\u5c06\u5904\u7406\u8fc7\u7684\u6570\u636e\u63d2\u5165\u5230\u4e1a\u52a1 DB \u4e2d\uff0c\u6700\u7ec8\u628a\u5e42\u7b49 Key \u63d2\u5165\u5230 Redis\u3002</li> </ul> <p>Redis \u5176\u5b9e\u53ea\u662f\u4e00\u4e2a\u300c\u524d\u7f6e\u300d\u5904\u7406\uff0c\u6700\u7ec8\u7684\u5e42\u7b49\u6027\u662f\u4f9d\u8d56\u6570\u636e\u5e93\u7684\u552f\u4e00 Key \u6765\u4fdd\u8bc1\u7684\uff08\u552f\u4e00 Key \u5b9e\u9645\u4e0a\u4e5f\u662f\u8ba2\u5355\u7f16\u53f7+\u72b6\u6001\uff09</p>"},{"location":"kafka/optimization/#_2","title":"\u5982\u4f55\u9632\u6b62\u91cd\u590d\u6d88\u8d39\uff1f","text":"<p>Kafka Broker \u4e0a\u5b58\u50a8\u7684\u6d88\u606f\uff0c\u90fd\u6709\u4e00\u4e2a Offset \u6807\u8bb0\u3002\u7136\u540e kafka \u7684\u6d88\u8d39\u8005\u662f\u901a\u8fc7 offSet \u6807\u8bb0\u6765\u7ef4\u62a4\u5f53\u524d\u5df2\u7ecf\u6d88\u8d39\u7684\u6570\u636e\uff0c\u6bcf\u6d88\u8d39\u4e00\u6279\u6570\u636e\uff0cKafka Broker \u5c31\u4f1a\u66f4\u65b0 OffSet \u7684\u503c\uff0c\u907f\u514d\u91cd\u590d\u6d88\u8d39\u3002</p>"},{"location":"kafka/optimization/#_3","title":"\u51fa\u73b0\u91cd\u590d\u6d88\u8d39\u7684\u60c5\u51b5","text":"<ul> <li>\u5728 Consumer \u6d88\u8d39\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u88ab\u5f3a\u5236 kill \u6389\u6216\u8005\u5b95\u673a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 Offset \u6ca1\u63d0\u4ea4\uff0c\u4ece\u800c\u4ea7\u751f\u91cd\u590d\u63d0\u4ea4\u7684\u95ee\u9898\u3002</li> <li>Consumer \u7aef\u4f1a\u4ece\u5206\u914d\u7684 Partition \u91cc\u9762\u53bb\u6d88\u8d39\u6d88\u606f\uff0c\u5982\u679c Consumer \u5728\u9ed8\u8ba4\u7684 5 \u5206\u949f\u5185\u6ca1\u529e\u6cd5\u5904\u7406\u5b8c\u8fd9\u4e00\u6279\u6d88\u606f\u3002\u6b64\u65f6\u5c31\u4f1a\u89e6\u53d1 Kafka \u7684 Rebalance \u673a\u5236\uff0c\u4ece\u800c\u5bfc\u81f4 Offset \u81ea\u52a8\u63d0\u4ea4\u5931\u8d25\u3002</li> </ul>"},{"location":"kafka/optimization/#_4","title":"\u89e3\u51b3\u529e\u6cd5","text":"<ul> <li>\u63d0\u9ad8\u6d88\u8d39\u7aef\u7684\u5904\u7406\u6027\u80fd\u907f\u514d\u89e6\u53d1 Balance\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\u6765\u5904\u7406\u6d88\u606f\uff0c\u7f29\u77ed\u5355\u4e2a\u6d88\u606f\u6d88\u8d39\u7684\u5e02\u573a\u3002\u6216\u8005\u8fd8\u53ef\u4ee5\u8c03\u6574\u6d88\u606f\u5904\u7406\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u8fd8\u53ef\u4ee5\u51cf\u5c11\u4e00\u6b21\u6027\u4ece Broker \u4e0a\u62c9\u53d6\u6570\u636e\u7684\u6761\u6570\u3002</li> <li>\u53ef\u4ee5\u9488\u5bf9\u6d88\u606f\u751f\u6210 md5 \u7136\u540e\u4fdd\u5b58\u5230 mysql \u6216\u8005 redis \u91cc\u9762\uff0c\u5728\u5904\u7406\u6d88\u606f\u4e4b\u524d\u5148\u53bb mysql \u6216\u8005 redis \u91cc\u9762\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u6d88\u8d39\u8fc7\u3002\u8fd9\u4e2a\u65b9\u6848\u5176\u5b9e\u5c31\u662f\u5229\u7528\u5e42\u7b49\u6027\u7684\u601d\u60f3\u3002</li> </ul>"},{"location":"kafka/optimization/#_5","title":"\u5982\u4f55\u505a\u5230\u6d88\u606f\u7684\u987a\u5e8f\u6d88\u8d39\uff1f","text":"<ul> <li>\u751f\u4ea7\u8005\uff1a\u901a\u8fc7\u5206\u533a\u7684 leader \u526f\u672c\u8d1f\u8d23\u6570\u636e\u4ee5\u5148\u8fdb\u5148\u51fa\u7684\u987a\u5e8f\u5199\u5165\uff0c\u6765\u4fdd\u8bc1\u6d88\u606f\u987a\u5e8f\u6027\u3002</li> <li>\u6d88\u8d39\u8005\uff1a\u540c\u4e00\u4e2a\u5206\u533a\u5185\u7684\u6d88\u606f\u53ea\u80fd\u88ab\u4e00\u4e2a group \u91cc\u7684\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u4fdd\u8bc1\u5206\u533a\u5185\u6d88\u8d39\u6709\u5e8f\u3002</li> </ul> <p>kafka \u6bcf\u4e2a partition \u4e2d\u7684\u6d88\u606f\u5728\u5199\u5165\u65f6\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6d88\u8d39\u65f6\uff0c \u6bcf\u4e2a partition \u53ea\u80fd\u88ab\u6bcf\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\u4e2d\u7684\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u4fdd\u8bc1\u4e86\u6d88\u8d39\u65f6\u4e5f\u662f\u6709\u5e8f\u7684\u3002</p> <p>\u6574\u4e2a kafka \u4e0d\u4fdd\u8bc1\u6709\u5e8f\u3002\u5982\u679c\u4e3a\u4e86\u4fdd\u8bc1 kafka \u5168\u5c40\u6709\u5e8f\uff0c\u90a3\u4e48\u8bbe\u7f6e\u4e00\u4e2a\u751f\u4ea7\u8005\uff0c\u4e00\u4e2a\u5206\u533a\uff0c\u4e00\u4e2a\u6d88\u8d39\u8005\u3002</p> <p>\u987a\u5e8f\u6d88\u8d39\u7684\u95ee\u9898</p> <p>\u4fdd\u8bc1\u6700\u7ec8\u4e00\u81f4\u6027</p> <ul> <li>\u5bbd\u8868\uff1a\u5982\u8ba2\u5355\u72b6\u6001\uff0c\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u72ec\u7acb\u5b57\u6bb5\u3002\u6d88\u606f\u6765\u4e86\uff0c\u53ea\u66f4\u65b0\u5bf9\u5e94\u7684\u5b57\u6bb5\u5c31\u597d\uff0c\u6d88\u606f\u53ea\u4f1a\u6682\u65f6\u4e0d\u4e00\u6837\uff0c\u6700\u7ec8\u662f\u4e00\u81f4\u7684\u3002</li> <li>\u6d88\u606f\u8865\u507f\uff1a\u53e6\u4e00\u4e2a\u8fdb\u884c\u6d88\u8d39\u76f8\u540ctopic\u7684\u6570\u636e\uff0c\u6d88\u606f\u843d\u76d8\uff0c\u5ef6\u8fdf\u5904\u7406\u3002\u5c06\u6d88\u606f\u4e0eDB\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679c\u53d1\u73b0\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u518d\u91cd\u65b0\u53d1\u9001\u6d88\u606f\u81f3\u4e3b\u8fdb\u7a0b\u5904\u7406</li> <li>\u6839\u636e\u552f\u4e00\u6807\u8bc6\u8def\u7531\u5230\u540c\u4e00\u4e2apartition\uff1a\u5982\u6839\u636e user_id \u6216\u8005 order_id \u53d1\u9001\u5230\u76f8\u540c\u7684 partition (\u4e00\u4e2apartition\u7531\u4e00\u4e2aconsumer\u6d88\u8d39)</li> </ul>"},{"location":"kafka/optimization/#_6","title":"\u5982\u4f55\u89e3\u51b3\u6d88\u606f\u79ef\u538b\u95ee\u9898\uff1f","text":"<p>\u6d88\u8d39\u8005\u7684\u6d88\u8d39\u901f\u5ea6\u8fdc\u8d76\u4e0d\u4e0a\u751f\u4ea7\u8005\u7684\u751f\u4ea7\u6d88\u606f\u7684\u901f\u5ea6\uff0c\u5bfc\u81f4 kafka \u4e2d\u6709\u5927\u91cf\u7684\u6570\u636e\u6ca1\u6709\u88ab\u6d88\u8d39\u3002</p> <p>\u968f\u7740\u6ca1\u6709\u88ab\u6d88\u8d39\u7684\u6570\u636e\u5806\u79ef\u8d8a\u591a\uff0c\u6d88\u8d39\u8005\u5bfb\u5740\u7684\u6027\u80fd\u4f1a\u8d8a\u6765\u8d8a\u5dee\uff0c\u6700\u540e\u5bfc\u81f4\u6574\u4e2a kafka \u5bf9\u5916\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u6027\u80fd\u5f88\u5dee\uff0c\u4ece\u800c\u9020\u6210\u5176\u4ed6\u670d\u52a1\u4e5f\u8bbf\u95ee\u901f\u5ea6\u53d8\u6162\uff0c\u9020\u6210\u670d\u52a1\u96ea\u5d29\u3002</p> <p>\u89e3\u51b3\u65b9\u6848</p> <ul> <li>\u5728\u8fd9\u4e2a\u6d88\u8d39\u8005\u4e2d\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u5145\u5206\u5229\u7528\u673a\u5668\u7684\u6027\u80fd\u8fdb\u884c\u6d88\u8d39\u6d88\u606f\u3002</li> <li>\u521b\u5efa\u591a\u4e2a\u6d88\u8d39\u7ec4\uff0c\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u90e8\u7f72\u5230\u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u4e00\u8d77\u6d88\u8d39\uff0c\u63d0\u9ad8\u6d88\u8d39\u8005\u7684\u6d88\u8d39\u901f\u5ea6</li> <li>\u4f18\u5316\u4e1a\u52a1\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u63d0\u5347\u4e1a\u52a1\u5c42\u9762\u6d88\u8d39\u7684\u6027\u80fd\u3002</li> <li>\u6d88\u606f\u8f6c\u53d1\u81f3\u65b0\u7684\u4e3b\u9898\uff1a\u521b\u5efa\u4e00\u4e2a\u6d88\u8d39\u8005\uff0c\u8be5\u6d88\u8d39\u8005\u5728 kafka \u53e6\u5efa\u4e00\u4e2a\u4e3b\u9898\uff0c\u914d\u4e0a\u591a\u4e2a\u5206\u533a\uff0c\u591a\u4e2a\u5206\u533a\u518d\u914d\u4e0a\u591a\u4e2a\u6d88\u8d39\u8005\u3002\u8be5\u6d88\u8d39\u8005\u5c06 poll \u4e0b\u6765\u7684\u6d88\u606f\uff0c\u4e0d\u8fdb\u884c\u6d88\u8d39\uff0c\u76f4\u63a5\u8f6c\u53d1\u5230\u65b0\u5efa\u7684\u4e3b\u9898\u4e0a\u3002\u6b64\u65f6\uff0c\u65b0\u7684\u4e3b\u9898\u7684\u591a\u4e2a\u5206\u533a\u7684\u591a\u4e2a\u6d88\u8d39\u8005\u5c31\u5f00\u59cb\u4e00\u8d77\u6d88\u8d39\u4e86\u3002\u2014\u2014\u4e0d\u5e38\u7528</li> </ul>"},{"location":"leetcode/","title":"LeetCode\u9898\u89e3","text":""},{"location":"leetcode/101/","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811","text":"","boost":2},{"location":"leetcode/101/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c \u68c0\u67e5\u5b83\u662f\u5426\u8f74\u5bf9\u79f0\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,2,2,3,4,4,3]</p> <p>\u8f93\u51fa\uff1atrue</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,2,2,null,3,null,3]</p> <p>\u8f93\u51fa\uff1afalse</p>","boost":2},{"location":"leetcode/101/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u53cc\u6307\u9488+\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/101/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func isSameTree(p, q *TreeNode) bool {\n    if p == nil || q == nil {\n        return p == q\n    }\n    return p.Val == q.Val &amp;&amp; isSameTree(p.Left, q.Right) &amp;&amp; isSameTree(p.Right, q.Left)\n}\n\nfunc isSymmetric(root *TreeNode) bool {\n    return isSameTree(root.Left, root.Right)\n}\n</code></pre> Python<pre><code>class Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -&gt; bool:\n        if not p or not q:\n            return p is q\n        return (\n            p.val == q.val and\n            self.isSameTree(p.left, q.right) and\n            self.isSameTree(p.right, q.left)\n        )\n\n    def isSymmetric(self, root: Optional[TreeNode]) -&gt; bool:\n        return self.isSameTree(root.left, root.right)\n</code></pre>","boost":2},{"location":"leetcode/103/","title":"103. \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386","text":"","boost":2},{"location":"leetcode/103/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u8fd4\u56de\u5176\u8282\u70b9\u503c\u7684 \u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386 \u3002\uff08\u5373\u5148\u4ece\u5de6\u5f80\u53f3\uff0c\u518d\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u4e0b\u4e00\u5c42\u904d\u5386\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u4ea4\u66ff\u8fdb\u884c\uff09\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165: root = [3,9,20,null,null,15,7]</p> <p>\u8f93\u51fa: [[3],[20,9],[15,7]]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: root = [1]</p> <p>\u8f93\u51fa: [1]</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: root = []</p> <p>\u8f93\u51fa: []</p>","boost":2},{"location":"leetcode/103/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func zigzagLevelOrder(root *TreeNode) (ans [][]int) {\n    if root == nil {\n        return\n    }\n    cur := []*TreeNode{root}\n    for len(cur) &gt; 0 {\n        nxt := []*TreeNode{}\n        vals := make([]int, len(cur)) // \u5927\u5c0f\u5df2\u77e5\n        for i, node := range cur {\n            if len(ans)%2 &gt; 0 {\n                vals[len(cur)-1-i] = node.Val // \u5012\u7740\u6dfb\u52a0\n            } else {\n                vals[i] = node.Val\n            }\n            if node.Left != nil {\n                nxt = append(nxt, node.Left)\n            }\n            if node.Right != nil {\n                nxt = append(nxt, node.Right)\n            }\n        }\n        cur = nxt\n        ans = append(ans, vals)\n    }\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def zigzagLevelOrder(self, root: Optional[TreeNode]) -&gt; List[List[int]]:\n        if root is None:\n            return []\n        ans = []\n        cur = [root]\n        while cur:\n            nxt = []\n            vals = []\n            for node in cur:\n                vals.append(node.val)\n                if node.left:  nxt.append(node.left)\n                if node.right: nxt.append(node.right)\n            cur = nxt\n            ans.append(vals[::-1] if len(ans) % 2 else vals)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/103/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/103/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4</li> </ul>","boost":2},{"location":"leetcode/104/","title":"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6","text":"","boost":2},{"location":"leetcode/104/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811 root \uff0c\u8fd4\u56de\u5176\u6700\u5927\u6df1\u5ea6\u3002</p> <p>\u4e8c\u53c9\u6811\u7684 \u6700\u5927\u6df1\u5ea6 \u662f\u6307\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1aroot = [3,9,20,null,null,15,7]</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = [1,null,2]</p> <p>\u8f93\u51fa\uff1a2</p>","boost":2},{"location":"leetcode/104/#_2","title":"\u601d\u8def","text":"<p>\u6811\u7684\u904d\u5386\u65b9\u5f0f\u603b\u4f53\u5206\u4e3a\u4e24\u7c7b\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\u3002</p> <ul> <li>\u5e38\u89c1 DFS \uff1a \u5148\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u3001\u540e\u5e8f\u904d\u5386\u3002</li> <li>\u5e38\u89c1 BFS \uff1a \u5c42\u5e8f\u904d\u5386\uff08\u5373\u6309\u5c42\u904d\u5386\uff09\u3002</li> </ul> <p>\u6b64\u9898\u4f7f\u7528\u540e\u5e8f\u904d\u5386\uff08DFS\uff09\uff1a</p> <ul> <li>\u6811\u7684\u6df1\u5ea6 \u7b49\u4e8e \u5de6\u5b50\u6811\u7684\u6df1\u5ea6 \u4e0e \u53f3\u5b50\u6811\u7684\u6df1\u5ea6 \u4e2d\u7684 \u6700\u5927\u503c +1\u3002</li> </ul>","boost":2},{"location":"leetcode/104/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/104/#_4","title":"\u9898\u89e3","text":"Go<pre><code>func maxDepth(root *TreeNode) int {\n    if root == nil {\n        return 0\n    }\n\n    return 1 + max(maxDepth(root.Left), maxDepth(root.Right))\n}\n\nfunc max(a, b int) int {\n    if a &gt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -&gt; int:\n        if not root:\n            return 0\n        return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))\n</code></pre>","boost":2},{"location":"leetcode/105/","title":"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811","text":"","boost":2},{"location":"leetcode/105/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u6570\u7ec4 <code>preorder</code> \u548c <code>inorder</code> \uff0c\u5176\u4e2d <code>preorder</code> \u662f\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\uff0c <code>inorder</code> \u662f\u540c\u4e00\u68f5\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u8bf7\u6784\u9020\u4e8c\u53c9\u6811\u5e76\u8fd4\u56de\u5176\u6839\u8282\u70b9\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1apreorder = [3,9,20,15,7], inorder = [9,3,15,20,7]</p> <p>\u8f93\u51fa\uff1a[3,9,20,null,null,15,7]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1apreorder = [-1], inorder = [-1]</p> <p>\u8f93\u51fa\uff1a[-1]</p>","boost":2},{"location":"leetcode/105/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(\\textit{preorder}\\) \u7684\u957f\u5ea6\u3002\u9012\u5f52 \\(O(n)\\) \u6b21\uff0c\u6bcf\u6b21\u53ea\u9700\u8981 \\(O(1)\\) \u7684\u65f6\u95f4\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/105/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func buildTree(preorder, inorder []int) *TreeNode {\n    n := len(preorder)\n    index := make(map[int]int, n)\n    for i, x := range inorder {\n        index[x] = i\n    }\n\n    var dfs func(int, int, int, int) *TreeNode\n    dfs = func(preL, preR, inL, inR int) *TreeNode {\n        if preL == preR { // \u7a7a\u8282\u70b9\n            return nil\n        }\n        leftSize := index[preorder[preL]] - inL // \u5de6\u5b50\u6811\u7684\u5927\u5c0f\n        left := dfs(preL+1, preL+1+leftSize, inL, inL+leftSize)\n        right := dfs(preL+1+leftSize, preR, inL+1+leftSize, inR)\n        return &amp;TreeNode{preorder[preL], left, right}\n    }\n    return dfs(0, n, 0, n) // \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n}\n</code></pre> Python<pre><code>class Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -&gt; Optional[TreeNode]:\n        index = {x: i for i, x in enumerate(inorder)}\n\n        def dfs(pre_l: int, pre_r: int, in_l: int, in_r: int) -&gt; Optional[TreeNode]:\n            if pre_l == pre_r:  # \u7a7a\u8282\u70b9\n                return None\n            left_size = index[preorder[pre_l]] - in_l  # \u5de6\u5b50\u6811\u7684\u5927\u5c0f\n            left = dfs(pre_l + 1, pre_l + 1 + left_size, in_l, in_l + left_size)\n            right = dfs(pre_l + 1 + left_size, pre_r, in_l + 1 + left_size, in_r)\n            return TreeNode(preorder[pre_l], left, right)\n\n        return dfs(0, len(preorder), 0, len(inorder))  # \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n</code></pre>","boost":2},{"location":"leetcode/105/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811</li> </ul>","boost":2},{"location":"leetcode/108/","title":"108. \u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811","text":"","boost":2},{"location":"leetcode/108/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u5176\u4e2d\u5143\u7d20\u5df2\u7ecf\u6309 \u5347\u5e8f \u6392\u5217\uff0c\u8bf7\u4f60\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1anums = [-10,-3,0,5,9]</p> <p>\u8f93\u51fa\uff1a[0,-3,9,-10,null,5]</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1anums = [1,3]</p> <p>\u8f93\u51fa\uff1a[3,1]</p>","boost":2},{"location":"leetcode/108/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u524d\u5e8f\u904d\u5386</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u6bcf\u4e2a\u6570\u5b57\u53ea\u8bbf\u95ee\u4e00\u6b21\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(log\\ n)\\)\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8e\u9012\u5f52\u6808\u7684\u6df1\u5ea6\uff0c\u9012\u5f52\u6808\u7684\u6df1\u5ea6\u662f \\(O(log\\ n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/108/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func sortedArrayToBST(nums []int) *TreeNode {\n    var dfs func(nums []int, left, right int) *TreeNode\n    dfs = func(nums []int, left, right int) *TreeNode {\n        if left &gt; right {\n            return nil\n        }\n\n        mid := (left + right + 1) / 2\n        root := &amp;TreeNode{Val: nums[mid]}\n        root.Left = dfs(nums, left, mid - 1)\n        root.Right = dfs(nums, mid + 1, right)\n        return root\n    }\n    return dfs(nums)\n}\n</code></pre> Python<pre><code>class Solution:\n    def sortedArrayToBST(self, nums: List[int]) -&gt; Optional[TreeNode]:\n        def dfs(nums: List[int], left: int, right: int) -&gt; Optional[TreeNode]:\n            if left &gt; right:\n                return None\n\n            mid = (left + right + 1 ) // 2\n            root = TreeNode(val=nums[mid])\n            root.left = dfs(nums, left, mid-1)\n            root.right = dfs(nums, mid+1, right)\n            return root\n\n        return dfs(nums, 0, len(nums)-1)\n</code></pre>","boost":2},{"location":"leetcode/111/","title":"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6","text":"","boost":2},{"location":"leetcode/111/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u51fa\u5176\u6700\u5c0f\u6df1\u5ea6\u3002</p> <p>\u6700\u5c0f\u6df1\u5ea6\u662f\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fd1\u53f6\u5b50\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u91cf\u3002</p> <p>\u8bf4\u660e\uff1a\u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [3,9,20,null,null,15,7]</p> <p>\u8f93\u51fa\uff1a2</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = [2,null,3,null,4,null,5,null,6]</p> <p>\u8f93\u51fa\uff1a5</p>","boost":2},{"location":"leetcode/111/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u53cc\u6307\u9488+\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/111/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func minDepth(root *TreeNode) int {\n    if root == nil {\n        return 0\n    }\n\n    // \u53ea\u6709\u6839\u8282\u70b9\n    if root.Left ==  nil &amp;&amp; root.Right == nil {\n        return 1\n    }\n\n    leftMin := minDepth(root.Left)\n    rightMin := minDepth(root.Right)\n\n    // \u5de6\u5b50\u6811\u975e\u7a7a, \u53f3\u5b50\u6811\u4e3a\u7a7a\n    if root.Left != nil &amp;&amp; root.right == nil {\n        return 1 + leftMin\n    }\n\n    // \u53f3\u5b50\u6811\u975e\u7a7a, \u5de6\u5b50\u6811\u4e3a\u7a7a\n    if root.Left == nil &amp;&amp; root.right != nil {\n        return 1 + rightMin\n    }\n\n    return 1 + min(leftMin, rightMin)\n}\n\nfunc min(a, b int) int {\n    if a &lt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def minDepth(self, root: Optional[TreeNode]) -&gt; int:\n        if root == None:\n            return 0\n\n        # \u53ea\u6709\u6839\u8282\u70b9\n        if root.left == None and root.right == None:\n            return 1\n\n        left_min = self.minDepth(root.left)\n        right_min = self.minDepth(root.right)\n\n        # \u5de6\u5b50\u6811\u975e\u7a7a, \u53f3\u5b50\u6811\u4e3a\u7a7a\n        if root.left != None and root.right == None:\n            return 1 + left_min\n\n        # \u53f3\u5b50\u6811\u975e\u7a7a, \u5de6\u5b50\u6811\u4e3a\u7a7a\n        if root.left == None and root.right != None:\n            return 1 + right_min\n\n        return 1 + min(left_min, right_min)\n</code></pre>","boost":2},{"location":"leetcode/114/","title":"114. \u4e8c\u53c9\u6811\u5c55\u5f00\u4e3a\u94fe\u8868","text":"","boost":2},{"location":"leetcode/114/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9 <code>root</code> \uff0c\u8bf7\u4f60\u5c06\u5b83\u5c55\u5f00\u4e3a\u4e00\u4e2a\u5355\u94fe\u8868\uff1a</p> <ul> <li>\u5c55\u5f00\u540e\u7684\u5355\u94fe\u8868\u5e94\u8be5\u540c\u6837\u4f7f\u7528 <code>TreeNode</code> \uff0c\u5176\u4e2d <code>right</code> \u5b50\u6307\u9488\u6307\u5411\u94fe\u8868\u4e2d\u4e0b\u4e00\u4e2a\u7ed3\u70b9\uff0c\u800c\u5de6\u5b50\u6307\u9488\u59cb\u7ec8\u4e3a <code>null</code> \u3002</li> <li>\u5c55\u5f00\u540e\u7684\u5355\u94fe\u8868\u5e94\u8be5\u4e0e\u4e8c\u53c9\u6811 \u5148\u5e8f\u904d\u5386 \u987a\u5e8f\u76f8\u540c\u3002</li> </ul> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,2,5,3,4,null,6]</p> <p>\u8f93\u51fa\uff1a[1,null,2,null,3,null,4,null,5,null,6]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = []</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/114/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u524d\u5e8f\u904d\u5386</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u6bcf\u4e2a\u6570\u5b57\u53ea\u8bbf\u95ee\u4e00\u6b21\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8e\u9012\u5f52\u6808\u7684\u6df1\u5ea6\uff0c\u9012\u5f52\u6808\u7684\u6df1\u5ea6\u662f \\(O(logn)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/114/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func flatten(root *TreeNode)  {\n    list := preorderTraversal(root)\n    for i := 1; i &lt; len(list); i++ {\n        prev, curr := list[i-1], list[i]\n        prev.Left, prev.Right = nil, curr\n    }\n}\n\nfunc preorderTraversal(root *TreeNode) []*TreeNode {\n    list := []*TreeNode{}\n    if root != nil {\n        list = append(list, root)\n        list = append(list, preorderTraversal(root.Left)...)\n        list = append(list, preorderTraversal(root.Right)...)\n    }\n\n    return list\n}\n</code></pre> Python<pre><code>class Solution:\n    def flatten(self, root: Optional[TreeNode]) -&gt; None:\n        \"\"\"\n        Do not return anything, modify root in-place instead.\n        \"\"\"\n        preorderList = []\n        def preorder_traversal(root: Optional[TreeNode]):\n            if root:\n                preorderList.append(root)\n                preorder_traversal(root.left)\n                preorder_traversal(root.right)\n\n        preorder_traversal(root)\n\n        for i in range(1, len(preorderList)):\n            prev, curr = preorderList[i-1], preorderList[i]\n            prev.left, prev.right = None, curr\n</code></pre>","boost":2},{"location":"leetcode/121/","title":"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":"","boost":2},{"location":"leetcode/121/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 <code>prices</code> \uff0c\u5b83\u7684\u7b2c <code>i</code> \u4e2a\u5143\u7d20 <code>prices[i]</code> \u8868\u793a\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c <code>i</code> \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u4f60\u53ea\u80fd\u9009\u62e9 \u67d0\u4e00\u5929 \u4e70\u5165\u8fd9\u53ea\u80a1\u7968\uff0c\u5e76\u9009\u62e9\u5728 \u672a\u6765\u7684\u67d0\u4e00\u4e2a\u4e0d\u540c\u7684\u65e5\u5b50 \u5356\u51fa\u8be5\u80a1\u7968\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u8fd4\u56de\u4f60\u53ef\u4ee5\u4ece\u8fd9\u7b14\u4ea4\u6613\u4e2d\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de <code>0</code> \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: [7,1,5,3,6,4]</p> <p>\u8f93\u51fa: 5</p> <p>\u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002      \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\uff1b\u540c\u65f6\uff0c\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u524d\u5356\u51fa\u80a1\u7968\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: prices = [7,6,4,3,1]</p> <p>\u8f93\u51fa: 0</p>","boost":2},{"location":"leetcode/121/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func maxProfit(prices []int) (ans int) {\n    minPrice := prices[0]\n    for _, p := range prices {\n        ans = max(ans, p - minPrice)\n        minPrice = min(minPrice, p)\n    }\n    return\n}\n\nfunc max(a, b int) int {\n    if a &gt; b {\n        return a\n    }\n    return b\n}\n\nfunc min(a, b int) int {\n    if a &lt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        ans = 0\n        min_pirce = prices[0]\n        for p in prices:\n            ans = max(ans, p - min_pirce)\n            min_pirce = min(min_pirce, p)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/121/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(prices\\) \u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/121/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a</li> </ul>","boost":2},{"location":"leetcode/122/","title":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II","text":"","boost":2},{"location":"leetcode/122/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>prices</code> \uff0c\u5176\u4e2d <code>prices[i]</code> \u8868\u793a\u67d0\u652f\u80a1\u7968\u7b2c <code>i</code> \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u5728\u6bcf\u4e00\u5929\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u8d2d\u4e70\u548c/\u6216\u51fa\u552e\u80a1\u7968\u3002\u4f60\u5728\u4efb\u4f55\u65f6\u5019 \u6700\u591a \u53ea\u80fd\u6301\u6709 \u4e00\u80a1 \u80a1\u7968\u3002\u4f60\u4e5f\u53ef\u4ee5\u5148\u8d2d\u4e70\uff0c\u7136\u540e\u5728 \u540c\u4e00\u5929 \u51fa\u552e\u3002</p> <p>\u8fd4\u56de \u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6 \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: prices = [7,1,5,3,6,4]</p> <p>\u8f93\u51fa: 7</p> <p>\u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5 - 1 = 4\u3002 \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6 - 3 = 3\u3002 \u6700\u5927\u603b\u5229\u6da6\u4e3a 4 + 3 = 7 \u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: prices = [1,2,3,4,5]</p> <p>\u8f93\u51fa: 4</p> <p>\u89e3\u91ca: \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5 - 1 = 4\u3002 \u6700\u5927\u603b\u5229\u6da6\u4e3a 4 \u3002</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: prices = [7,6,4,3,1]</p> <p>\u8f93\u51fa: 0</p> <p>\u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u4ea4\u6613\u65e0\u6cd5\u83b7\u5f97\u6b63\u5229\u6da6\uff0c\u6240\u4ee5\u4e0d\u53c2\u4e0e\u4ea4\u6613\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\uff0c\u6700\u5927\u5229\u6da6\u4e3a 0\u3002</p>","boost":2},{"location":"leetcode/122/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func maxProfit(prices []int) int {\n    res := 0\n    for i := 1; i &lt; len(prices); i++ {\n        res += max(prices[i]-prices[i-1],  0)\n    }\n    return res\n}\n\nfunc max(a, b int) int {\n    if a &gt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def maxProfit(self, prices: List[int]) -&gt; int:\n        f0, f1 = 0, -inf\n        for p in prices:\n            f0, f1 = max(f0, f1 + p), max(f1, f0 - p)\n        return f0\n</code></pre>","boost":2},{"location":"leetcode/122/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(prices\\) \u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/122/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II</li> </ul>","boost":2},{"location":"leetcode/124/","title":"124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c","text":"","boost":2},{"location":"leetcode/124/#_1","title":"\u9898\u76ee","text":"<p>\u4e8c\u53c9\u6811\u4e2d\u7684 \u8def\u5f84 \u88ab\u5b9a\u4e49\u4e3a\u4e00\u6761\u8282\u70b9\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6bcf\u5bf9\u76f8\u90bb\u8282\u70b9\u4e4b\u95f4\u90fd\u5b58\u5728\u4e00\u6761\u8fb9\u3002\u540c\u4e00\u4e2a\u8282\u70b9\u5728\u4e00\u6761\u8def\u5f84\u5e8f\u5217\u4e2d \u81f3\u591a\u51fa\u73b0\u4e00\u6b21 \u3002\u8be5\u8def\u5f84 \u81f3\u5c11\u5305\u542b\u4e00\u4e2a \u8282\u70b9\uff0c\u4e14\u4e0d\u4e00\u5b9a\u7ecf\u8fc7\u6839\u8282\u70b9\u3002</p> <p>\u8def\u5f84\u548c \u662f\u8def\u5f84\u4e2d\u5404\u8282\u70b9\u503c\u7684\u603b\u548c\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u8fd4\u56de\u5176 \u6700\u5927\u8def\u5f84\u548c \u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,2,3]</p> <p>\u8f93\u51fa\uff1a6</p> <p>\u89e3\u91ca\uff1a\u6700\u4f18\u8def\u5f84\u662f 2 -&gt; 1 -&gt; 3 \uff0c\u8def\u5f84\u548c\u4e3a 2 + 1 + 3 = 6</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1arroot = [-10,9,20,null,null,15,7]</p> <p>\u8f93\u51fa\uff1a42</p> <p>\u89e3\u91ca\uff1a\u6700\u4f18\u8def\u5f84\u662f 15 -&gt; 20 -&gt; 7 \uff0c\u8def\u5f84\u548c\u4e3a 15 + 20 + 7 = 42</p>","boost":2},{"location":"leetcode/124/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\), \u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/124/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func maxPathSum(root *TreeNode) int {\n    ans := math.MinInt\n    var dfs func(*TreeNode) int\n    dfs = func(node *TreeNode) int {\n        if node == nil {\n            return 0 // \u6ca1\u6709\u8282\u70b9\uff0c\u548c\u4e3a 0\n        }\n        lVal := dfs(node.Left)  // \u5de6\u5b50\u6811\u6700\u5927\u94fe\u548c\n        rVal := dfs(node.Right) // \u53f3\u5b50\u6811\u6700\u5927\u94fe\u548c\n        ans = max(ans, lVal+rVal+node.Val) // \u4e24\u6761\u94fe\u62fc\u6210\u8def\u5f84\n        return max(max(lVal, rVal)+node.Val, 0) // \u5f53\u524d\u5b50\u6811\u6700\u5927\u94fe\u548c\n    }\n    dfs(root)\n    return ans\n}\n\nfunc max(a, b int) int { if a &lt; b { return b }; return a }\n</code></pre> Python<pre><code>class Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -&gt; int:\n        ans = -inf\n        def dfs(node: Optional[TreeNode]) -&gt; int:\n            if node is None:\n                return 0  # \u6ca1\u6709\u8282\u70b9\uff0c\u548c\u4e3a 0\n            l_val = dfs(node.left)  # \u5de6\u5b50\u6811\u6700\u5927\u94fe\u548c\n            r_val = dfs(node.right)  # \u53f3\u5b50\u6811\u6700\u5927\u94fe\u548c\n            nonlocal ans\n            ans = max(ans, l_val + r_val + node.val)  # \u4e24\u6761\u94fe\u62fc\u6210\u8def\u5f84\n            return max(max(l_val, r_val) + node.val, 0)  # \u5f53\u524d\u5b50\u6811\u6700\u5927\u94fe\u548c\n        dfs(root)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/124/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c - 124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c</li> </ul>","boost":2},{"location":"leetcode/131/","title":"131. \u5206\u5272\u56de\u6587\u4e32","text":"","boost":2},{"location":"leetcode/131/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u8bf7\u4f60\u5c06 <code>s</code> \u5206\u5272\u6210\u4e00\u4e9b \u5b50\u4e32\uff0c\u4f7f\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f \u56de\u6587\u4e32 \u3002\u8fd4\u56de <code>s</code> \u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u65b9\u6848\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: s = \"aab\"</p> <p>\u8f93\u51fa: [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: s = \"a\"</p> <p>\u8f93\u51fa: [[\"a\"]]</p>","boost":2},{"location":"leetcode/131/#_2","title":"\u9898\u89e3","text":"<p>\u56de\u6eaf-\u5b50\u96c6\u95ee\u9898</p> <p>\u5047\u8bbe\u6bcf\u5bf9\u76f8\u90bb\u5b57\u7b26\u4e4b\u95f4\u6709\u4e2a\u9017\u53f7\uff0c\u90a3\u4e48\u5c31\u770b\u6bcf\u4e2a\u9017\u53f7\u662f\u9009\u8fd8\u662f\u4e0d\u9009\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\uff1a\u662f\u5426\u8981\u628a s[i] \u5f53\u6210\u5206\u5272\u51fa\u7684\u5b50\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002\u6ce8\u610f <code>s[n\u22121]</code> \u4e00\u5b9a\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u5b9a\u8981\u9009\u3002</p> Go<pre><code>func isPalindrome(s string, left, right int) bool {\n    for left &lt; right {\n        if s[left] != s[right] {\n            return false\n        }\n        left++\n        right--\n    }\n    return true\n}\n\nfunc partition(s string) (ans [][]string) {\n    n := len(s)\n    path := []string{}\n\n    // \u8003\u8651 i \u540e\u9762\u7684\u9017\u53f7\u600e\u4e48\u9009\n    // start \u8868\u793a\u5f53\u524d\u8fd9\u6bb5\u56de\u6587\u5b50\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\n    var dfs func(int, int)\n    dfs = func(i, start int) {\n        if i == n { // s \u5206\u5272\u5b8c\u6bd5\n            ans = append(ans, slices.Clone(path))\n            return\n        }\n\n        // \u4e0d\u9009 i \u548c i+1 \u4e4b\u95f4\u7684\u9017\u53f7\uff08i=n-1 \u65f6\u4e00\u5b9a\u8981\u9009\uff09\n        if i &lt; n-1 {\n            // \u8003\u8651 i+1 \u540e\u9762\u7684\u9017\u53f7\u600e\u4e48\u9009\n            dfs(i+1, start)\n        }\n\n        // \u9009 i \u548c i+1 \u4e4b\u95f4\u7684\u9017\u53f7\uff08\u628a s[i] \u4f5c\u4e3a\u5b50\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff09\n        if isPalindrome(s, start, i) {\n            path = append(path, s[start:i+1])\n            // \u8003\u8651 i+1 \u540e\u9762\u7684\u9017\u53f7\u600e\u4e48\u9009\n            // start=i+1 \u8868\u793a\u4e0b\u4e00\u4e2a\u5b50\u4e32\u4ece i+1 \u5f00\u59cb\n            dfs(i+1, i+1)\n            path = path[:len(path)-1] // \u6062\u590d\u73b0\u573a\n        }\n    }\n\n    dfs(0, 0)\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def partition(self, s: str) -&gt; List[List[str]]:\n        # \u8fd4\u56de\u5b50\u4e32str[s, e]\u662f\u5426\u4e3a\u56de\u6587\u4e32\n        def is_palindrome(l: int, r: int) -&gt; bool:\n            while l &lt; r:\n                if s[l] != s[r]:\n                    return False\n                l += 1\n                r -= 1\n            return True\n\n        # \u4ee5start\u4f5c\u4e3a\u67d0\u4e2a\u5b50\u4e32\u7684\u8d77\u70b9\u8fdb\u884c\u62c6\u5206\uff0c\u5224\u65ad[start, j]\u662f\u5426\u4e3a\u56de\u6587\u4e32\uff0c\u5e76\u8fdb\u884c\u9012\u5f52\n        def backtrack(start: int):\n            if start == n:\n                # start\u5230\u8fbe\u5b57\u7b26\u4e32\u7ec8\u70b9\uff0c\u8bf4\u660e\u5f97\u5230\u4e00\u79cd\u65b9\u6848\n                ans.append(part[:])\n                return\n\n            for j in range(start, n):       # \u679a\u4e3e\u5b50\u4e32\u7ec8\u70b9\uff0c\u62c6\u5206\u4e00\u4e2a\u5b50\u4e32[start, j]\n                if not is_palindrome(start, j):\n                    continue                # \u975e\u56de\u6587\u4e32\uff0c\u8df3\u8fc7\n                part.append(s[start: j+1])  # \u5b50\u4e32\u4e3a\u56de\u6587\u4e32\uff0c\u62c6\u5206\u5b50\u4e32\n                backtrack(j + 1)            # \u4ee5j+1\u4e3a\u4e0b\u4e00\u4e2a\u5b50\u4e32\u7684\u8d77\u70b9\uff0c\u9012\u5f52\n                part.pop()                  # \u56de\u6eaf\uff0c\u8fd8\u539f\u73b0\u573a\n\n        ans = []    # \u5b58\u50a8\u6240\u6709\u65b9\u6848\n        part = []   # \u6784\u9020\u67d0\u4e00\u79cd\u65b9\u6848\n        n = len(s) \n\n        backtrack(0)    # \u4ee5\u4e0b\u68070\u4e3a\u8d77\u70b9\u5f00\u59cb\u6784\u9020\n\n        return ans \n</code></pre>","boost":2},{"location":"leetcode/131/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n \\ 2^n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(s\\) \u7684\u957f\u5ea6\u3002\u6bcf\u6b21\u90fd\u662f\u9009\u6216\u4e0d\u9009\uff0c\u9012\u5f52\u6b21\u6570\u4e3a\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u4e00\u5171\u4f1a\u9012\u5f52 \\(O(2^n)\\) \u6b21\uff08\u7b49\u6bd4\u6570\u5217\u548c\uff09\uff0c\u518d\u7b97\u4e0a\u52a0\u5165\u7b54\u6848\u65f6\u590d\u5236 path \u9700\u8981 \\(O(n)\\) \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\ 2^n)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/131/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 131. \u5206\u5272\u56de\u6587\u4e32</li> <li>\u753b\u56fe\u5c0f\u5320 131. \u5206\u5272\u56de\u6587\u4e32</li> </ul>","boost":2},{"location":"leetcode/141/","title":"141. \u73af\u5f62\u94fe\u8868","text":"","boost":2},{"location":"leetcode/141/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\u3002</p> <p>\u5982\u679c\u94fe\u8868\u4e2d\u6709\u67d0\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u8ddf\u8e2a <code>next</code> \u6307\u9488\u518d\u6b21\u5230\u8fbe\uff0c\u5219\u94fe\u8868\u4e2d\u5b58\u5728\u73af\u3002 \u4e3a\u4e86\u8868\u793a\u7ed9\u5b9a\u94fe\u8868\u4e2d\u7684\u73af\uff0c\u8bc4\u6d4b\u7cfb\u7edf\u5185\u90e8\u4f7f\u7528\u6574\u6570 pos \u6765\u8868\u793a\u94fe\u8868\u5c3e\u8fde\u63a5\u5230\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002\u6ce8\u610f\uff1a<code>pos</code> \u4e0d\u4f5c\u4e3a\u53c2\u6570\u8fdb\u884c\u4f20\u9012 \u3002\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6807\u8bc6\u94fe\u8868\u7684\u5b9e\u9645\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u94fe\u8868\u4e2d\u5b58\u5728\u73af \uff0c\u5219\u8fd4\u56de <code>true</code> \u3002 \u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [3,2,0,-4], pos = 1</p> <p>\u8f93\u51fa\uff1a\u8fd4\u56de\u7d22\u5f15\u4e3a 1 \u7684\u94fe\u8868\u8282\u70b9</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [1,2], pos = 0</p> <p>\u8f93\u51fa\uff1a\u8fd4\u56de\u7d22\u5f15\u4e3a 0 \u7684\u94fe\u8868\u8282\u70b9</p>","boost":2},{"location":"leetcode/141/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u5feb\u6162\u6307\u9488</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\uff0c\u53ea\u662f\u7528 2 \u4e2a\u989d\u5916\u7684\u6307\u9488\u3002</li> </ul>","boost":2},{"location":"leetcode/141/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func hasCycle(head *ListNode) bool {\n    slow, fast := head, head\n    for fast != nil &amp;&amp; fast.Next != nil {\n        slow = slow.Next\n        fast = fast.Next.Next\n        if slow == fast {\n            return true\n        }\n    }\n    return false\n}\n</code></pre> Python<pre><code>class Solution:\n    def hasCycle(self, head: Optional[ListNode]) -&gt; bool:\n        if not head or not head.next:\n            return False\n\n        slow, fast = head, head.next\n        while fast and fast.next and slow != fast:\n            slow = slow.next\n            fast = fast.next.next\n\n        return slow == fast\n</code></pre>","boost":2},{"location":"leetcode/142/","title":"142. \u73af\u5f62\u94fe\u8868 II","text":"","boost":2},{"location":"leetcode/142/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u8fd4\u56de\u94fe\u8868\u5f00\u59cb\u5165\u73af\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002 \u5982\u679c\u94fe\u8868\u65e0\u73af\uff0c\u5219\u8fd4\u56de <code>null</code>\u3002</p> <p>\u5982\u679c\u94fe\u8868\u4e2d\u6709\u67d0\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u8ddf\u8e2a <code>next</code> \u6307\u9488\u518d\u6b21\u5230\u8fbe\uff0c\u5219\u94fe\u8868\u4e2d\u5b58\u5728\u73af\u3002 \u4e3a\u4e86\u8868\u793a\u7ed9\u5b9a\u94fe\u8868\u4e2d\u7684\u73af\uff0c\u8bc4\u6d4b\u7cfb\u7edf\u5185\u90e8\u4f7f\u7528\u6574\u6570 <code>pos</code> \u6765\u8868\u793a\u94fe\u8868\u5c3e\u8fde\u63a5\u5230\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c <code>pos</code> \u662f -1\uff0c\u5219\u5728\u8be5\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002\u6ce8\u610f\uff1a<code>pos</code> \u4e0d\u4f5c\u4e3a\u53c2\u6570\u8fdb\u884c\u4f20\u9012\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6807\u8bc6\u94fe\u8868\u7684\u5b9e\u9645\u60c5\u51b5\u3002</p> <p>\u4e0d\u5141\u8bb8\u4fee\u6539 \u94fe\u8868\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [3,2,0,-4], pos = 1</p> <p>\u8f93\u51fa\uff1a\u8fd4\u56de\u7d22\u5f15\u4e3a 1 \u7684\u94fe\u8868\u8282\u70b9</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [1,2], pos = 0</p> <p>\u8f93\u51fa\uff1a\u8fd4\u56de\u7d22\u5f15\u4e3a 0 \u7684\u94fe\u8868\u8282\u70b9</p>","boost":2},{"location":"leetcode/142/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u53cc\u6307\u9488</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/142/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func detectCycle(head *ListNode) *ListNode {\n    slow, fast := head, head\n    for fast != nil &amp;&amp; fast.Next != nil {\n        slow = slow.Next\n        fast = fast.Next.Next\n        if slow == fast {\n            ptr := head\n            for slow != ptr {\n                slow = slow.Next\n                ptr = ptr.Next\n            }\n            return ptr\n        }\n    }\n    return nil\n}\n</code></pre> Python<pre><code>class Solution:\n    def detectCycle(self, head: Optional[ListNode]) -&gt; Optional[ListNode]:\n        slow = fast = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if fast is slow:\n                ptr = head\n                while slow is not ptr:\n                    slow = slow.next\n                    ptr = ptr.next\n                return ptr\n        return None\n</code></pre>","boost":2},{"location":"leetcode/146/","title":"146. LRU \u7f13\u5b58","text":"","boost":2},{"location":"leetcode/146/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u4f60\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u6ee1\u8db3 LRU (\u6700\u8fd1\u6700\u5c11\u4f7f\u7528) \u7f13\u5b58 \u7ea6\u675f\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u5b9e\u73b0 <code>LRUCache</code> \u7c7b\uff1a</p> <ul> <li><code>LRUCache(int capacity)</code> \u4ee5 \u6b63\u6574\u6570 \u4f5c\u4e3a\u5bb9\u91cf <code>capacity</code> \u521d\u59cb\u5316 LRU \u7f13\u5b58</li> <li><code>int get(int key)</code> \u5982\u679c\u5173\u952e\u5b57 key \u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u8fd4\u56de\u5173\u952e\u5b57\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de <code>-1</code> \u3002</li> <li><code>void put(int key, int value)</code> \u5982\u679c\u5173\u952e\u5b57 <code>key</code> \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u53d8\u66f4\u5176\u6570\u636e\u503c <code>value</code> \uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5411\u7f13\u5b58\u4e2d\u63d2\u5165\u8be5\u7ec4 <code>key-value</code> \u3002\u5982\u679c\u63d2\u5165\u64cd\u4f5c\u5bfc\u81f4\u5173\u952e\u5b57\u6570\u91cf\u8d85\u8fc7 <code>capacity</code> \uff0c\u5219\u5e94\u8be5 \u9010\u51fa \u6700\u4e45\u672a\u4f7f\u7528\u7684\u5173\u952e\u5b57\u3002</li> </ul> <p>\u51fd\u6570 <code>get</code> \u548c <code>put</code> \u5fc5\u987b\u4ee5 <code>O(1)</code> \u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fd0\u884c\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1a</p> <p><code>[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]</code></p> <p><code>[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]</code></p> <p>\u8f93\u51fa\uff1a</p> <p><code>[null, null, null, 1, null, -1, null, -1, 3, 4]</code></p>","boost":2},{"location":"leetcode/146/#_2","title":"\u9898\u89e3","text":"<p>\u53cc\u5411\u94fe\u8868</p> Go \u89e3\u6cd5 1Go \u89e3\u6cd5 2 <pre><code>type LRUCache struct {\n    capacity int\n    list     *list.List\n    keyToNode map[int]*list.Element\n}\n\n\ntype entry struct {\n    key int\n    val int\n}\n\n\nfunc Constructor(capacity int) LRUCache {\n    return LRUCache{\n        capacity: capacity,\n        list: list.New(),\n        keyToNode: map[int]*list.Element{},\n    }\n}\n\n\nfunc (this *LRUCache) Get(key int) int {\n    node := this.keyToNode[key]\n    if node == nil {\n        return -1\n    }\n\n    this.list.MoveToFront(node)\n    return node.Value.(entry).val\n}\n\n\nfunc (this *LRUCache) Put(key int, value int)  {\n    if node := this.keyToNode[key]; node != nil {\n        // \u66f4\u65b0\n        node.Value = entry{key, value}\n        this.list.MoveToFront(node)\n        return\n    }\n\n    this.keyToNode[key] = this.list.PushFront(entry{key, value})\n    if len(this.keyToNode) &gt; this.capacity {\n        delete(this.keyToNode, this.list.Remove(this.list.Back()).(entry).key)\n    }\n}\n</code></pre> <pre><code>type node struct {\n    key, val   int\n    prev, next *node\n}\n\ntype LRUCache struct {\n    capacity   int\n    cache      map[int]*node\n    head, tail *node\n}\n\nfunc Constructor(capacity int) LRUCache {\n    head := new(node)\n    tail := new(node)\n    head.next = tail\n    tail.prev = head\n    return LRUCache{\n        capacity: capacity,\n        cache:    make(map[int]*node, capacity),\n        head:     head,\n        tail:     tail,\n    }\n}\n\nfunc (this *LRUCache) Get(key int) int {\n    n, ok := this.cache[key]\n    if !ok {\n        return -1\n    }\n    this.moveToFront(n)\n    return n.val\n}\n\nfunc (this *LRUCache) Put(key int, value int) {\n    n, ok := this.cache[key]\n    if ok {\n        n.val = value\n        this.moveToFront(n)\n        return\n    }\n    if len(this.cache) == this.capacity {\n        back := this.tail.prev\n        this.remove(back)\n        delete(this.cache, back.key)\n    }\n    n = &amp;node{key: key, val: value}\n    this.pushFront(n)\n    this.cache[key] = n\n}\n\nfunc (this *LRUCache) moveToFront(n *node) {\n    this.remove(n)\n    this.pushFront(n)\n}\n\nfunc (this *LRUCache) remove(n *node) {\n    n.prev.next = n.next\n    n.next.prev = n.prev\n    n.prev = nil\n    n.next = nil\n}\n\nfunc (this *LRUCache) pushFront(n *node) {\n    n.prev = this.head\n    n.next = this.head.next\n    this.head.next.prev = n\n    this.head.next = n\n}\n</code></pre> Python \u89e3\u6cd5 1Python \u89e3\u6cd5 2 <pre><code>class Node:\n    # \u63d0\u9ad8\u8bbf\u95ee\u5c5e\u6027\u7684\u901f\u5ea6\uff0c\u5e76\u8282\u7701\u5185\u5b58\n    __slots__ = 'prev', 'next', 'key', 'value'\n\n    def __init__(self, key=0, value=0):\n        self.key = key\n        self.value = value\n\nclass LRUCache:\n    def __init__(self, capacity: int):\n        self.capacity = capacity\n        self.dummy = Node()  # \u54e8\u5175\u8282\u70b9\n        self.dummy.prev = self.dummy\n        self.dummy.next = self.dummy\n        self.key_to_node = dict()\n\n    def get_node(self, key: int) -&gt; Optional[Node]:\n        if key not in self.key_to_node:  # \u6ca1\u6709\u8fd9\u672c\u4e66\n            return None\n        node = self.key_to_node[key]  # \u6709\u8fd9\u672c\u4e66\n        self.remove(node)  # \u628a\u8fd9\u672c\u4e66\u62bd\u51fa\u6765\n        self.push_front(node)  # \u653e\u5728\u6700\u4e0a\u9762\n        return node\n\n    def get(self, key: int) -&gt; int:\n        node = self.get_node(key)\n        return node.value if node else -1\n\n    def put(self, key: int, value: int) -&gt; None:\n        node = self.get_node(key)\n        if node:  # \u6709\u8fd9\u672c\u4e66\n            node.value = value  # \u66f4\u65b0 value\n            return\n        self.key_to_node[key] = node = Node(key, value)  # \u65b0\u4e66\n        self.push_front(node)  # \u653e\u5728\u6700\u4e0a\u9762\n        if len(self.key_to_node) &gt; self.capacity:  # \u4e66\u592a\u591a\u4e86\n            back_node = self.dummy.prev\n            del self.key_to_node[back_node.key]\n            self.remove(back_node)  # \u53bb\u6389\u6700\u540e\u4e00\u672c\u4e66\n\n    # \u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff08\u62bd\u51fa\u4e00\u672c\u4e66\uff09\n    def remove(self, x: Node) -&gt; None:\n        x.prev.next = x.next\n        x.next.prev = x.prev\n\n    # \u5728\u94fe\u8868\u5934\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\uff08\u628a\u4e00\u672c\u4e66\u653e\u5728\u6700\u4e0a\u9762\uff09\n    def push_front(self, x: Node) -&gt; None:\n        x.prev = self.dummy\n        x.next = self.dummy.next\n        x.prev.next = x\n        x.next.prev = x\n</code></pre> <pre><code>class Node:\n    def __init__(self, key=0, val=0):\n        self.key = key\n        self.val = val\n        self.prev = None\n        self.next = None\n\n\nclass LRUCache:\n    def __init__(self, capacity: int):\n        self.cache = {}\n        self.head = Node()\n        self.tail = Node()\n        self.capacity = capacity\n        self.size = 0\n        self.head.next = self.tail\n        self.tail.prev = self.head\n\n    def get(self, key: int) -&gt; int:\n        if key not in self.cache:\n            return -1\n        node = self.cache[key]\n        self.move_to_head(node)\n        return node.val\n\n    def put(self, key: int, value: int) -&gt; None:\n        if key in self.cache:\n            node = self.cache[key]\n            node.val = value\n            self.move_to_head(node)\n        else:\n            node = Node(key, value)\n            self.cache[key] = node\n            self.add_to_head(node)\n            self.size += 1\n            if self.size &gt; self.capacity:\n                node = self.remove_tail()\n                self.cache.pop(node.key)\n                self.size -= 1\n\n    def move_to_head(self, node):\n        self.remove_node(node)\n        self.add_to_head(node)\n\n    def remove_node(self, node):\n        node.prev.next = node.next\n        node.next.prev = node.prev\n\n    def add_to_head(self, node):\n        node.next = self.head.next\n        node.prev = self.head\n        self.head.next = node\n        node.next.prev = node\n\n    def remove_tail(self):\n        node = self.tail.prev\n        self.remove_node(node)\n        return node\n</code></pre>","boost":2},{"location":"leetcode/146/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(min(p,capacity))\\)\uff0c\u5176\u4e2d \\(p\\) \u4e3a \\(put\\) \u7684\u8c03\u7528\u6b21\u6570\u3002</li> </ul>","boost":2},{"location":"leetcode/146/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-146. LRU \u7f13\u5b58</li> <li>ylb--146. LRU \u7f13\u5b58</li> </ul>","boost":2},{"location":"leetcode/148/","title":"148. \u6392\u5e8f\u94fe\u8868","text":"","boost":2},{"location":"leetcode/148/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u94fe\u8868\u7684\u5934\u7ed3\u70b9 <code>head</code> \uff0c\u8bf7\u5c06\u5176\u6309 \u5347\u5e8f \u6392\u5217\u5e76\u8fd4\u56de \u6392\u5e8f\u540e\u7684\u94fe\u8868 \u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [4,2,1,3]</p> <p>\u8f93\u51fa\uff1a[1,2,3,4]</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1ahead = [-1,5,3,4,0]</p> <p>\u8f93\u51fa\uff1a[-1,0,3,4,5]</p>","boost":2},{"location":"leetcode/148/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u5f52\u5e76\u6392\u5e8f\uff08\u9012\u5f52\u6cd5\uff09</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n logn)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(logn)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/148/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func sortList(head *ListNode) *ListNode {\n    if head == nil || head.Next == nil { // \u9012\u5f52\u7684\u51fa\u53e3\uff0c\u4e0d\u7528\u6392\u5e8f \u76f4\u63a5\u8fd4\u56de\n        return head\n    }\n    slow, fast := head, head // \u5feb\u6162\u6307\u9488\n    var preSlow *ListNode    // \u4fdd\u5b58slow\u7684\u524d\u4e00\u4e2a\u7ed3\u70b9\n    for fast != nil &amp;&amp; fast.Next != nil {\n        preSlow = slow\n        slow = slow.Next      // \u6162\u6307\u9488\u8d70\u4e00\u6b65\n        fast = fast.Next.Next // \u5feb\u6307\u9488\u8d70\u4e24\u6b65\n    }\n    preSlow.Next = nil  // \u65ad\u5f00\uff0c\u5206\u6210\u4e24\u94fe\n    l := sortList(head) // \u5df2\u6392\u5e8f\u7684\u5de6\u94fe\n    r := sortList(slow) // \u5df2\u6392\u5e8f\u7684\u53f3\u94fe\n    return mergeList(l, r) // \u5408\u5e76\u5df2\u6392\u5e8f\u7684\u5de6\u53f3\u94fe\uff0c\u4e00\u5c42\u5c42\u5411\u4e0a\u8fd4\u56de\n}\n\nfunc mergeList(l1, l2 *ListNode) *ListNode {\n    dummy := &amp;ListNode{Val: 0}   // \u865a\u62df\u5934\u7ed3\u70b9\n    prev := dummy                // \u7528prev\u53bb\u626b\uff0c\u5148\u6307\u5411dummy\n    for l1 != nil &amp;&amp; l2 != nil { // l1 l2 \u90fd\u5b58\u5728\n        if l1.Val &lt; l2.Val {   // l1\u503c\u8f83\u5c0f\n            prev.Next = l1 // prev.Next\u6307\u5411l1\n            l1 = l1.Next   // \u8003\u5bdfl1\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n        } else {\n            prev.Next = l2\n            l2 = l2.Next\n        }\n        prev = prev.Next // prev.Next\u786e\u5b9a\u4e86\uff0cprev\u6307\u9488\u63a8\u8fdb\n    }\n    if l1 != nil {    // l1\u5b58\u5728\uff0cl2\u4e0d\u5b58\u5728\uff0c\u8ba9prev.Next\u6307\u5411l1\n        prev.Next = l1\n    }\n    if l2 != nil {\n        prev.Next = l2\n    }\n    return dummy.Next // \u771f\u5b9e\u5934\u7ed3\u70b9\n}\n</code></pre> Python<pre><code># Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeList(self, l1: Optional[ListNode], l2: Optional[ListNode]) -&gt; Optional[ListNode]:\n        dummy = ListNode()\n        prev = dummy\n        while l1 and l2:\n            if l1.val &lt; l2.val:\n                prev.next = l1\n                l1 = l1.next\n            else:\n                prev.next = l2\n                l2 = l2.next\n            prev = prev.next\n\n        if l1:\n            prev.next = l1\n\n        if l2:\n            prev.next = l2\n\n        return dummy.next\n\n    def sortList(self, head: Optional[ListNode]) -&gt; Optional[ListNode]:\n        if head is None or head.next is None:\n            return head\n\n        slow = fast = head\n        preSlow = ListNode()\n        while fast and fast.next:\n            preSlow = slow\n            slow = slow.next\n            fast = fast.next.next\n\n        preSlow.next = None\n        l = self.sortList(head)\n        r = self.sortList(slow)\n        return self.mergeList(l, r)\n</code></pre>","boost":2},{"location":"leetcode/148/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7b28\u732a\u7206\u7834\u7ec4 - \u300c\u624b\u753b\u56fe\u89e3\u300d\u5f52\u5e76\u6392\u5e8f | 148 \u6392\u5e8f\u94fe\u8868</li> </ul>","boost":2},{"location":"leetcode/15/","title":"15. \u4e09\u6570\u4e4b\u548c","text":"","boost":2},{"location":"leetcode/15/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 <code>[nums[i], nums[j], nums[k]]</code> \u6ee1\u8db3 <code>i != j</code>\u3001<code>i != k</code> \u4e14 <code>j != k</code> \uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3 <code>nums[i] + nums[j] + nums[k] == 0</code> \u3002\u8bf7\u4f60\u8fd4\u56de\u6240\u6709\u548c\u4e3a <code>0</code> \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p> <p>\u6ce8\u610f\uff1a\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: <code>nums = [-1,0,1,2,-1,-4]</code></p> <p>\u8f93\u51fa: <code>[[-1,-1,2],[-1,0,1]]</code></p> <p>\u89e3\u91ca: <code>nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0</code> \u3002 <code>nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0</code> \u3002 <code>nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0</code> \u3002 \u4e0d\u540c\u7684\u4e09\u5143\u7ec4\u662f <code>[-1,0,1]</code> \u548c <code>[-1,-1,2]</code> \u3002 \u6ce8\u610f\uff0c\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u4e09\u5143\u7ec4\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: <code>nums = [0,1,1]</code></p> <p>\u8f93\u51fa: <code>[]</code></p> <p>\u89e3\u91ca: \u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e0d\u4e3a 0 \u3002</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: <code>nums = [0,0,0]</code></p> <p>\u8f93\u51fa: <code>[[0,0,0]]</code></p> <p>\u89e3\u91ca: \u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e3a 0 \u3002</p>","boost":2},{"location":"leetcode/15/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func threeSum(nums []int) (ans [][]int) {\n    slices.Sort(nums)\n    n := len(nums)\n    for i, x := range nums[:n-2] {\n        if i &gt; 0 &amp;&amp; x == nums[i-1] { // \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n            continue\n        }\n        if x+nums[i+1]+nums[i+2] &gt; 0 { // \u4f18\u5316\u4e00\n            break\n        }\n        if x+nums[n-2]+nums[n-1] &lt; 0 { // \u4f18\u5316\u4e8c\n            continue\n        }\n        j, k := i+1, n-1\n        for j &lt; k {\n            s := x + nums[j] + nums[k]\n            if s &gt; 0 {\n                k--\n            } else if s &lt; 0 {\n                j++\n            } else {\n                ans = append(ans, []int{x, nums[j], nums[k]})\n                for j++; j &lt; k &amp;&amp; nums[j] == nums[j-1]; j++ {} // \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n                for k--; k &gt; j &amp;&amp; nums[k] == nums[k+1]; k-- {} // \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n            }\n        }\n    }\n    return\n}\n</code></pre> \u89e3\u6cd51\u89e3\u6cd52 Python<pre><code>class Solution:\n    def threeSum(self, nums: List[int]) -&gt; List[List[int]]:\n        nums.sort()\n        ans = []\n        n = len(nums)\n        for i in range(n - 2):\n            x = nums[i]\n            if i &gt; 0 and x == nums[i - 1]:  # \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n                continue\n            if x + nums[i + 1] + nums[i + 2] &gt; 0:  # \u4f18\u5316\u4e00\n                break\n            if x + nums[-2] + nums[-1] &lt; 0:  # \u4f18\u5316\u4e8c\n                continue\n            j = i + 1\n            k = n - 1\n            while j &lt; k:\n                s = x + nums[j] + nums[k]\n                if s &gt; 0:\n                    k -= 1\n                elif s &lt; 0:\n                    j += 1\n                else:\n                    ans.append([x, nums[j], nums[k]])\n                    j += 1\n                    while j &lt; k and nums[j] == nums[j - 1]:  # \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n                        j += 1\n                    k -= 1\n                    while k &gt; j and nums[k] == nums[k + 1]:  # \u8df3\u8fc7\u91cd\u590d\u6570\u5b57\n                        k -= 1\n        return ans\n</code></pre> Python<pre><code>class Solution:\n    def threeSum(self, nums: List[int]) -&gt; List[List[int]]:\n        nums.sort()\n        res, k = [], 0\n        # \u56fa\u5b9ak\n        for k in range(len(nums) - 2):\n            # 1. because of j &gt; i &gt; k.\n            if nums[k] &gt; 0: \n                break \n            # 2. skip the same `nums[k]`.\n            if k &gt; 0 and nums[k] == nums[k - 1]: \n                continue \n            i, j = k + 1, len(nums) - 1\n            # 3. double pointer\n            while i &lt; j: \n                s = nums[k] + nums[i] + nums[j]\n                if s &lt; 0:\n                    i += 1\n                    while i &lt; j and nums[i] == nums[i - 1]:\n                        i += 1\n                elif s &gt; 0:\n                    j -= 1\n                    while i &lt; j and nums[j] == nums[j + 1]:\n                        j -= 1\n                else:\n                    res.append([nums[k], nums[i], nums[j]])\n                    i += 1\n                    j -= 1\n                    while i &lt; j and nums[i] == nums[i - 1]:\n                        i += 1\n                    while i &lt; j and nums[j] == nums[j + 1]:\n                        j -= 1\n        return res\n</code></pre>","boost":2},{"location":"leetcode/15/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n^2)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(nums\\) \u7684\u957f\u5ea6\u3002\u6392\u5e8f\\(O(n \\ logn)\\)\uff0c\u53cc\u6307\u9488\u64cd\u4f5c\\(O(n^2)\\)\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^2)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/15/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 15. \u4e09\u6570\u4e4b\u548c</li> <li>Krahets 15. \u4e09\u6570\u4e4b\u548c</li> </ul>","boost":2},{"location":"leetcode/160/","title":"160. \u76f8\u4ea4\u94fe\u8868","text":"","boost":2},{"location":"leetcode/160/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9<code>headA</code>\u548c<code>headB</code>\uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u4e24\u4e2a\u5355\u94fe\u8868\u76f8\u4ea4\u7684\u8d77\u59cb\u8282\u70b9\u3002\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u4e0d\u5b58\u5728\u76f8\u4ea4\u8282\u70b9\uff0c\u8fd4\u56de null \u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aintersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3</p> <p>\u8f93\u51fa\uff1aIntersected at '8'</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aintersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1</p> <p>\u8f93\u51fa\uff1aIntersected at '2'</p>","boost":2},{"location":"leetcode/160/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u53cc\u6307\u9488+\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/160/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func getIntersectionNode(headA, headB *ListNode) *ListNode {\n    if headA == nil || headB == nil {\n        return nil\n    }\n\n    la, lb := headA, headB\n    for la != lb {\n        if la != nil {\n            la = la.Next\n        } else {\n            la = headB\n        }\n\n        if lb != nil {\n            lb = lb.Next\n        } else {\n            lb = headA\n        }\n    }\n\n    return la\n}\n</code></pre> Python<pre><code>class Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -&gt; Optional[ListNode]:\n        if not headA or not headB:\n            return None\n        la, lb = headA, headB\n        while la != lb:\n            la = la.next if la else headB\n            lb = lb.next if lb else headA\n\n        return la\n</code></pre>","boost":2},{"location":"leetcode/17/","title":"17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408","text":"","boost":2},{"location":"leetcode/17/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57 <code>2-9</code> \u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u6240\u6709\u5b83\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u7ec4\u5408\u3002\u7b54\u6848\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u3002</p> <p>\u7ed9\u51fa\u6570\u5b57\u5230\u5b57\u6bcd\u7684\u6620\u5c04\u5982\u4e0b\uff08\u4e0e\u7535\u8bdd\u6309\u952e\u76f8\u540c\uff09\u3002\u6ce8\u610f <code>1</code> \u4e0d\u5bf9\u5e94\u4efb\u4f55\u5b57\u6bcd\u3002</p> <p></p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: digits = \"23\"</p> <p>\u8f93\u51fa: [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: digits = \"\"</p> <p>\u8f93\u51fa: []</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: digits = \"2\"</p> <p>\u8f93\u51fa: [\"a\",\"b\",\"c\"]</p>","boost":2},{"location":"leetcode/17/#_2","title":"\u9898\u89e3","text":"Go<pre><code>var mapping = [...]string{\"\", \"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"}\n\nfunc letterCombinations(digits string) (ans []string) {\n    n := len(digits)\n    if n == 0 {\n        return\n    }\n    path := make([]byte, n) // \u6ce8\u610f path \u957f\u5ea6\u4e00\u5f00\u59cb\u5c31\u662f n\uff0c\u4e0d\u662f\u7a7a\u5217\u8868\n    var dfs func(int)\n    dfs = func(i int) {\n        if i == n {\n            ans = append(ans, string(path))\n            return\n        }\n        for _, c := range mapping[digits[i]-'0'] {\n            path[i] = byte(c) // \u76f4\u63a5\u8986\u76d6\n            dfs(i + 1)\n        }\n    }\n    dfs(0)\n    return\n}\n</code></pre> Python<pre><code>MAPPING = [\"\", \"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"]\n\nclass Solution:\n    def letterCombinations(self, digits: str) -&gt; List[str]:\n        n = len(digits)\n        if n == 0:\n            return []\n        ans = []\n        path = [''] * n  # \u6ce8\u610f path \u957f\u5ea6\u4e00\u5f00\u59cb\u5c31\u662f n\uff0c\u4e0d\u662f\u7a7a\u5217\u8868\n        def dfs(i: int) -&gt; None:\n            if i == n: # \u8fb9\u754c\u6761\u4ef6\n                ans.append(''.join(path))\n                return\n            for c in MAPPING[int(digits[i])]: # \u975e\u8fb9\u754c\u6761\u4ef6, \u679a\u4e3e\u7b2c i \u4e2a\u5b57\u7b26\u662f\u4ec0\u4e48\uff1f\n                path[i] = c  # \u76f4\u63a5\u8986\u76d6\n                dfs(i + 1)\n        dfs(0)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/17/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n \\ 4^n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(digits\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/17/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408</li> </ul>","boost":2},{"location":"leetcode/19/","title":"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9","text":"","boost":2},{"location":"leetcode/19/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c n \u4e2a\u7ed3\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1ahead = [1,2,3,4,5], n = 2</p> <p>\u8f93\u51fa\uff1a[1,2,3,5]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1ahead = [1], n = 1</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/19/#_2","title":"\u601d\u8def","text":"<p>\u53cc\u6307\u9488+\u865a\u62df\u5934\u7ed3\u70b9</p> <p>\u8981\u627e\u5230\u5012\u6570\u7b2c <code>n</code> \u4e2a\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 <code>slow</code> \u548c <code>fast</code>\uff0c \u540c\u65f6\u5bf9\u94fe\u8868\u8fdb\u884c\u904d\u5386\uff0c\u5e76\u4e14 <code>fast</code> \u6bd4 <code>slow</code> \u8d85\u524d <code>n</code> \u4e2a\u8282\u70b9\u3002\u5f53 <code>fast</code> \u904d\u5386\u5230\u94fe\u8868\u7684\u672b\u5c3e\u65f6\uff0c<code>slow</code> \u5c31\u6070\u597d\u5904\u4e8e\u5012\u6570\u7b2c <code>n</code> \u4e2a\u8282\u70b9\u3002</p>","boost":2},{"location":"leetcode/19/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func removeNthFromEnd(head *ListNode, n int) *ListNode {\n    dummy := &amp;ListNode{Val: 0, Next: head}\n    slow, fast := dummy, dummy\n\n    // \u5148\u8d70 n \u6b65\n    for ; n &gt; 0; n-- {\n        fast = fast.Next\n    }\n    fast = fast.Next\n\n    for fast != nil {\n        slow = slow.Next\n        fast = fast.Next\n    }\n\n    slow.Next = slow.Next.Next\n    return dummy.Next\n}\n</code></pre> Python<pre><code>class Solution:\n    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -&gt; Optional[ListNode]:\n        slow = fast = dummy = ListNode(next=head)\n        for _ in range(n):\n            fast = fast.next # fast\u6307\u9488\u5148\u5411\u53f3\u8d70 n \u6b65\n        while fast.next:\n            slow = slow.next\n            fast = fast.next # slow\u548cfast\u6307\u9488\u4e00\u8d77\u8d70\n        slow.next = slow.next.next # slow\u6162\u6307\u9488\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\n        return dummy.next\n</code></pre>","boost":2},{"location":"leetcode/19/#_4","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\\(n\\) \u4e3a\u94fe\u8868\u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/19/#_5","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9</li> </ul>","boost":2},{"location":"leetcode/198/","title":"198. \u6253\u5bb6\u52ab\u820d","text":"","boost":2},{"location":"leetcode/198/#_1","title":"\u9898\u76ee","text":"<p>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60\u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1a[1,2,3,1]</p> <p>\u8f93\u51fa\uff1a4</p> <p>\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002 \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1a[2,7,9,3,1]</p> <p>\u8f93\u51fa\uff1a12</p> <p>\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002</p>","boost":2},{"location":"leetcode/198/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\).</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/198/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func rob(nums []int) int {\n    if len(nums) == 0 {\n        return 0\n    }\n    if len(nums) == 1 {\n        return nums[0]\n    }\n    first := nums[0]\n    second := max(nums[0], nums[1])\n    for i := 2; i &lt; len(nums); i++ {\n        first, second = second, max(first + nums[i], second)\n    }\n    return second\n}\n\nfunc max(x, y int) int {\n    if x &gt; y {\n        return x\n    }\n    return y\n}\n</code></pre> Python<pre><code>class Solution:\n    def rob(self, nums: List[int]) -&gt; int:\n        if not nums:\n            return 0\n\n        size = len(nums)\n        if size == 1:\n            return nums[0]\n\n        dp0 = nums[0]\n        dp1 = max(nums[0], nums[1])\n        for i in range(2, size):\n            dp0, dp1 = dp1, max(dp0 + nums[i], dp1)\n        return dp1\n</code></pre>","boost":2},{"location":"leetcode/198/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u529b\u6263\u5b98\u65b9\u9898\u89e3 198. \u6253\u5bb6\u52ab\u820d</li> </ul>","boost":2},{"location":"leetcode/199/","title":"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe","text":"","boost":2},{"location":"leetcode/199/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684 \u6839\u8282\u70b9 <code>root</code>\uff0c\u60f3\u8c61\u81ea\u5df1\u7ad9\u5728\u5b83\u7684\u53f3\u4fa7\uff0c\u6309\u7167\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u987a\u5e8f\uff0c\u8fd4\u56de\u4ece\u53f3\u4fa7\u6240\u80fd\u770b\u5230\u7684\u8282\u70b9\u503c\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1a[1,2,3,null,5,null,4]</p> <p>\u8f93\u51fa\uff1a[1,3,4]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1a[1,null,3]</p> <p>\u8f93\u51fa\uff1a[1,3]</p>","boost":2},{"location":"leetcode/199/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 DFS</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/199/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func rightSideView(root *TreeNode) []int {\n    ans := []int{}\n    var dfs func(*TreeNode, int)\n    dfs = func(node *TreeNode, dep int) {\n        if node == nil {\n            return\n        }\n\n        if dep == len(ans) {\n            ans = append(ans, node.Val)\n        }\n\n        dfs(node.Right, dep+1)\n        dfs(node.Left, dep+1)\n    }\n\n    dfs(root, 0)\n\n    return ans\n}\n</code></pre> Python<pre><code>class Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -&gt; List[int]:\n        ans = []\n        def dfs(node: Optional[TreeNode], depth: int) -&gt; None:\n            if node is None: return\n            if depth == len(ans):\n                ans.append(node.val)\n            dfs(node.right, depth + 1)\n            dfs(node.left, depth + 1)\n        dfs(root, 0)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/199/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe</li> </ul>","boost":2},{"location":"leetcode/2/","title":"2. \u4e24\u6570\u76f8\u52a0","text":"","boost":2},{"location":"leetcode/2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\uff0c\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5b83\u4eec\u6bcf\u4f4d\u6570\u5b57\u90fd\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002</p> <p>\u8bf7\u4f60\u5c06\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5e76\u4ee5\u76f8\u540c\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u548c\u7684\u94fe\u8868\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1al1 = [2,4,3], l2 = [5,6,4]</p> <p>\u8f93\u51fa\uff1a[7,0,8]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1al1 = [0], l2 = [0]</p> <p>\u8f93\u51fa\uff1a[0]</p>","boost":2},{"location":"leetcode/2/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func addTwoNumbers(l1, l2 *ListNode) *ListNode {\n    dummy := &amp;ListNode{} // \u54e8\u5175\u8282\u70b9\n    curr := dummy\n\n    carry := 0 // \u8fdb\u4f4d\n    for l1 != nil || l2 != nil || carry != 0 { // \u6709\u4e00\u4e2a\u4e0d\u662f\u7a7a\u8282\u70b9\uff0c\u6216\u8005\u8fd8\u6709\u8fdb\u4f4d\uff0c\u5c31\u7ee7\u7eed\u8fed\u4ee3\n        if l1 != nil {\n            carry += l1.Val // \u8282\u70b9\u503c\u548c\u8fdb\u4f4d\u52a0\u5728\u4e00\u8d77\n            l1 = l1.Next // \u4e0b\u4e00\u4e2a\u8282\u70b9\n        }\n        if l2 != nil {\n            carry += l2.Val // \u8282\u70b9\u503c\u548c\u8fdb\u4f4d\u52a0\u5728\u4e00\u8d77\n            l2 = l2.Next // \u4e0b\u4e00\u4e2a\u8282\u70b9\n        }\n        curr.Next = &amp;ListNode{Val: carry % 10} // \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e00\u4e2a\u6570\u4f4d\n        carry /= 10 // \u65b0\u7684\u8fdb\u4f4d\n        curr = curr.Next // \u4e0b\u4e00\u4e2a\u8282\u70b9\n    }\n    return dummy.Next // \u54e8\u5175\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u5934\u8282\u70b9\n}\n</code></pre> Python<pre><code>class Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -&gt; Optional[ListNode]:\n        cur = dummy = ListNode()  # \u54e8\u5175\u8282\u70b9\n        carry = 0  # \u8fdb\u4f4d\n        while l1 or l2 or carry:  # \u6709\u4e00\u4e2a\u4e0d\u662f\u7a7a\u8282\u70b9\uff0c\u6216\u8005\u8fd8\u6709\u8fdb\u4f4d\uff0c\u5c31\u7ee7\u7eed\u8fed\u4ee3\n            if l1:\n                carry += l1.val  # \u8282\u70b9\u503c\u548c\u8fdb\u4f4d\u52a0\u5728\u4e00\u8d77\n                l1 = l1.next  # \u4e0b\u4e00\u4e2a\u8282\u70b9\n            if l2:\n                carry += l2.val  # \u8282\u70b9\u503c\u548c\u8fdb\u4f4d\u52a0\u5728\u4e00\u8d77\n                l2 = l2.next  # \u4e0b\u4e00\u4e2a\u8282\u70b9\n            cur.next = ListNode(carry % 10)  # \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e00\u4e2a\u6570\u4f4d\n            carry //= 10  # \u65b0\u7684\u8fdb\u4f4d\n            cur = cur.next  # \u4e0b\u4e00\u4e2a\u8282\u70b9\n        return dummy.next  # \u54e8\u5175\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u5934\u8282\u70b9\n</code></pre>","boost":2},{"location":"leetcode/2/#_3","title":"\u590d\u6742\u5ea6","text":"<p>\u53cc\u6307\u9488+\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/2/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-2. \u4e24\u6570\u76f8\u52a0</li> </ul>","boost":2},{"location":"leetcode/200/","title":"200. \u5c9b\u5c7f\u6570\u91cf","text":"","boost":2},{"location":"leetcode/200/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u7531 <code>'1'</code>\uff08\u9646\u5730\uff09\u548c <code>'0'</code>\uff08\u6c34\uff09\u7ec4\u6210\u7684\u7684\u4e8c\u7ef4\u7f51\u683c\uff0c\u8bf7\u4f60\u8ba1\u7b97\u7f51\u683c\u4e2d\u5c9b\u5c7f\u7684\u6570\u91cf\u3002</p> <p>\u5c9b\u5c7f\u603b\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u6bcf\u5ea7\u5c9b\u5c7f\u53ea\u80fd\u7531\u6c34\u5e73\u65b9\u5411\u548c/\u6216\u7ad6\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u5f62\u6210\u3002</p> <p>\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\u8be5\u7f51\u683c\u7684\u56db\u6761\u8fb9\u5747\u88ab\u6c34\u5305\u56f4\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: grid = [</p> <p>[\"1\",\"1\",\"1\",\"1\",\"0\"],</p> <p>[\"1\",\"1\",\"0\",\"1\",\"0\"],</p> <p>[\"1\",\"1\",\"0\",\"0\",\"0\"],</p> <p>[\"0\",\"0\",\"0\",\"0\",\"0\"]</p> <p>]</p> <p>\u8f93\u51fa: 1</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: grid = [</p> <p>[\"1\",\"1\",\"0\",\"0\",\"0\"],</p> <p>[\"1\",\"1\",\"0\",\"0\",\"0\"],</p> <p>[\"0\",\"0\",\"1\",\"0\",\"0\"],</p> <p>[\"0\",\"0\",\"0\",\"1\",\"1\"] ]</p> <p>\u8f93\u51fa: 3</p>","boost":2},{"location":"leetcode/200/#_2","title":"\u9898\u89e3","text":"<p>DFS</p> Go<pre><code>func numIslands(grid [][]byte) (ans int) {\n    m, n := len(grid), len(grid[0])\n    var dfs func(int, int)\n    dfs = func(i, j int) {\n        // \u51fa\u754c\uff0c\u6216\u8005\u4e0d\u662f '1'\uff0c\u5c31\u4e0d\u518d\u5f80\u4e0b\u9012\u5f52\n        if i &lt; 0 || i &gt;= m || j &lt; 0 || j &gt;= n || grid[i][j] != '1' {\n            return\n        }\n        grid[i][j] = '2' // \u63d2\u65d7\uff01\u907f\u514d\u6765\u56de\u6a2a\u8df3\u65e0\u9650\u9012\u5f52\n        dfs(i, j-1)      // \u5f80\u5de6\u8d70\n        dfs(i, j+1)      // \u5f80\u53f3\u8d70\n        dfs(i-1, j)      // \u5f80\u4e0a\u8d70\n        dfs(i+1, j)      // \u5f80\u4e0b\u8d70\n    }\n\n    for i, row := range grid {\n        for j, c := range row {\n            if c == '1' { // \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u5c9b\n                dfs(i, j) // \u628a\u8fd9\u4e2a\u5c9b\u63d2\u6ee1\u65d7\u5b50\uff0c\u8fd9\u6837\u540e\u9762\u904d\u5386\u5230\u7684 '1' \u4e00\u5b9a\u662f\u65b0\u7684\u5c9b\n                ans++\n            }\n        }\n    }\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def numIslands(self, grid: List[List[str]]) -&gt; int:\n        m, n = len(grid), len(grid[0])\n\n        def dfs(i: int, j: int) -&gt; None:\n            # \u51fa\u754c\uff0c\u6216\u8005\u4e0d\u662f '1'\uff0c\u5c31\u4e0d\u518d\u5f80\u4e0b\u9012\u5f52\n            if i &lt; 0 or i &gt;= m or j &lt; 0 or j &gt;= n or grid[i][j] != '1':\n                return\n            grid[i][j] = '2'  # \u63d2\u65d7\uff01\u907f\u514d\u6765\u56de\u6a2a\u8df3\u65e0\u9650\u9012\u5f52\n            dfs(i, j - 1)  # \u5f80\u5de6\u8d70\n            dfs(i, j + 1)  # \u5f80\u53f3\u8d70\n            dfs(i - 1, j)  # \u5f80\u4e0a\u8d70\n            dfs(i + 1, j)  # \u5f80\u4e0b\u8d70\n\n        ans = 0\n        for i, row in enumerate(grid):\n            for j, c in enumerate(row):\n                if c == '1':  # \u627e\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u5c9b\n                    dfs(i, j)  # \u628a\u8fd9\u4e2a\u5c9b\u63d2\u6ee1\u65d7\u5b50\uff0c\u8fd9\u6837\u540e\u9762\u904d\u5386\u5230\u7684 '1' \u4e00\u5b9a\u662f\u65b0\u7684\u5c9b\n                    ans += 1\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/200/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(mn)\\)\uff0c\u5176\u4e2d \\(m\\) \u548c \\(n\\) \u5206\u522b\u4e3a \\(grid\\) \u7684\u884c\u6570\u548c\u5217\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(mn)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u9012\u5f52\u9700\u8981 \\(O(mn)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/200/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 200. \u5c9b\u5c7f\u6570\u91cf</li> </ul>","boost":2},{"location":"leetcode/203/","title":"203. \u79fb\u9664\u94fe\u8868\u5143\u7d20","text":"","boost":2},{"location":"leetcode/203/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>val</code> \uff0c\u8bf7\u4f60\u5220\u9664\u94fe\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 <code>Node.val == val</code> \u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de \u65b0\u7684\u5934\u8282\u70b9 \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1ahead = [1,2,6,3,4,5,6], val = 6</p> <p>\u8f93\u51fa\uff1a[1,2,3,4,5]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1ahead = [], val = 1</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/203/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/203/#_3","title":"\u9898\u89e3","text":"Go<pre><code>/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc removeElements(head *ListNode, val int) *ListNode {\n    dummyHead := &amp;ListNode{}\n    dummyHead.Next = head\n    cur := dummyHead\n    for cur != nil &amp;&amp; cur.Next != nil {\n        if cur.Next.Val == val {\n            cur.Next = cur.Next.Next\n        } else {\n            cur = cur.Next\n        }\n    }\n    return dummyHead.Next\n}\n</code></pre> Python<pre><code># Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def removeElements(self, head: Optional[ListNode], val: int) -&gt; Optional[ListNode]:\n        # \u521b\u5efa\u865a\u62df\u5934\u90e8\u8282\u70b9\u4ee5\u7b80\u5316\u5220\u9664\u8fc7\u7a0b\n        dummy_head = ListNode(next = head)\n\n        # \u904d\u5386\u5217\u8868\u5e76\u5220\u9664\u503c\u4e3aval\u7684\u8282\u70b9\n        current = dummy_head\n        while current.next:\n            if current.next.val == val:\n                current.next = current.next.next\n            else:\n                current = current.next\n\n        return dummy_head.next\n</code></pre>","boost":2},{"location":"leetcode/206/","title":"206. \u53cd\u8f6c\u94fe\u8868","text":"","boost":2},{"location":"leetcode/206/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u8bf7\u4f60\u53cd\u8f6c\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1ahead = [1,2,3,4,5]</p> <p>\u8f93\u51fa\uff1a[5,4,3,2,1]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1ahead = [1,2]</p> <p>\u8f93\u51fa\uff1a[2,1]</p>","boost":2},{"location":"leetcode/206/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/206/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func reverseList(head *ListNode) *ListNode {\n    var prev *ListNode\n    curr := head\n    for curr != nil {\n        nxt := curr.Next // \u4fdd\u5b58 curr.next\n        curr.Next = prev\n        prev = curr\n        curr = nxt\n    }\n    return prev\n}\n</code></pre> Python<pre><code>class Solution:\n    def reverseList(self, head: ListNode) -&gt; ListNode:\n        prev = None\n        curr = head\n        while curr:\n            nxt = curr.next   # \u4fdd\u5b58 curr.next\n            curr.next = prev\n            prev = curr\n            curr = nxt\n        return prev\n</code></pre>","boost":2},{"location":"leetcode/209/","title":"209. \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4","text":"","boost":2},{"location":"leetcode/209/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 <code>n</code> \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 <code>target</code> \u3002</p> <p>\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u603b\u548c\u5927\u4e8e\u7b49\u4e8e <code>target</code> \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u8fde\u7eed\u5b50\u6570\u7ec4 <code>[nums_l, nums_l+1, ..., nums_r-1, nums_r]</code> \uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de 0 \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1a<code>target = 7</code>, <code>nums = [2,3,1,2,4,3]</code></p> <p>\u8f93\u51fa\uff1a2</p> <p>\u89e3\u91ca\uff1a\u5b50\u6570\u7ec4 [4,3] \u662f\u8be5\u6761\u4ef6\u4e0b\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1a<code>target = 4</code>, <code>nums = [1,4,4]</code></p> <p>\u8f93\u51fa\uff1a1</p> <p>\u63d0\u793a\uff1a</p> <ul> <li>\\(1 &lt;= target &lt;= 10^9\\)</li> <li>\\(1 &lt;= nums.length &lt;= 10^5\\)</li> <li>\\(1 &lt;= nums[i] &lt;= 10^5\\)</li> </ul>","boost":2},{"location":"leetcode/209/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func minSubArrayLen(target int, nums []int) int {\n    i := 0\n    l := len(nums)  // \u6570\u7ec4\u957f\u5ea6\n    sum := 0        // \u5b50\u6570\u7ec4\u4e4b\u548c\n    result := l + 1 // \u521d\u59cb\u5316\u8fd4\u56de\u957f\u5ea6\u4e3al+1\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5224\u65ad\u201c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de0\u201d\u7684\u60c5\u51b5\n    for j := 0; j &lt; l; j++ {\n        sum += nums[j]\n        for sum &gt;= target {\n            subLength := j - i + 1 // \u53d6\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n            if subLength &lt; result {\n                result = subLength\n            }\n            sum -= nums[i] // \u66f4\u65b0i\n            i++\n        }\n    }\n    if result == l + 1 {\n        return 0\n    }\n    return result\n}\n</code></pre> Python<pre><code>class Solution:\n    def minSubArrayLen(self, s: int, nums: List[int]) -&gt; int:\n        l = len(nums)\n        left = 0\n        right = 0\n        min_len = float('inf')\n        cur_sum = 0 #\u5f53\u524d\u7684\u7d2f\u52a0\u503c\n\n        while right &lt; l:\n            cur_sum += nums[right]\n\n            while cur_sum &gt;= s: # \u5f53\u524d\u7d2f\u52a0\u503c\u5927\u4e8e\u76ee\u6807\u503c\n                min_len = min(min_len, right - left + 1)\n                cur_sum -= nums[left]\n                left += 1\n\n            right += 1\n\n        return min_len if min_len != float('inf') else 0\n</code></pre>","boost":2},{"location":"leetcode/209/#_3","title":"\u590d\u6742\u5ea6","text":"<p>\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\uff0c\u7a97\u53e3\u5185\u662f\u6ee1\u8db3\u548c\u5927\u4e8e\u7b49\u4e8e s \u7684\u957f\u5ea6\u6700\u5c0f\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/21/","title":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868","text":"","boost":2},{"location":"leetcode/21/#_1","title":"\u9898\u76ee","text":"<p>\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1a<code>l1 = [1,2,4], l2 = [1,3,4]</code></p> <p>\u8f93\u51fa\uff1a<code>[1,1,2,3,4,4]</code></p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1al1 = [], l2 = []</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/21/#_2","title":"\u601d\u8def","text":"<p>\u6bd4\u8f83 \\(list_1\\) \u548c \\(list_2\\) \u7684\u8282\u70b9\u503c\uff0c\u5982\u679c \\(list_1\\) \u7684\u8282\u70b9\u503c\u5c0f\uff0c\u5219\u628a \\(list_1\\) \u52a0\u5230\u65b0\u94fe\u8868\u7684\u672b\u5c3e\uff0c\u7136\u540e\u628a \\(list_1\\) \u66ff\u6362\u6210\u5b83\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u5982\u679c \\(list_2\\) \u7684\u8282\u70b9\u503c\u5c0f\u5219\u540c\u7406\u3002\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u503c\u4e00\u6837\uff0c\u90a3\u4e48\u628a\u8c01\u52a0\u5230\u65b0\u94fe\u8868\u7684\u672b\u5c3e\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u59a8\u89c4\u5b9a\u628a \\(list_2\\) \u52a0\u5230\u65b0\u94fe\u8868\u672b\u5c3e\u3002</p>","boost":2},{"location":"leetcode/21/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode {\n    dummy := &amp;ListNode{}         // \u865a\u62df\u5934\u7ed3\u70b9\n    prev := dummy                // \u7528prev\u53bb\u626b\uff0c\u5148\u6307\u5411dummy\n    for l1 != nil &amp;&amp; l2 != nil { // l1 l2 \u90fd\u5b58\u5728\n        if l1.Val &lt;= l2.Val {    // l1\u503c\u8f83\u5c0f\n            prev.Next = l1       // prev.Next\u6307\u5411l1\n            l1 = l1.Next         // \u8003\u5bdfl1\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n        } else {\n            prev.Next = l2\n            l2 = l2.Next\n        }\n        prev = prev.Next         // prev.Next\u786e\u5b9a\u4e86\uff0cprev\u6307\u9488\u63a8\u8fdb\n    }\n\n    if l1 != nil {\n        prev.Next = l1\n    }\n\n    if l2 != nil {\n        prev.Next = l2\n    }\n\n    return dummy.Next\n}\n</code></pre> Python<pre><code>class Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -&gt; Optional[ListNode]:\n        cur = dummy = ListNode()  # \u7528\u54e8\u5175\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u903b\u8f91\n        while list1 and list2:\n            if list1.val &lt; list2.val:\n                cur.next = list1  # \u628a list1 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n                list1 = list1.next\n            else:  # \u6ce8\uff1a\u76f8\u7b49\u7684\u60c5\u51b5\u52a0\u54ea\u4e2a\u8282\u70b9\u90fd\u662f\u53ef\u4ee5\u7684\n                cur.next = list2  # \u628a list2 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n                list2 = list2.next\n            cur = cur.next\n        cur.next = list1 if list1 else list2  # \u62fc\u63a5\u5269\u4f59\u94fe\u8868\n        return dummy.next\n</code></pre>","boost":2},{"location":"leetcode/21/#_4","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n + m)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(list_1\\) \u7684\u957f\u5ea6\uff0c\\(m\\) \u4e3a \\(list_2\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/21/#_5","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868</li> </ul>","boost":2},{"location":"leetcode/215/","title":"215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20","text":"","boost":2},{"location":"leetcode/215/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u6574\u6570\u6570\u7ec4 <code>nums</code> \u548c\u6574\u6570 <code>k</code>\uff0c\u8bf7\u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c <code>k</code> \u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u4f60\u9700\u8981\u627e\u7684\u662f\u6570\u7ec4\u6392\u5e8f\u540e\u7684\u7b2c <code>k</code> \u4e2a\u6700\u5927\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c <code>k</code> \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002</p> <p>\u4f60\u5fc5\u987b\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: [3,2,1,5,6,4], k = 2</p> <p>\u8f93\u51fa: 5</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: [3,2,3,1,2,4,5,5,6], k = 4</p> <p>\u8f93\u51fa: 4</p>","boost":2},{"location":"leetcode/215/#1","title":"\u9898\u89e31(\u5feb\u6392)","text":"Go<pre><code>func findKthLargest(nums []int, k int) int {\n    n := len(nums)\n    return quickselect(nums, 0, n - 1, n - k)\n}\n\nfunc quickselect(nums []int, l, r, k int) int{\n    if l == r {\n        return nums[k]\n    }\n    partition := nums[l]\n    i := l - 1\n    j := r + 1\n    for i &lt; j {\n        for i++; nums[i] &lt; partition; i++ {}\n        for j--; nums[j] &gt; partition; j-- {}\n        if i &lt; j {\n            nums[i], nums[j] = nums[j], nums[i]\n        }\n    }\n    if k &lt;= j {\n        return quickselect(nums, l, j, k)\n    }\n    return quickselect(nums, j + 1, r, k)\n}\n</code></pre> Python<pre><code>class Solution:\n    def findKthLargest(self, nums, k):\n        def quick_select(nums, k):\n            # \u968f\u673a\u9009\u62e9\u57fa\u51c6\u6570\n            pivot = random.choice(nums)\n            big, equal, small = [], [], []\n            # \u5c06\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001\u7b49\u4e8e pivot \u7684\u5143\u7d20\u5212\u5206\u81f3 big, small, equal \u4e2d\n            for num in nums:\n                if num &gt; pivot:\n                    big.append(num)\n                elif num &lt; pivot:\n                    small.append(num)\n                else:\n                    equal.append(num)\n            if k &lt;= len(big):\n                # \u7b2c k \u5927\u5143\u7d20\u5728 big \u4e2d\uff0c\u9012\u5f52\u5212\u5206\n                return quick_select(big, k)\n            if len(nums) - len(small) &lt; k:\n                # \u7b2c k \u5927\u5143\u7d20\u5728 small \u4e2d\uff0c\u9012\u5f52\u5212\u5206\n                return quick_select(small, k - len(nums) + len(small))\n            # \u7b2c k \u5927\u5143\u7d20\u5728 equal \u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de pivot\n            return pivot\n\n        return quick_select(nums, k)\n</code></pre>","boost":2},{"location":"leetcode/215/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(height\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(log n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/215/#_3","title":"\u53c2\u8003","text":"<ul> <li>Krahes 215. \u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20\uff08\u5206\u6cbb\uff0c\u6e05\u6670\u56fe\u89e3\uff09</li> <li>Rand TopK\u7c7b\u95ee\u9898\u8be6\u89e3</li> </ul>","boost":2},{"location":"leetcode/226/","title":"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811","text":"","boost":2},{"location":"leetcode/226/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u7ffb\u8f6c\u8fd9\u68f5\u4e8c\u53c9\u6811\uff0c\u5e76\u8fd4\u56de\u5176\u6839\u8282\u70b9\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [4,2,7,1,3,6,9]</p> <p>\u8f93\u51fa\uff1a[4,7,2,9,6,3,1]</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [2,1,3]</p> <p>\u8f93\u51fa\uff1a[2,3,1]</p>","boost":2},{"location":"leetcode/226/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u91c7\u7528\u524d\u5e8f\u904d\u5386\u6216\u8005\u540e\u5e8f\u904d\u5386</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> </ul>","boost":2},{"location":"leetcode/226/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func invertTree(root *TreeNode) *TreeNode {\n    if root == nil {\n        return nil\n    }\n    root.Left, root.Right = root.Right, root.Left    // \u4ea4\u6362\n\n    invertTree(root.Left)\n    invertTree(root.Right)\n\n    return root\n}\n</code></pre> Python<pre><code>class Solution:\n    def invertTree(self, root: TreeNode) -&gt; TreeNode:\n        if not root:\n            return None\n        root.left, root.right = root.right, root.left\n        self.invertTree(root.left)\n        self.invertTree(root.right)\n        return root\n</code></pre>","boost":2},{"location":"leetcode/23/","title":"23. \u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868","text":"","boost":2},{"location":"leetcode/23/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002</p> <p>\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1alists = [[1,4,5],[1,3,4],[2,6]]</p> <p>\u8f93\u51fa\uff1a[1,1,2,3,4,4,5,6]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1alists = []</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/23/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u5206\u6cbb\u601d\u60f3\uff1a\u5148\u5408\u5e76\u524d\u4e00\u534a\uff0c\u5728\u5408\u5e76\u540e\u4e00\u534a\uff0c\u6700\u540e\u5408\u5e76\u4e24\u4e2a\u94fe\u8868\u3002</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \\ logk)\\)\uff0c\u5176\u4e2d \\(k\\) \u4e3a <code>lists</code> \u7684\u957f\u5ea6\uff0c\\(n\\) \u4e3a\u6240\u6709\u94fe\u8868\u7684\u8282\u70b9\u6570\u4e4b\u548c\u3002<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u53c2\u4e0e\u94fe\u8868\u5408\u5e76\u7684\u6b21\u6570\u4e3a \\(O(log\\ \u2061k)\\) \u6b21\uff0c\u4e00\u5171\u6709 \\(n\\) \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\ log\\ \u2061k)\\)\u3002</li> </ul> </li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(log\\ k)\\)\u3002<ul> <li>\u9012\u5f52\u6df1\u5ea6\u4e3a \\(O(log\\ \u2061k)\\)\uff0c\u9700\u8981\u7528\u5230 \\(O(log\\ \u2061k)\\) \u7684\u6808\u7a7a\u95f4\u3002Python \u5ffd\u7565\u5207\u7247\u4ea7\u751f\u7684\u989d\u5916\u7a7a\u95f4\u3002</li> </ul> </li> </ul>","boost":2},{"location":"leetcode/23/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func mergeTwoLists(list1, list2 *ListNode) *ListNode {\n    dummy := &amp;ListNode{} // \u7528\u54e8\u5175\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u903b\u8f91\n    cur := dummy         // cur \u6307\u5411\u65b0\u94fe\u8868\u7684\u672b\u5c3e\n    for list1 != nil &amp;&amp; list2 != nil {\n        if list1.Val &lt; list2.Val {\n            cur.Next = list1 // \u628a list1 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n            list1 = list1.Next\n        } else { // \u6ce8\uff1a\u76f8\u7b49\u7684\u60c5\u51b5\u52a0\u54ea\u4e2a\u8282\u70b9\u90fd\u662f\u53ef\u4ee5\u7684\n            cur.Next = list2 // \u628a list2 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n            list2 = list2.Next\n        }\n        cur = cur.Next\n    }\n    // \u62fc\u63a5\u5269\u4f59\u94fe\u8868\n    if list1 != nil {\n        cur.Next = list1\n    } else {\n        cur.Next = list2\n    }\n    return dummy.Next\n}\n\nfunc mergeKLists(lists []*ListNode) *ListNode {\n    m := len(lists)\n    if m == 0 { // \u6ce8\u610f\u8f93\u5165\u7684 lists \u53ef\u80fd\u662f\u7a7a\u7684\n        return nil\n    }\n    if m == 1 { // \u65e0\u9700\u5408\u5e76\uff0c\u76f4\u63a5\u8fd4\u56de\n        return lists[0]\n    }\n    left := mergeKLists(lists[:m/2]) // \u5408\u5e76\u5de6\u534a\u90e8\u5206\n    right := mergeKLists(lists[m/2:]) // \u5408\u5e76\u53f3\u534a\u90e8\u5206\n    return mergeTwoLists(left, right) // \u6700\u540e\u628a\u5de6\u534a\u548c\u53f3\u534a\u5408\u5e76\n}\n</code></pre> Python<pre><code>class Solution:\n    # 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -&gt; Optional[ListNode]:\n        cur = dummy = ListNode()  # \u7528\u54e8\u5175\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u903b\u8f91\n        while list1 and list2:\n            if list1.val &lt; list2.val:\n                cur.next = list1  # \u628a list1 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n                list1 = list1.next\n            else:  # \u6ce8\uff1a\u76f8\u7b49\u7684\u60c5\u51b5\u52a0\u54ea\u4e2a\u8282\u70b9\u90fd\u662f\u53ef\u4ee5\u7684\n                cur.next = list2  # \u628a list2 \u52a0\u5230\u65b0\u94fe\u8868\u4e2d\n                list2 = list2.next\n            cur = cur.next\n        cur.next = list1 if list1 else list2  # \u62fc\u63a5\u5269\u4f59\u94fe\u8868\n        return dummy.next\n\n    def mergeKLists(self, lists: List[Optional[ListNode]]) -&gt; Optional[ListNode]:\n        m = len(lists)\n        if m == 0: return None  # \u6ce8\u610f\u8f93\u5165\u7684 lists \u53ef\u80fd\u662f\u7a7a\u7684\n        if m == 1: return lists[0]  # \u65e0\u9700\u5408\u5e76\uff0c\u76f4\u63a5\u8fd4\u56de\n        left = self.mergeKLists(lists[:m // 2])  # \u5408\u5e76\u5de6\u534a\u90e8\u5206\n        right = self.mergeKLists(lists[m // 2:])  # \u5408\u5e76\u53f3\u534a\u90e8\u5206\n        return self.mergeTwoLists(left, right)  # \u6700\u540e\u628a\u5de6\u534a\u548c\u53f3\u534a\u5408\u5e76\n</code></pre>","boost":2},{"location":"leetcode/23/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-23. \u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868</li> </ul>","boost":2},{"location":"leetcode/230/","title":"230. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7b2cK\u5c0f\u7684\u5143\u7d20","text":"","boost":2},{"location":"leetcode/230/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u548c\u4e00\u4e2a\u6574\u6570 <code>k</code> \uff0c\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u67e5\u627e\u5176\u4e2d\u7b2c <code>k</code> \u4e2a\u6700\u5c0f\u5143\u7d20\uff08\u4ece 1 \u5f00\u59cb\u8ba1\u6570\uff09\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1aroot = [3,1,4,null,2], k = 1</p> <p>\u8f93\u51fa\uff1a1</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = [5,3,6,2,4,null,null,1], k = 3</p> <p>\u8f93\u51fa\uff1a3</p>","boost":2},{"location":"leetcode/230/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(H+k)\\)\uff0c\u5176\u4e2d \\(H\\) \u662f\u6811\u7684\u9ad8\u5ea6\u3002<ul> <li>\u5728\u5f00\u59cb\u904d\u5386\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981 \\(O(H)\\) \u5230\u8fbe\u53f6\u7ed3\u70b9\u3002\u5f53\u6811\u662f\u5e73\u8861\u6811\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5c0f\u503c \\(O(\\log N + k)\\)\uff1b\u5f53\u6811\u662f\u7ebf\u6027\u6811\uff08\u6811\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5b50\u7ed3\u70b9\u6216\u6ca1\u6709\u5b50\u7ed3\u70b9\uff09\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5927\u503c \\(O(N+k)\\)\u3002</li> </ul> </li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(H)\\)\uff0c\u6808\u4e2d\u6700\u591a\u9700\u8981\u5b58\u50a8 \\(H\\) \u4e2a\u5143\u7d20\u3002<ul> <li>\u5f53\u6811\u662f\u5e73\u8861\u6811\u65f6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5c0f\u503c \\(O(\\log N)\\)\uff1b\u5f53\u6811\u662f\u7ebf\u6027\u6811\u65f6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5927\u503c \\(O(N)\\)\u3002</li> </ul> </li> </ul>","boost":2},{"location":"leetcode/230/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func kthSmallest(root *TreeNode, k int) int {\n    stack := []*TreeNode{}\n    for {\n        for root != nil {\n            stack = append(stack, root)\n            root = root.Left\n        }\n        stack, root = stack[:len(stack)-1], stack[len(stack)-1]\n        k--\n        if k == 0 {\n            return root.Val\n        }\n        root = root.Right\n    }\n}\n</code></pre> Python<pre><code>class Solution:\n    def kthSmallest(self, root: TreeNode, k: int) -&gt; int:\n        stack = []\n        while root or stack:\n            while root:\n                stack.append(root)\n                root = root.left\n            root = stack.pop()\n            k -= 1\n            if k == 0:\n                return root.val\n            root = root.right\n</code></pre>","boost":2},{"location":"leetcode/230/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u529b\u6263\u5b98\u65b9\u9898\u89e3</li> </ul>","boost":2},{"location":"leetcode/236/","title":"236. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"","boost":2},{"location":"leetcode/236/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p> <p>\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a\u201c\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u8282\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u8282\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148\uff09\u3002\u201d</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4</p> <p>\u8f93\u51fa\uff1a5</p>","boost":2},{"location":"leetcode/236/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func lowestCommonAncestor(root, p, q *TreeNode) *TreeNode {\n    if root == p || root == q || root == nil {\n        return root\n    }\n    leftAncestor := lowestCommonAncestor(root.Left, p, q)\n    rightAncestor := lowestCommonAncestor(root.Right, p, q)\n\n    // \u4e24\u8fb9\u90fd\u4e0d\u4e3a\u7a7a, \u6839\u8282\u70b9\u4e3a\u7956\u5148\n    if leftAncestor != nil &amp;&amp; rightAncestor != nil {\n        return root\n    }\n    if leftAncestor != nil {\n        return leftAncestor\n    }\n    return rightAncestor\n}\n</code></pre> Python<pre><code>class Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -&gt; 'TreeNode':\n        if root == p or root == q or root == None:\n            return root\n\n        left = self.lowestCommonAncestor(root.left, p, q)\n        right = self.lowestCommonAncestor(root.right, p, q)\n\n        if left and right:\n            return root\n        return left or right\n</code></pre>","boost":2},{"location":"leetcode/236/#_3","title":"\u590d\u6742\u5ea6","text":"<p>\u9012\u5f52\u904d\u5386\u4e8c\u53c9\u6811</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> </ul>","boost":2},{"location":"leetcode/24/","title":"24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9","text":"","boost":2},{"location":"leetcode/24/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u4e24\u4e24\u4ea4\u6362\u5176\u4e2d\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u4ea4\u6362\u540e\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002\u4f60\u5fc5\u987b\u5728\u4e0d\u4fee\u6539\u8282\u70b9\u5185\u90e8\u7684\u503c\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u672c\u9898\uff08\u5373\uff0c\u53ea\u80fd\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\uff09\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1ahead = [1,2,3,4]</p> <p>\u8f93\u51fa\uff1a[2,1,4,3]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1ahead = []</p> <p>\u8f93\u51fa\uff1a[]</p>","boost":2},{"location":"leetcode/24/#_2","title":"\u601d\u8def","text":"<p>\u865a\u62df\u5934\u7ed3\u70b9</p>","boost":2},{"location":"leetcode/24/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func swapPairs(head *ListNode) *ListNode {\n    dummy := &amp;ListNode{Next: head} // \u7528\u54e8\u5175\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u903b\u8f91\n    node0 := dummy\n    node1 := head\n    for node1 != nil &amp;&amp; node1.Next != nil { // \u81f3\u5c11\u6709\u4e24\u4e2a\u8282\u70b9\n        node2 := node1.Next\n        node3 := node2.Next\n\n        node0.Next = node2 // 0 -&gt; 2\n        node2.Next = node1 // 2 -&gt; 1\n        node1.Next = node3 // 1 -&gt; 3\n\n        node0 = node1 // \u4e0b\u4e00\u8f6e\u4ea4\u6362\uff0c0 \u662f 1\n        node1 = node3 // \u4e0b\u4e00\u8f6e\u4ea4\u6362\uff0c1 \u662f 3\n    }\n    return dummy.Next // \u8fd4\u56de\u65b0\u94fe\u8868\u7684\u5934\u8282\u70b9\n}\n</code></pre> Python<pre><code>class Solution:\n    def swapPairs(self, head: Optional[ListNode]) -&gt; Optional[ListNode]:\n        node0 = dummy = ListNode(next=head)  # \u7528\u54e8\u5175\u8282\u70b9\u7b80\u5316\u4ee3\u7801\u903b\u8f91\n        node1 = head\n        while node1 and node1.next:  # \u81f3\u5c11\u6709\u4e24\u4e2a\u8282\u70b9\n            node2 = node1.next\n            node3 = node2.next\n\n            node0.next = node2  # 0 -&gt; 2\n            node2.next = node1  # 2 -&gt; 1\n            node1.next = node3  # 1 -&gt; 3\n\n            node0 = node1  # \u4e0b\u4e00\u8f6e\u4ea4\u6362\uff0c0 \u662f 1\n            node1 = node3  # \u4e0b\u4e00\u8f6e\u4ea4\u6362\uff0c1 \u662f 3\n        return dummy.next  # \u8fd4\u56de\u65b0\u94fe\u8868\u7684\u5934\u8282\u70b9\n</code></pre>","boost":2},{"location":"leetcode/24/#_4","title":"\u590d\u6742\u5ea6","text":"<p>\u865a\u62df\u5934\u7ed3\u70b9</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/24/#_5","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-24.\u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9</li> </ul>","boost":2},{"location":"leetcode/25/","title":"25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868","text":"","boost":2},{"location":"leetcode/25/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u6bcf <code>k</code> \u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u8bf7\u4f60\u8fd4\u56de\u4fee\u6539\u540e\u7684\u94fe\u8868\u3002</p> <p><code>k</code> \u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5b83\u7684\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\u3002\u5982\u679c\u8282\u70b9\u603b\u6570\u4e0d\u662f <code>k</code> \u7684\u6574\u6570\u500d\uff0c\u90a3\u4e48\u8bf7\u5c06\u6700\u540e\u5269\u4f59\u7684\u8282\u70b9\u4fdd\u6301\u539f\u6709\u987a\u5e8f\u3002</p> <p>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1a<code>head = [1,2,3,4,5], k = 2</code></p> <p>\u8f93\u51fa\uff1a<code>[2,1,4,3,5]</code></p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1a<code>head = [1,2,3,4,5], k = 3</code></p> <p>\u8f93\u51fa\uff1a<code>[3,2,1,4,5]</code></p>","boost":2},{"location":"leetcode/25/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func reverseKGroup(head *ListNode, k int) *ListNode {\n    n := 0\n    for cur := head; cur != nil; cur = cur.Next {\n        n++ // \u7edf\u8ba1\u8282\u70b9\u4e2a\u6570\n    }\n\n    dummy := &amp;ListNode{Next: head}\n    p0 := dummy\n    var pre, cur *ListNode = nil, p0.Next\n    for ; n &gt;= k; n -= k {\n        for i := 0; i &lt; k; i++ {\n            nxt := cur.Next\n            cur.Next = pre // \u6bcf\u6b21\u5faa\u73af\u53ea\u4fee\u6539\u4e00\u4e2a Next\uff0c\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\n            pre = cur\n            cur = nxt\n        }\n\n        //\n        nxt := p0.Next\n        p0.Next.Next = cur\n        p0.Next = pre\n        p0 = nxt\n    }\n    return dummy.Next\n}\n</code></pre> Python<pre><code>class Solution:\n    def reverseKGroup(self, head: Optional[ListNode], k: int) -&gt; Optional[ListNode]:\n        n = 0\n        cur = head\n        while cur:\n            n += 1  # \u7edf\u8ba1\u8282\u70b9\u4e2a\u6570\n            cur = cur.next\n\n        p0 = dummy = ListNode(next=head)\n        pre = None\n        cur = head\n        while n &gt;= k:\n            n -= k\n            for _ in range(k):  # \u540c 92 \u9898\n                nxt = cur.next\n                cur.next = pre  # \u6bcf\u6b21\u5faa\u73af\u53ea\u4fee\u6539\u4e00\u4e2a next\uff0c\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\n                pre = cur\n                cur = nxt\n\n            nxt = p0.next\n            nxt.next = cur\n            p0.next = pre\n            p0 = nxt\n        return dummy.next\n</code></pre>","boost":2},{"location":"leetcode/25/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/25/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868</li> </ul>","boost":2},{"location":"leetcode/253/","title":"253. \u4f1a\u8bae\u5ba4 II","text":""},{"location":"leetcode/253/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u7cfb\u5217\u7684\u4f1a\u8bae\u65f6\u95f4\u95f4\u9694 <code>intervals</code>\uff0c\u5305\u62ec\u8d77\u59cb\u548c\u7ed3\u675f\u65f6\u95f4 <code>[[s1,e1],[s2,e2],...] (si &lt; ei)</code>\uff0c\u627e\u5230\u6240\u9700\u7684\u6700\u5c0f\u7684\u4f1a\u8bae\u5ba4\u6570\u91cf\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: <code>intervals = [(0,30),(5,10),(15,20)]</code></p> <p>\u8f93\u51fa: <code>2</code></p> <p>\u89e3\u91ca: \u9700\u8981\u4e24\u4e2a\u4f1a\u8bae\u5ba4\uff0c\u4f1a\u8bae\u5ba4 1: <code>(0,30)</code>\uff0c\u4f1a\u8bae\u5ba4 2: <code>(5,10),(15,20)</code></p>"},{"location":"leetcode/253/#_2","title":"\u9898\u89e3","text":""},{"location":"leetcode/253/#1","title":"\u601d\u8def 1: \u6570\u7ec4\u6392\u5e8f","text":"<p>\u7528\u4e24\u4e2a\u6570\u7ec4\u6765\u505a\uff0c\u5206\u522b\u4fdd\u5b58\u8d77\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\uff0c\u7136\u540e\u5404\u81ea\u6392\u4e2a\u5e8f\u3002</p> <p>\u7136\u540e\u5f00\u59cb\u904d\u5386\uff0c\u5982\u679c\u5f53\u524d\u8d77\u59cb\u65f6\u95f4\u5c0f\u4e8e\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u7ed3\u679c\u81ea\u589e 1\uff0c\u53cd\u4e4b\u7ed3\u675f\u65f6\u95f4\u6307\u9488\u81ea\u589e 1\uff0c\u8fd9\u6837\u53ef\u4ee5\u627e\u51fa\u91cd\u53e0\u7684\u65f6\u95f4\u6bb5\uff0c\u4ece\u800c\u5b89\u6392\u65b0\u7684\u4f1a\u8bae\u5ba4</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlogn)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> </ul> Go<pre><code>func minMeetingRooms(intervals [][]int) int {\n    var startTimes []int\n    var endTimes []int\n\n    for _, interval := range intervals {\n        startTimes = append(startTimes, interval[0])\n        endTimes = append(endTimes, interval[1])\n    }\n\n    sort.Ints(startTimes)\n    sort.Ints(endTimes)\n\n    endIdx := 0\n    roomsCount := 0\n    for i := 0; i &lt; len(intervals); i++ {\n        earliestEndTime := endTimes[endIdx]\n        if startTimes[i] &lt; earliestEndTime {\n            roomsCount++\n        } else {\n            endIdx++\n        }\n    }\n\n    return roomsCount\n}\n</code></pre> Python<pre><code>class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -&gt; int:\n        if len(intervals) == 0:\n            return 0\n\n        startTimes = sorted([interval[0] for interval in intervals])\n        endTimes = sorted([interval[1] for interval in intervals])\n\n        endIndex = 0\n        roomsCount = 0\n        for i in range(len(intervals)):\n            # \u65b0\u4f1a\u8bae\u7684\u5f00\u542f\u65f6\u95f4 \u65e9\u4e8e \u4e0a\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4, \u6b64\u65f6\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bae\u5ba4\n            if startTimes[i] &lt; endTimes[endIndex]:\n                roomsCount += 1\n            else:\n                endIndex += 1\n\n        return roomsCount\n</code></pre>"},{"location":"leetcode/253/#2","title":"\u601d\u8def 2: \u626b\u63cf\u7ebf","text":"<p>TODO</p>"},{"location":"leetcode/253/#_3","title":"\u53c2\u8003","text":"<ul> <li>[Leetcode] 253. Meeting Rooms 2</li> <li>[LeetCode] 253. Meeting Rooms II \u4f1a\u8bae\u5ba4\u4e4b\u4e8c</li> <li>[LintCode]\u4f1a\u8bae\u5ba4 II \u00b7 Meeting Rooms II</li> </ul>"},{"location":"leetcode/27/","title":"27. \u79fb\u9664\u5143\u7d20","text":"","boost":2},{"location":"leetcode/27/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u503c <code>val</code>\uff0c\u4f60\u9700\u8981 \u539f\u5730 \u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e <code>val</code> \u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u4ec5\u4f7f\u7528 <code>O(1)</code> \u989d\u5916\u7a7a\u95f4\u5e76 \u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3002</p> <p>\u5143\u7d20\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1a<code>nums = [3,2,2,3], val = 3</code></p> <p>\u8f93\u51fa\uff1a<code>2, nums = [2,2]</code></p> <p>\u89e3\u91ca\uff1a\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u5747\u4e3a 2\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u65b0\u957f\u5ea6\u4e3a 2 \uff0c\u800c nums = [2,2,3,3] \u6216 nums = [2,2,0,0]\uff0c\u4e5f\u4f1a\u88ab\u89c6\u4f5c\u6b63\u786e\u7b54\u6848\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1a<code>nums = [0,1,2,2,3,0,4,2], val = 2</code></p> <p>\u8f93\u51fa\uff1a<code>5, nums = [0,1,3,0,4]</code></p> <p>\u89e3\u91ca\uff1a\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u4e3a 0, 1, 3, 0, 4\u3002\u6ce8\u610f\u8fd9\u4e94\u4e2a\u5143\u7d20\u53ef\u4e3a\u4efb\u610f\u987a\u5e8f\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</p>","boost":2},{"location":"leetcode/27/#_2","title":"\u9898\u89e3","text":"<p>\u53cc\u6307\u9488</p> Go<pre><code>func removeElement(nums []int, val int) int {\n    length := len(nums)\n    res := 0\n    for i := 0; i &lt; length; i++ {\n        if nums[i] != val {\n            nums[res] = nums[i]\n            res++\n        }\n    }\n    nums = nums[:res] // \u4fee\u6539\u539f\u6570\u7ec4\n    return res\n}\n</code></pre> Python<pre><code>class Solution:\n    def removeElement(self, nums: List[int], val: int) -&gt; int:\n        # \u5feb\u6162\u6307\u9488\n        fast = 0  # \u5feb\u6307\u9488\n        slow = 0  # \u6162\u6307\u9488\n        size = len(nums)\n        while fast &lt; size:  # \u4e0d\u52a0\u7b49\u4e8e\u662f\u56e0\u4e3a\uff0ca = size \u65f6\uff0cnums[a] \u4f1a\u8d8a\u754c\n            # slow \u7528\u6765\u6536\u96c6\u4e0d\u7b49\u4e8e val \u7684\u503c\uff0c\u5982\u679c fast \u5bf9\u5e94\u503c\u4e0d\u7b49\u4e8e val\uff0c\u5219\u628a\u5b83\u4e0e slow \u66ff\u6362\n            if nums[fast] != val:\n                nums[slow] = nums[fast]\n                slow += 1\n            fast += 1\n        return slow\n</code></pre>","boost":2},{"location":"leetcode/27/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/3/","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":"","boost":2},{"location":"leetcode/3/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: s = \"abcabcbb\"</p> <p>\u8f93\u51fa: 3</p> <p>\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: s = \"bbbbb\"</p> <p>\u8f93\u51fa: 1</p> <p>\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"b\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: s = \"pwwkew\"</p> <p>\u8f93\u51fa: 3</p> <p>\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"wke\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002\u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c\"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002</p>","boost":2},{"location":"leetcode/3/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func lengthOfLongestSubstring(s string) (ans int) {\n    window := [128]bool{} // \u4e5f\u53ef\u4ee5\u7528 map\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6548\u7387\u7528\u7684\u6570\u7ec4\n    left := 0\n    for right, c := range s {\n        // \u5982\u679c\u7a97\u53e3\u5185\u5df2\u7ecf\u5305\u542b c\uff0c\u90a3\u4e48\u518d\u52a0\u5165\u4e00\u4e2a c \u4f1a\u5bfc\u81f4\u7a97\u53e3\u5185\u6709\u91cd\u590d\u5143\u7d20\n        // \u6240\u4ee5\u8981\u5728\u52a0\u5165 c \u4e4b\u524d\uff0c\u5148\u79fb\u51fa\u7a97\u53e3\u5185\u7684 c\n        for window[c] { // \u7a97\u53e3\u5185\u6709 c\n            window[s[left]] = false\n            left++ // \u7f29\u5c0f\u7a97\u53e3\n        }\n        window[c] = true // \u52a0\u5165 c\n        ans = max(ans, right - left + 1) // \u66f4\u65b0\u7a97\u53e3\u957f\u5ea6\u6700\u5927\u503c\n    }\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        ans, left = 0, 0\n        window = set()\n        for idx, c in enumerate(s):\n            while c in window: # \u7a97\u53e3\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\u5b57\u7b26c\n                window.remove(s[left])\n                left += 1\n            window.add(c)\n            ans = max(ans, idx - left + 1)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/3/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(s\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(|\\Sigma|)\\)\uff0c\u5176\u4e2d\\(|\\Sigma|\\)\u4e3a\u5b57\u7b26\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u672c\u9898\u4e2d\u5b57\u7b26\u5747\u4e3a ASCII \u5b57\u7b26\uff0c\u6240\u4ee5 \\(|\\Sigma| \\leq 128\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/3/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32</li> </ul>","boost":2},{"location":"leetcode/31/","title":"31. \u4e0b\u4e00\u4e2a\u6392\u5217","text":"<p>\u6574\u6570\u6570\u7ec4\u7684\u4e00\u4e2a \u6392\u5217  \u5c31\u662f\u5c06\u5176\u6240\u6709\u6210\u5458\u4ee5\u5e8f\u5217\u6216\u7ebf\u6027\u987a\u5e8f\u6392\u5217\u3002</p> <p>\u4f8b\u5982\uff0c<code>arr = [1,2,3]</code> \uff0c\u4ee5\u4e0b\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u89c6\u4f5c <code>arr</code> \u7684\u6392\u5217\uff1a<code>[1,2,3]\u3001[1,3,2]\u3001[3,1,2]\u3001[2,3,1]</code> \u3002 \u6574\u6570\u6570\u7ec4\u7684 \u4e0b\u4e00\u4e2a\u6392\u5217 \u662f\u6307\u5176\u6574\u6570\u7684\u4e0b\u4e00\u4e2a\u5b57\u5178\u5e8f\u66f4\u5927\u7684\u6392\u5217\u3002\u66f4\u6b63\u5f0f\u5730\uff0c\u5982\u679c\u6570\u7ec4\u7684\u6240\u6709\u6392\u5217\u6839\u636e\u5176\u5b57\u5178\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u5728\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u90a3\u4e48\u6570\u7ec4\u7684 \u4e0b\u4e00\u4e2a\u6392\u5217 \u5c31\u662f\u5728\u8fd9\u4e2a\u6709\u5e8f\u5bb9\u5668\u4e2d\u6392\u5728\u5b83\u540e\u9762\u7684\u90a3\u4e2a\u6392\u5217\u3002\u5982\u679c\u4e0d\u5b58\u5728\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u6392\u5217\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u7ec4\u5fc5\u987b\u91cd\u6392\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\uff08\u5373\uff0c\u5176\u5143\u7d20\u6309\u5347\u5e8f\u6392\u5217\uff09\u3002</p> <ul> <li>\u4f8b\u5982\uff0c<code>arr = [1,2,3]</code> \u7684\u4e0b\u4e00\u4e2a\u6392\u5217\u662f <code>[1,3,2]</code> \u3002</li> <li>\u7c7b\u4f3c\u5730\uff0c<code>arr = [2,3,1]</code> \u7684\u4e0b\u4e00\u4e2a\u6392\u5217\u662f <code>[3,1,2]</code> \u3002</li> <li>\u800c <code>arr = [3,2,1]</code> \u7684\u4e0b\u4e00\u4e2a\u6392\u5217\u662f <code>[1,2,3]</code> \uff0c\u56e0\u4e3a <code>[3,2,1]</code> \u4e0d\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u5e8f\u66f4\u5927\u7684\u6392\u5217\u3002</li> </ul> <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u627e\u51fa <code>nums</code> \u7684\u4e0b\u4e00\u4e2a\u6392\u5217\u3002</p> <p>\u5fc5\u987b \u539f\u5730 \u4fee\u6539\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528\u989d\u5916\u5e38\u6570\u7a7a\u95f4\u3002</p>","boost":2},{"location":"leetcode/31/#_1","title":"\u601d\u8def","text":"<ol> <li>\u5148\u4ece\u540e\u5411\u524d\u67e5\u627e\u7b2c\u4e00\u4e2a\u76f8\u90bb\u5347\u5e8f\u7684\u5143\u7d20\u5bf9 <code>(i,j)</code>\uff0c\u8fd9\u91cc <code>i=4</code>\uff0c<code>j=5</code>\uff0c\u5bf9\u5e94\u7684\u503c\u4e3a 5\uff0c7\uff1a</li> <li>\u7136\u540e\u5728 <code>[j,end)</code> \u4ece\u540e\u5411\u524d\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e <code>A[i]</code> \u7684\u503c <code>A[k]</code>\u3002</li> <li>\u5c06 <code>A[i]</code> \u4e0e <code>A[k]</code> \u4ea4\u6362\u3002\u8fd9\u91cc\u4ea4\u6362 5\u30016\uff1a</li> <li>\u8fd9\u65f6 <code>[j,end)</code> \u5fc5\u7136\u662f\u964d\u5e8f\uff0c\u9006\u7f6e <code>[j,end)</code>\uff0c\u4f7f\u5176\u5347\u5e8f\u3002\u8fd9\u91cc\u9006\u7f6e <code>[7,5,4]</code>\uff1a</li> <li>\u56e0\u6b64\uff0c<code>12385764</code> \u7684\u4e0b\u4e00\u4e2a\u6392\u5217\u5c31\u662f <code>12386457</code>\u3002</li> </ol> Go<pre><code>func nextPermutation(nums []int) {\n    if len(nums) &lt;= 1 {\n        return\n    }\n\n    i, j, k := len(nums)-2, len(nums)-1, len(nums)-1\n\n    // \u4ece\u540e\u5411\u524d \u67e5\u627e\u7b2c\u4e00\u4e2a \u76f8\u90bb\u5347\u5e8f \u7684\u5143\u7d20\u5bf9 (i,j), \u6ee1\u8db3 A[i] &lt; A[j]\n    for i &gt;= 0 &amp;&amp; nums[i] &gt;= nums[j] {\n        i--\n        j--\n    }\n\n    if i &gt;= 0 { // \u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u6392\u5217\n        // \u5728 [j,end) \u4ece\u540e\u5411\u524d \u67e5\u627e\u7b2c\u4e00\u4e2a\u6ee1\u8db3: A[i]&lt;A[k]\n        for nums[i] &gt;= nums[k] {\n            k--\n        }\n        // \u4ea4\u6362 A[i], A[k]\n        nums[i], nums[k] = nums[k], nums[i]\n    }\n\n    // \u6b64\u65f6 [j:end] \u4e3a\u964d\u5e8f\uff0c\u7ffb\u8f6c\u4f7f\u5176\u5347\u5e8f\n    for i, j := j, len(nums)-1; i &lt; j; i, j = i+1, j-1 {\n        nums[i], nums[j] = nums[j], nums[i]\n    }\n}\n</code></pre> Python<pre><code>class Solution:\n    def nextPermutation(self, nums: List[int]) -&gt; None:\n        if len(nums) &lt;= 1:\n            return\n\n        i, j, k = len(nums)-2, len(nums)-1, len(nums)-1\n\n        # \u4ece\u540e\u5411\u524d \u67e5\u627e\u7b2c\u4e00\u4e2a \u76f8\u90bb\u5347\u5e8f \u7684\u5143\u7d20\u5bf9 (i,j), \u6ee1\u8db3 A[i] &lt; A[j]\n        while i &gt;= 0 and nums[i] &gt;= nums[j]:\n            i -= 1\n            j -= 1\n\n        if i &gt;= 0: # \u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u6392\u5217\n            # \u5728 [j,end) \u4ece\u540e\u5411\u524d \u67e5\u627e\u7b2c\u4e00\u4e2a\u6ee1\u8db3: A[i]&lt;A[k]\n            while nums[i] &gt;= nums[k]:\n                k -= 1\n            # \u4ea4\u6362 A[i], A[k]\n            nums[i], nums[k] = nums[k], nums[i]\n\n        # \u6b64\u65f6 [j:end] \u4e3a\u964d\u5e8f\uff0c\u7ffb\u8f6c\u4f7f\u5176\u5347\u5e8f\n        i, j = j, len(nums) - 1\n        while i &lt; j:\n            nums[i], nums[j] = nums[j], nums[i]\n            i += 1\n            j -= 1\n</code></pre>","boost":2},{"location":"leetcode/31/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/31/#_3","title":"\u53c2\u8003","text":"<ul> <li>\u4e0b\u4e00\u4e2a\u6392\u5217-\u529b\u6263\u5b98\u65b9\u9898\u89e3</li> <li>\u4e0b\u4e00\u4e2a\u6392\u5217-Imageslr \u8be6\u89e3\uff1a\u601d\u8def+\u63a8\u5bfc+\u6b65\u9aa4</li> </ul>","boost":2},{"location":"leetcode/33/","title":"33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4","text":"","boost":2},{"location":"leetcode/33/#_1","title":"\u9898\u76ee","text":"<p>\u6574\u6570\u6570\u7ec4 <code>nums</code> \u6309\u5347\u5e8f\u6392\u5217\uff0c\u6570\u7ec4\u4e2d\u7684\u503c \u4e92\u4e0d\u76f8\u540c \u3002</p> <p>\u5728\u4f20\u9012\u7ed9\u51fd\u6570\u4e4b\u524d\uff0c<code>nums</code> \u5728\u9884\u5148\u672a\u77e5\u7684\u67d0\u4e2a\u4e0b\u6807 <code>k\uff080 &lt;= k &lt; nums.length</code> \u4e0a\u8fdb\u884c\u4e86 \u65cb\u8f6c\uff0c\u4f7f\u6570\u7ec4\u53d8\u4e3a <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>\uff08\u4e0b\u6807 \u4ece 0 \u5f00\u59cb \u8ba1\u6570\uff09\u3002\u4f8b\u5982\uff0c <code>[0,1,2,4,5,6,7]</code> \u5728\u4e0b\u6807 <code>3</code> \u5904\u7ecf\u65cb\u8f6c\u540e\u53ef\u80fd\u53d8\u4e3a <code>[4,5,6,7,0,1,2]</code> \u3002</p> <p>\u7ed9\u4f60 \u65cb\u8f6c\u540e \u7684\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>target</code> \uff0c\u5982\u679c <code>nums</code> \u4e2d\u5b58\u5728\u8fd9\u4e2a\u76ee\u6807\u503c <code>target</code> \uff0c\u5219\u8fd4\u56de\u5b83\u7684\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de <code>-1</code> \u3002</p> <p>\u4f60\u5fc5\u987b\u8bbe\u8ba1\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(log n)</code> \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: nums = [4,5,6,7,0,1,2], target = 0</p> <p>\u8f93\u51fa: 4</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: nums = [4,5,6,7,0,1,2], target = 3</p> <p>\u8f93\u51fa: -1</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: nums = [1], target = 0</p> <p>\u8f93\u51fa: -1</p>","boost":2},{"location":"leetcode/33/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func search(nums []int, target int) int {\n    if len(nums) == 0 {\n        return -1\n    }\n\n    left, right := 0, len(nums) - 1\n    for left &lt;= right {\n        mid := left + (right - left) / 2\n        if nums[mid] == target {\n            return mid\n        }\n\n        if nums[mid] &gt;= nums[left] {\n            if nums[mid] &gt; target &amp;&amp; target &gt;= nums[left] {\n                right = mid - 1\n            } else {\n                left = mid + 1\n            }\n        } else {\n            if nums[mid] &lt; target &amp;&amp; target  &lt;= nums[right] {\n                left = mid + 1\n            } else {\n                right = mid - 1\n            }\n        }\n    }\n\n    return - 1\n}\n</code></pre> Python<pre><code>class Solution:\n    def search(self, nums: List[int], target: int) -&gt; int:\n        if not nums:\n            return -1\n        l, r = 0, len(nums) - 1\n        while l &lt;= r:\n            mid = (l + r) // 2\n            if nums[mid] == target:\n                return mid\n            if nums[0] &lt;= nums[mid]:\n                if nums[0] &lt;= target &lt; nums[mid]:\n                    r = mid - 1\n                else:\n                    l = mid + 1\n            else:\n                if nums[mid] &lt; target &lt;= nums[len(nums) - 1]:\n                    l = mid + 1\n                else:\n                    r = mid - 1\n        return -1\n</code></pre>","boost":2},{"location":"leetcode/33/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(log \\ n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(prices\\) \u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/33/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u529b\u6263\u5b98\u65b9\u9898\u89e3 33. \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4</li> </ul>","boost":2},{"location":"leetcode/42/","title":"42. \u63a5\u96e8\u6c34","text":"","boost":2},{"location":"leetcode/42/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a <code>n</code> \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a <code>1</code> \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165: height = [0,1,0,2,1,0,1,3,2,1,2,1]</p> <p>\u8f93\u51fa: 6</p> <p>\u89e3\u91ca: \u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u9ad8\u5ea6\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u96e8\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u96e8\u6c34\uff09\u3002 </p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: height = [4,2,0,3,2,5]</p> <p>\u8f93\u51fa: 9</p>","boost":2},{"location":"leetcode/42/#1","title":"\u9898\u89e31(\u53cc\u6307\u9488)","text":"Go<pre><code>func trap(height []int) int {\n    left, right := 0, len(height) - 1\n    leftMax, rightMax := 0, 0\n\n    ans := 0\n    for left &lt; right {\n        leftMax = max(leftMax, height[left])\n        rightMax = max(rightMax, height[right])\n\n        if leftMax &lt; rightMax {\n            ans += leftMax - height[left]\n            left++\n        } else {\n            ans += rightMax - height[right]\n            right--\n        }\n    }\n    return ans\n}\n\nfunc max(a, b int) int {\n    if a &gt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def trap(self, height: List[int]) -&gt; int:\n        ans = 0\n        left, right = 0, len(height) - 1\n        left_max, right_max = 0, 0\n        while left &lt; right:\n            left_max = max(left_max, height[left])\n            right_max = max(right_max, height[right])\n            if height[left] &lt; height[right]:\n                ans += left_max - height[left]\n                left += 1\n            else:\n                ans += right_max - height[right]\n                right -= 1\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/42/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(height\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/42/#2","title":"\u9898\u89e32(\u5355\u8c03\u6808)","text":"Go<pre><code>func trap(height []int) (ans int) {\n    st := []int{}\n    for i, h := range height {\n        for len(st) &gt; 0 &amp;&amp; h &gt;= height[st[len(st)-1]] {\n            bottomH := height[st[len(st)-1]]\n            st = st[:len(st)-1]\n            if len(st) == 0 {\n                break\n            }\n            left := st[len(st)-1]\n            dh := min(height[left], h) - bottomH // \u9762\u79ef\u7684\u9ad8\n            ans += dh * (i - left - 1)\n        }\n        st = append(st, i)\n    }\n    return\n}\n\nfunc min(a, b int) int {\n    if a &lt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def trap(self, height: List[int]) -&gt; int:\n        ans = 0\n        st = []\n        for i, h in enumerate(height):\n            while st and h &gt;= height[st[-1]]:\n                bottom_h = height[st.pop()]\n                if not st:  # len(st) == 0\n                    break\n                left = st[-1]\n                dh = min(height[left], h) - bottom_h  # \u9762\u79ef\u7684\u9ad8\n                ans += dh * (i - left - 1)\n            st.append(i)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/42/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(height\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(min(n, U))\\)\uff0c\u5176\u4e2d \\(U=max(height)\u2212min(height)+1\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/42/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 42. \u63a5\u96e8\u6c34</li> </ul>","boost":2},{"location":"leetcode/437/","title":"437. \u8def\u5f84\u603b\u548c III","text":"","boost":2},{"location":"leetcode/437/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u548c\u4e00\u4e2a\u6574\u6570 <code>targetSum</code> \uff0c\u6c42\u8be5\u4e8c\u53c9\u6811\u91cc\u8282\u70b9\u503c\u4e4b\u548c\u7b49\u4e8e <code>targetSum</code> \u7684 \u8def\u5f84 \u7684\u6570\u76ee\u3002</p> <p>\u8def\u5f84 \u4e0d\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4e5f\u4e0d\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u7ed3\u675f\uff0c\u4f46\u662f\u8def\u5f84\u65b9\u5411\u5fc5\u987b\u662f\u5411\u4e0b\u7684\uff08\u53ea\u80fd\u4ece\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\uff09\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22</p> <p>\u8f93\u51fa\uff1a3</p>","boost":2},{"location":"leetcode/437/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u524d\u7f00\u548c</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u7684\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/437/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func pathSum(root *TreeNode, targetSum int) int {\n    preSum := map[int]int{0: 1}\n    ans := 0\n    var dfs func(*TreeNode, int)\n    dfs = func(node *TreeNode, curr int) {\n        if node == nil {\n            return\n        }\n\n        curr += node.Val\n        ans += preSum[curr - targetSum]\n        preSum[curr]++\n\n        dfs(node.Left, curr)\n        dfs(node.Right, curr)\n        preSum[curr]--\n        return\n    }\n    dfs(root, 0)\n    return ans\n}\n</code></pre> Python<pre><code>class Solution:\n    def pathSum(self, root: TreeNode, targetSum: int) -&gt; int:\n        ret = 0\n        dic = {0:1}\n\n        def dfs(root: TreeNode, curr: int):\n            nonlocal ret\n            if not root:\n                return\n\n            curr += root.val\n            ret += dic.get(curr - targetSum, 0)\n            dic[curr] = dic.get(curr, 0) + 1\n            dfs(root.left, curr)\n            dfs(root.right, curr)\n            dic[curr] -= 1\n\n        dfs(root, 0)\n\n        return ret\n</code></pre>","boost":2},{"location":"leetcode/45/","title":"45. \u8df3\u8dc3\u6e38\u620f II","text":"","boost":2},{"location":"leetcode/45/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a<code>n</code>\u7684 <code>0</code> \u7d22\u5f15\u6574\u6570\u6570\u7ec4<code>nums</code>\u3002\u521d\u59cb\u4f4d\u7f6e\u4e3a<code>nums[0]</code>\u3002</p> <p>\u6bcf\u4e2a\u5143\u7d20<code>nums[i]</code>\u8868\u793a\u4ece\u7d22\u5f15<code>i</code>\u5411\u524d\u8df3\u8f6c\u7684\u6700\u5927\u957f\u5ea6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5728<code>nums[i]</code>\u5904\uff0c\u4f60\u53ef\u4ee5\u8df3\u8f6c\u5230\u4efb\u610f<code>nums[i + j]</code>\u5904:</p> <ul> <li><code>0 &lt;= j &lt;= nums[i]</code></li> <li><code>i + j &lt; n</code></li> </ul> <p>\u8fd4\u56de\u5230\u8fbe<code>nums[n - 1]</code>\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\u3002\u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u5230\u8fbe<code>nums[n - 1]</code>\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: nums = [2,3,1,1,4]</p> <p>\u8f93\u51fa: 2</p> <p>\u89e3\u91ca: \u8df3\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u8df3\u8dc3\u6570\u662f 2\u3002\u4ece\u4e0b\u6807\u4e3a 0 \u8df3\u5230\u4e0b\u6807\u4e3a 1 \u7684\u4f4d\u7f6e\uff0c\u8df3 1 \u6b65\uff0c\u7136\u540e\u8df3 3 \u6b65\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: nums = [2,3,0,1,4]</p> <p>\u8f93\u51fa: 2</p>","boost":2},{"location":"leetcode/45/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(nums\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/45/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func jump(nums []int) (ans int) {\n    curRight := 0  // \u5df2\u5efa\u9020\u7684\u6865\u7684\u53f3\u7aef\u70b9\n    nextRight := 0 // \u4e0b\u4e00\u5ea7\u6865\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\n    for i, num := range nums[:len(nums)-1] {\n        nextRight = max(nextRight, i+num)\n        if i == curRight { // \u5230\u8fbe\u5df2\u5efa\u9020\u7684\u6865\u7684\u53f3\u7aef\u70b9\n            curRight = nextRight // \u9020\u4e00\u5ea7\u6865\n            ans++\n        }\n    }\n    return\n}\n\nfunc max(x, y int) int {\n    if x &gt; y {\n        return x\n    }\n    return y\n}\n</code></pre> Python<pre><code>class Solution:\n    def jump(self, nums: List[int]) -&gt; int:\n        ans = 0\n        cur_right = 0  # \u5df2\u5efa\u9020\u7684\u6865\u7684\u53f3\u7aef\u70b9\n        next_right = 0  # \u4e0b\u4e00\u5ea7\u6865\u7684\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\n        for i in range(len(nums) - 1):\n            next_right = max(next_right, i + nums[i])\n            if i == cur_right:  # \u5230\u8fbe\u5df2\u5efa\u9020\u7684\u6865\u7684\u53f3\u7aef\u70b9\n                cur_right = next_right  # \u9020\u4e00\u5ea7\u6865\n                ans += 1\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/45/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 45. \u8df3\u8dc3\u6e38\u620f II</li> </ul>","boost":2},{"location":"leetcode/46/","title":"46. \u5168\u6392\u5217","text":"","boost":2},{"location":"leetcode/46/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e0d\u542b\u91cd\u590d\u6570\u5b57\u7684\u6570\u7ec4 nums \uff0c\u8fd4\u56de\u5176 \u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217 \u3002\u4f60\u53ef\u4ee5 \u6309\u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u7b54\u6848\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1anums = [1,2,3]</p> <p>\u8f93\u51fa\uff1a[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1anums = [0,1]</p> <p>\u8f93\u51fa\uff1a[[0,1],[1,0]]</p>","boost":2},{"location":"leetcode/46/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u56de\u6eaf</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n\u22c5n!)\\)\u3002<ul> <li>\\(n\\) \u4e3a\u6570\u7ec4 <code>nums</code> \u7684\u957f\u5ea6\uff0c\u56de\u6eaf\u7684\u8c03\u7528\u6b21\u6570\u662f \\(O(n!)\\)\uff0c\u6570\u7ec4\u62fc\u63a5\u64cd\u4f5c\u4f7f\u7528 \\(O(n)\\)\uff0c\u56e0\u6b64\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\u22c5n!)\\)\u3002</li> </ul> </li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\\(n\\) \u4e3a\u6570\u7ec4 <code>nums</code> \u7684\u957f\u5ea6\u3002</li> </ul>","boost":2},{"location":"leetcode/46/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func permute(nums []int) [][]int {\n    // \u65f6\u95f4 O(n\u22c5n!)\n    // \u7a7a\u95f4 O(n)\n    res := make([][]int, 0)\n    path := make([]int, 0, len(nums))\n    state := make([]bool, len(nums))\n    var dfs func(nums []int, curr int)\n    dfs = func(nums []int, curr int) {\n        if curr == len(nums) {\n            tmp := make([]int, len(path))\n            copy(tmp, path)\n            res = append(res, tmp)\n        }\n\n        for i := 0; i &lt; len(nums); i++ {\n            if !state[i] { // \u5224\u65ad\u662f\u5426\u8bbf\u95ee\u8fc7\n                path = append(path, nums[i])\n                state[i] = true\n                dfs(nums, curr+1)\n                state[i] = false\n                path = path[:len(path)-1]\n            }\n        }\n    }\n\n    dfs(nums, 0)\n    return res\n}\n</code></pre> Python<pre><code>class Solution:\n    def permute(self, nums):\n        result = []\n        self.backtracking(nums, [], [False] * len(nums), result)\n        return result\n\n    def backtracking(self, nums, path, used, result):\n        if len(path) == len(nums):\n            result.append(path[:])\n            return\n        for i in range(len(nums)):\n            if used[i]:\n                continue\n            used[i] = True\n            path.append(nums[i])\n            self.backtracking(nums, path, used, result)\n            path.pop()\n            used[i] = False\n</code></pre>","boost":2},{"location":"leetcode/5/","title":"5. \u6700\u957f\u56de\u6587\u5b50\u4e32","text":"","boost":2},{"location":"leetcode/5/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u627e\u5230 <code>s</code> \u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: s = \"babad\"</p> <p>\u8f93\u51fa: \"bab\"</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: s = \"cbbd\"</p> <p>\u8f93\u51fa: \"bb\"</p>","boost":2},{"location":"leetcode/5/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func longestPalindrome(s string) string {\n    res := \"\"\n    for i := 0; i &lt; len(s); i++ {\n        res = maxPalidrome(s, i, i, res)\n        res = maxPalidrome(s, i, i+1, res)\n    }\n    return res\n}\n\nfunc maxPalidrome(s string, i, j int, res string) string {\n    sub := \"\"\n    for i &gt;= 0 &amp;&amp; j &lt; len(s) &amp;&amp; s[i] == s[j] {\n        sub = s[i:j+1]\n        i--\n        j++\n    }\n\n    if len(res) &lt; len(sub) {\n        res = sub\n    }\n    return res\n}\n</code></pre> Python<pre><code>class Solution:\n    def longestPalindrome(self, s: str) -&gt; str:\n        \"\"\"\n        \u4ece[left, right]\u4e3a\u4e2d\u5fc3\u5411\u4e24\u7aef\u6269\u5c55\uff0c\u627e\u5230\u6700\u957f\u56de\u6587\u4e32\uff0c\u5e76\u8fd4\u56de\u6700\u5927\u957f\u5ea6\n        \"\"\"\n        def expand_search_longest(left: int, right: int):\n            n = len(s)\n            while left &gt;= 0 and right &lt; n and s[left] == s[right]:\n                left -= 1\n                right += 1\n            # \u9000\u51fa\u5faa\u73af\u65f6\uff0cright\u548cleft\u4e00\u5b9a\u662f\u6307\u5411\u4e0d\u662f\u56de\u6587\u4e32\u7684\u90e8\u5206\uff0c\u5373\u56de\u6587\u4e32\u4e3a[left + 1, right - 1]\n            return right - left - 1\n\n        n = len(s)\n        length = 1 # \u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\n        start = 0  # \u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\n        for i in range(n):\n            # \u679a\u4e3e\u6bcf\u4e2ai\u4e3a\u4e2d\u5fc3\u6269\u5c55\n            odd_len = expand_search_longest(i, i)      # \u4ee5i\u4e3a\u4e2d\u5fc3\u6269\u5c55\uff0c\u5f97\u5230\u5947\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32  \n            even_len = expand_search_longest(i, i+1)   # \u4ee5[i, i+1]\u4e3a\u4e2d\u5fc3\u6269\u5c55\uff0c\u5f97\u5230\u5076\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32  \n            local_max = max(odd_len, even_len)    # \u4ee5i\u4e3a\u4e2d\u5fc3\u6269\u5c55\u7684\u6700\u5927\u957f\u5ea6\n            if local_max &gt; length:\n                length = local_max\n                start = i - (local_max - 1) // 2     # \u6839\u636e\u4e2d\u5fc3\u70b9\u548c\u957f\u5ea6\u8ba1\u7b97\u8d77\u59cb\u70b9\n\n        return s[start: start + length] # \u622a\u53d6\u6700\u957f\u56de\u6587\u5b50\u4e32\n</code></pre>","boost":2},{"location":"leetcode/5/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n^2)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u957f\u5ea6\u4e3a 1 \u548c 2 \u7684\u56de\u6587\u4e2d\u5fc3\u5206\u522b\u6709 \\(n\\) \u548c \\(n\u22121\\) \u4e2a\uff0c\u6bcf\u4e2a\u56de\u6587\u4e2d\u5fc3\u6700\u591a\u4f1a\u5411\u5916\u6269\u5c55 \\(O(n)\\) \u6b21\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/5/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u753b\u56fe\u5c0f\u5320 5. \u6700\u957f\u56de\u6587\u5b50\u4e32</li> </ul>","boost":2},{"location":"leetcode/509/","title":"509. \u6590\u6ce2\u90a3\u5951\u6570","text":"","boost":2},{"location":"leetcode/509/#_1","title":"\u9898\u76ee","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570 \uff08\u901a\u5e38\u7528 <code>F(n)</code> \u8868\u793a\uff09\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u3002\u8be5\u6570\u5217\u7531 <code>0</code> \u548c <code>1</code> \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a</p> <p>F(0) = 0\uff0cF(1) = 1</p> <p>F(n) = F(n - 1) + F(n - 2)\uff0c\u5176\u4e2d n &gt; 1</p> <p>\u7ed9\u5b9a <code>n</code> \uff0c\u8bf7\u8ba1\u7b97 <code>F(n)</code> \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1an = 2</p> <p>\u8f93\u51fa\uff1a1</p> <p>\u89e3\u91ca\uff1aF(2) = F(1) + F(0) = 1 + 0 = 1</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1an = 3</p> <p>\u8f93\u51fa\uff1a2</p> <p>\u89e3\u91ca\uff1aF(3) = F(2) + F(1) = 1 + 1 = 2</p>","boost":2},{"location":"leetcode/509/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/509/#_3","title":"\u9898\u89e3","text":"<p>\u9012\u63a8\u516c\u5f0f <code>dp[i] = dp[i-1] + dp[i-2]</code></p> Go<pre><code>func fib(n int) int {\n    if n &lt;= 1 {\n        return n\n    }\n    dp0 := 0\n    dp1 := 1\n    for i := 2; i &lt;= n; i++ {\n        sum := dp0 + dp1\n        dp0 = dp1\n        dp1 = sum\n    }\n    return dp1\n}\n</code></pre> Python<pre><code>class Solution:\n    def fib(self, n: int) -&gt; int:\n        if n &lt;= 1:\n            return n\n\n        dp = [0, 1]\n\n        for i in range(2, n + 1):\n            total = dp[0] + dp[1]\n            dp[0] = dp[1]\n            dp[1] = total\n\n        return dp[1]\n</code></pre>","boost":2},{"location":"leetcode/51/","title":"51. N \u7687\u540e","text":"","boost":2},{"location":"leetcode/51/#_1","title":"\u9898\u76ee","text":"<p>\u6309\u7167\u56fd\u9645\u8c61\u68cb\u7684\u89c4\u5219\uff0c\u7687\u540e\u53ef\u4ee5\u653b\u51fb\u4e0e\u4e4b\u5904\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u6216\u540c\u4e00\u659c\u7ebf\u4e0a\u7684\u68cb\u5b50\u3002</p> <p>n \u7687\u540e\u95ee\u9898 \u7814\u7a76\u7684\u662f\u5982\u4f55\u5c06 <code>n</code> \u4e2a\u7687\u540e\u653e\u7f6e\u5728 <code>n\u00d7n</code> \u7684\u68cb\u76d8\u4e0a\uff0c\u5e76\u4e14\u4f7f\u7687\u540e\u5f7c\u6b64\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u653b\u51fb\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 <code>n</code> \uff0c\u8fd4\u56de\u6240\u6709\u4e0d\u540c\u7684 n \u7687\u540e\u95ee\u9898 \u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u6bcf\u4e00\u79cd\u89e3\u6cd5\u5305\u542b\u4e00\u4e2a\u4e0d\u540c\u7684 n \u7687\u540e\u95ee\u9898 \u7684\u68cb\u5b50\u653e\u7f6e\u65b9\u6848\uff0c\u8be5\u65b9\u6848\u4e2d <code>'Q'</code> \u548c <code>'.'</code> \u5206\u522b\u4ee3\u8868\u4e86\u7687\u540e\u548c\u7a7a\u4f4d\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1an = 4</p> <p>\u8f93\u51fa\uff1a[[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1an = 1</p> <p>\u8f93\u51fa\uff1a[[\"Q\"]]</p>","boost":2},{"location":"leetcode/51/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u56de\u6eaf</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n!)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/51/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func solveNQueens(n int) [][]string {\n    res := make([][]string, 0)\n    // init\n    chessboard := make([][]string, n)\n    for i := 0; i &lt; n; i++ {\n        chessboard[i] = make([]string, n)\n    }\n\n    for i := 0; i &lt; n; i++ {\n        for j := 0; j &lt; n; j++ {\n            chessboard[i][j] = \".\"\n        }\n    }\n\n    var backtrack func(row int)\n    backtrack = func(row int) {\n        if row == n {\n            tmp := make([]string, n)\n            for i, str := range chessboard {\n                tmp[i] = strings.Join(str, \"\")\n            }\n            res = append(res, tmp)\n            return\n        }\n\n        for col := 0; col &lt; n; i++ {\n            if IsValid(n, row, col, chessboard) {\n                chessboard[row][col] = \"Q\" // \u653e\u7f6e\u7687\u540e\n                backtrack(row+1)         //\n                chessboard[row][col] = \".\" // \u56de\u6eaf\u3001\u64a4\u9500\u7687\u540e\n            }\n        }\n    }\n    backtrack(0)\n    return res\n}\n\nfunc IsValid(n, row, col int, chessboard [][]string) bool {\n    for i := 0; i &lt; row; i++ {\n        if chessboard[i][col] == \"Q\" {  // \u68c0\u67e5\u5217\n            return false\n        }\n    }\n    for i, j := row-1, col-1; i &gt;= 0 &amp;&amp; j &gt;= 0; i, j = i-1, j-1 { // 45\u00b0\n        if chessboard[i][j] == \"Q\" {\n            return false\n        }\n    }\n    for i, j := row-1, col+1; i &gt;= 0 &amp;&amp; j &lt; n; i, j = i-1, j+1 {   // 135\u00b0\n        if chessboard[i][j] == \"Q\" {\n            return false\n        }\n    }\n    return true\n}\n</code></pre> Python<pre><code>class Solution:\n    def solveNQueens(self, n: int) -&gt; List[List[str]]:\n        result = []  # \u5b58\u50a8\u6700\u7ec8\u7ed3\u679c\u7684\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4\n\n        chessboard = ['.' * n for _ in range(n)]  # \u521d\u59cb\u5316\u68cb\u76d8\n        self.backtracking(n, 0, chessboard, result)  # \u56de\u6eaf\u6c42\u89e3\n        return [[''.join(row) for row in solution] for solution in result]  # \u8fd4\u56de\u7ed3\u679c\u96c6\n\n    def backtracking(self, n: int, row: int, chessboard: List[str], result: List[List[str]]) -&gt; None:\n        if row == n:\n            result.append(chessboard[:])  # \u68cb\u76d8\u586b\u6ee1\uff0c\u5c06\u5f53\u524d\u89e3\u52a0\u5165\u7ed3\u679c\u96c6\n            return\n\n        for col in range(n):\n            if self.isValid(row, col, chessboard):\n                chessboard[row] = chessboard[row][:col] + 'Q' + chessboard[row][col+1:]  # \u653e\u7f6e\u7687\u540e\n                self.backtracking(n, row + 1, chessboard, result)  # \u9012\u5f52\u5230\u4e0b\u4e00\u884c\n                chessboard[row] = chessboard[row][:col] + '.' + chessboard[row][col+1:]  # \u56de\u6eaf\uff0c\u64a4\u9500\u5f53\u524d\u4f4d\u7f6e\u7684\u7687\u540e\n\n    def isValid(self, row: int, col: int, chessboard: List[str]) -&gt; bool:\n        # \u68c0\u67e5\u5217\n        for i in range(row):\n            if chessboard[i][col] == 'Q':\n                return False  # \u5f53\u524d\u5217\u5df2\u7ecf\u5b58\u5728\u7687\u540e\uff0c\u4e0d\u5408\u6cd5\n\n        # \u68c0\u67e5 45 \u5ea6\u89d2\u662f\u5426\u6709\u7687\u540e\n        i, j = row - 1, col - 1\n        while i &gt;= 0 and j &gt;= 0:\n            if chessboard[i][j] == 'Q':\n                return False  # \u5de6\u4e0a\u65b9\u5411\u5df2\u7ecf\u5b58\u5728\u7687\u540e\uff0c\u4e0d\u5408\u6cd5\n            i -= 1\n            j -= 1\n\n        # \u68c0\u67e5 135 \u5ea6\u89d2\u662f\u5426\u6709\u7687\u540e\n        i, j = row - 1, col + 1\n        while i &gt;= 0 and j &lt; len(chessboard):\n            if chessboard[i][j] == 'Q':\n                return False  # \u53f3\u4e0a\u65b9\u5411\u5df2\u7ecf\u5b58\u5728\u7687\u540e\uff0c\u4e0d\u5408\u6cd5\n            i -= 1\n            j += 1\n\n        return True  # \u5f53\u524d\u4f4d\u7f6e\u5408\u6cd5\n</code></pre>","boost":2},{"location":"leetcode/543/","title":"543. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84","text":"","boost":2},{"location":"leetcode/543/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\uff0c\u8fd4\u56de\u8be5\u6811\u7684 \u76f4\u5f84 \u3002</p> <p>\u4e8c\u53c9\u6811\u7684 \u76f4\u5f84 \u662f\u6307\u6811\u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u6700\u957f\u8def\u5f84\u7684 \u957f\u5ea6 \u3002\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u7ecf\u8fc7\u4e5f\u53ef\u80fd\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9 <code>root</code> \u3002</p> <p>\u4e24\u8282\u70b9\u4e4b\u95f4\u8def\u5f84\u7684 \u957f\u5ea6 \u7531\u5b83\u4eec\u4e4b\u95f4\u8fb9\u6570\u8868\u793a\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,2,3,4,5]</p> <p>\u8f93\u51fa\uff1a3</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1aroot = [1,2]</p> <p>\u8f93\u51fa\uff1a1</p>","boost":2},{"location":"leetcode/543/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/543/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func diameterOfBinaryTree(root *TreeNode) int {\n    maxDia := 0\n    var dfs func(node *TreeNode) int\n    dfs = func(node *TreeNode) int {\n        if node == nil {\n            return -1\n        }\n\n        left := dfs(node.Left) + 1\n        right := dfs(node.Right) + 1\n        maxDia = max(maxDia, left+right)\n        return max(left, right)\n    }\n    dfs(root)\n    return maxDia\n}\n\nfunc max(a, b int) int {\n    if a &gt; b {\n        return a\n    }\n    return b\n}\n</code></pre> Python<pre><code>class Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -&gt; int:\n        ans = 0\n        def dfs(node):\n            if node is None:\n                return -1\n            l_len = dfs(node.left) + 1\n            r_len = dfs(node.right) + 1\n            nonlocal ans\n            ans = max(ans, l_len + r_len)\n            return max(l_len, r_len)\n        dfs(root)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/55/","title":"55. \u8df3\u8dc3\u6e38\u620f","text":"","boost":2},{"location":"leetcode/55/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4<code>nums</code> \uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807\u3002\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8fd4\u56de<code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de<code>false</code>\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1anums = [2,3,1,1,4]</p> <p>\u8f93\u51fa\uff1atrue</p> <p>\u89e3\u91ca\uff1a\u53ef\u4ee5\u5148\u8df3 1 \u6b65\uff0c\u4ece\u4e0b\u6807 0 \u5230\u8fbe\u4e0b\u6807 1, \u7136\u540e\u518d\u4ece\u4e0b\u6807 1 \u8df3 3 \u6b65\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1anums = [3,2,1,0,4]</p> <p>\u8f93\u51fa\uff1afalse</p> <p>\u89e3\u91ca\uff1a\u65e0\u8bba\u600e\u6837\uff0c\u603b\u4f1a\u5230\u8fbe\u4e0b\u6807\u4e3a 3 \u7684\u4f4d\u7f6e\u3002\u4f46\u8be5\u4e0b\u6807\u7684\u6700\u5927\u8df3\u8dc3\u957f\u5ea6\u662f 0 \uff0c \u6240\u4ee5\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002</p>","boost":2},{"location":"leetcode/55/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(nums\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/55/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func canJump(nums []int) bool {\n    mx := 0\n    for i, jump := range nums {\n        if i &gt; mx { // \u65e0\u6cd5\u5230\u8fbe i\n            return false\n        }\n        mx = max(mx, i + jump) // \u4ece i \u6700\u53f3\u53ef\u4ee5\u8df3\u5230 i + jump\n    }\n    return true\n}\n\nfunc max(x, y int) int {\n    if x &gt; y {\n        return x\n    }\n    return y\n}\n</code></pre> Python<pre><code>class Solution:\n    def canJump(self, nums: List[int]) -&gt; bool:\n        mx = 0\n        for i, jump in enumerate(nums):\n            if i &gt; mx: # \u65e0\u6cd5\u5230\u8fbe i\n                return False\n            mx = max(mx, i + jump)\n        return True\n</code></pre>","boost":2},{"location":"leetcode/55/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 55. \u8df3\u8dc3\u6e38\u620f</li> </ul>","boost":2},{"location":"leetcode/56/","title":"56. \u5408\u5e76\u533a\u95f4","text":"","boost":2},{"location":"leetcode/56/#_1","title":"\u9898\u76ee","text":"<p>\u4ee5\u6570\u7ec4 <code>intervals</code> \u8868\u793a\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5355\u4e2a\u533a\u95f4\u4e3a <code>intervals[i] = [start_i, end_i]</code> \u3002\u8bf7\u4f60\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u5e76\u8fd4\u56de \u4e00\u4e2a\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u9700\u6070\u597d\u8986\u76d6\u8f93\u5165\u4e2d\u7684\u6240\u6709\u533a\u95f4 \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: <code>intervals = [[1,3],[2,6],[8,10],[15,18]]</code></p> <p>\u8f93\u51fa: <code>[[1,6],[8,10],[15,18]]</code></p> <p>\u89e3\u91ca: \u533a\u95f4 <code>[1,3]</code> \u548c <code>[2,6]</code> \u91cd\u53e0, \u5c06\u5b83\u4eec\u5408\u5e76\u4e3a <code>[1,6]</code>.</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: <code>intervals = [[1,4],[4,5]]</code></p> <p>\u8f93\u51fa: <code>[[1,5]]</code></p> <p>\u89e3\u91ca: \u533a\u95f4 <code>[1,4]</code> \u548c <code>[4,5]</code> \u53ef\u88ab\u89c6\u4e3a\u91cd\u53e0\u533a\u95f4\u3002</p>","boost":2},{"location":"leetcode/56/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func merge(intervals [][]int) (ans [][]int) {\n    slices.SortFunc(intervals, func(p, q []int) int { return p[0] - q[0] }) // \u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    for _, p := range intervals {\n        m := len(ans)\n        if m &gt; 0 &amp;&amp; p[0] &lt;= ans[m-1][1] { // \u53ef\u4ee5\u5408\u5e76\n            ans[m-1][1] = max(ans[m-1][1], p[1]) // \u66f4\u65b0\u53f3\u7aef\u70b9\u6700\u5927\u503c\n        } else { // \u4e0d\u76f8\u4ea4\uff0c\u65e0\u6cd5\u5408\u5e76\n            ans = append(ans, p) // \u65b0\u7684\u5408\u5e76\u533a\u95f4\n        }\n    }\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def merge(self, intervals: List[List[int]]) -&gt; List[List[int]]:\n        intervals.sort(key=lambda p: p[0])  # \u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n        ans = []\n        for p in intervals:\n            if ans and p[0] &lt;= ans[-1][1]:  # \u53ef\u4ee5\u5408\u5e76\n                ans[-1][1] = max(ans[-1][1], p[1])  # \u66f4\u65b0\u53f3\u7aef\u70b9\u6700\u5927\u503c\n            else:  # \u4e0d\u76f8\u4ea4\uff0c\u65e0\u6cd5\u5408\u5e76\n                ans.append(p)  # \u65b0\u7684\u5408\u5e76\u533a\u95f4\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/56/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n \\ logn)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(intervals\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(1)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/56/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 56. \u5408\u5e76\u533a\u95f4</li> </ul>","boost":2},{"location":"leetcode/59/","title":"59. \u87ba\u65cb\u77e9\u9635II","text":"","boost":2},{"location":"leetcode/59/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 <code>n</code> \uff0c\u751f\u6210\u4e00\u4e2a\u5305\u542b <code>1</code> \u5230 \\(n^2\\) \u6240\u6709\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6309\u987a\u65f6\u9488\u987a\u5e8f\u87ba\u65cb\u6392\u5217\u7684 <code>n x n</code> \u6b63\u65b9\u5f62\u77e9\u9635 <code>matrix</code> \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1an = 3</p> <p>\u8f93\u51fa\uff1a<code>[[1,2,3],[8,9,4],[7,6,5]]</code></p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1an = 1</p> <p>\u8f93\u51fa\uff1a<code>[[1]]</code></p> <p>\u63d0\u793a\uff1a</p> <ul> <li>\\(1 &lt;= n &lt;= 20\\)</li> </ul>","boost":2},{"location":"leetcode/59/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func generateMatrix(n int) [][]int {\n    matrix := make([][]int, n)\n    for i := range matrix {\n        matrix[i] = make([]int, n)\n    }\n    num := 1\n    left, right, top, bottom := 0, n-1, 0, n-1 // 4 boundaries of the matrix\n    for num &lt;= n*n {                           // Until num &gt; n * n, end the traversal.\n        for i := left; i &lt;= right; i++ { // top layer\n            matrix[top][i] = num\n            num++\n        }\n        top++                            // move to next layer\n        for i := top; i &lt;= bottom; i++ { // right layer\n            matrix[i][right] = num\n            num++\n        }\n        right--\n        for i := right; i &gt;= left; i-- { // bottom layer\n            matrix[bottom][i] = num\n            num++\n        }\n        bottom--\n        for i := bottom; i &gt;= top; i-- { // left layer\n            matrix[i][left] = num\n            num++\n        }\n        left++\n    }\n    return matrix\n}\n</code></pre> Python<pre><code>class Solution:\n    def generateMatrix(self, n: int) -&gt; [[int]]:\n        l, r, t, b = 0, n - 1, 0, n - 1\n        matrix = [[0 for _ in range(n)] for _ in range(n)]\n        num, tar = 1, n * n\n        while num &lt;= tar:\n            for i in range(l, r + 1): # left to right\n                matrix[t][i] = num\n                num += 1\n            t += 1\n            for i in range(t, b + 1): # top to bottom\n                matrix[i][r] = num\n                num += 1\n            r -= 1\n            for i in range(r, l - 1, -1): # right to left\n                matrix[b][i] = num\n                num += 1\n            b -= 1\n            for i in range(b, t - 1, -1): # bottom to top\n                matrix[i][l] = num\n                num += 1\n            l += 1\n        return matrix\n</code></pre>","boost":2},{"location":"leetcode/59/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/653/","title":"653. \u4e24\u6570\u4e4b\u548c IV - \u8f93\u5165\u4e8c\u53c9\u641c\u7d22\u6811","text":"","boost":2},{"location":"leetcode/653/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811 <code>root</code> \u548c\u4e00\u4e2a\u76ee\u6807\u7ed3\u679c <code>k</code>\uff0c\u5982\u679c\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u5b58\u5728\u4e24\u4e2a\u5143\u7d20\u4e14\u5b83\u4eec\u7684\u548c\u7b49\u4e8e\u7ed9\u5b9a\u7684\u76ee\u6807\u7ed3\u679c\uff0c\u5219\u8fd4\u56de <code>true</code>\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165: root = [5,3,6,2,4,null,7], k = 9</p> <p>\u8f93\u51fa: true</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165: root = [5,3,6,2,4,null,7], k = 28</p> <p>\u8f93\u51fa: false</p>","boost":2},{"location":"leetcode/653/#_2","title":"\u9898\u89e3","text":"<p>\u4e2d\u5e8f\u904d\u5386+\u53cc\u6307\u9488</p> <p>\u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u5347\u5e8f\u6570\u7ec4\u3002\u4e4b\u540e\u4f7f\u7528\u53cc\u6307\u9488\u786e\u5b9a\u662f\u5426\u5b58\u5728 <code>nums[i] + nums[j] = k</code>\u3002</p> Go<pre><code>func findTarget(root *TreeNode, k int) bool {\n    arr := []int{}\n    var inorderTraversal func(*TreeNode)\n    inorderTraversal = func(node *TreeNode) {\n        if node != nil {\n            inorderTraversal(node.Left)\n            arr = append(arr, node.Val)\n            inorderTraversal(node.Right)\n        }\n    }\n    inorderTraversal(root)\n\n    left, right := 0, len(arr)-1\n    for left &lt; right {\n        sum := arr[left] + arr[right]\n        if sum == k {\n            return true\n        }\n        if sum &lt; k {\n            left++\n        } else {\n            right--\n        }\n    }\n    return false\n}\n</code></pre> Python<pre><code># Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findTarget(self, root: Optional[TreeNode], k: int) -&gt; bool:\n        arr = []\n\n        def inorder_traversal(node: Optional[TreeNode]) -&gt; None:\n            \"\"\"\u4e2d\u5e8f\u904d\u5386\"\"\"\n            if node:\n                inorder_traversal(node.left)\n                arr.append(node.val)\n                inorder_traversal(node.right)\n\n        inorder_traversal(root)\n\n        left, right = 0, len(arr) - 1\n        while left &lt; right:\n            _sum = arr[left] + arr[right]\n            if _sum == k:\n                return True\n\n            if _sum &lt; k:\n                left += 1\n            else:\n                right -= 1\n\n        return False\n</code></pre>","boost":2},{"location":"leetcode/653/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5927\u5c0f\u3002\u9700\u8981\u904d\u5386\u6574\u68f5\u6811\u4e00\u6b21\uff0c\u5e76\u5bf9\u5f97\u5230\u7684\u5347\u5e8f\u6570\u7ec4\u4f7f\u7528\u53cc\u6307\u9488\u904d\u5386\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\u3002\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5927\u5c0f\u3002\u4e3b\u8981\u4e3a\u5347\u5e8f\u6570\u7ec4\u7684\u5f00\u9500\u3002</li> </ul>","boost":2},{"location":"leetcode/653/#_4","title":"\u53c2\u8003","text":"<ul> <li>LeetCode\u5b98\u65b9\u9898\u89e3 653. \u4e24\u6570\u4e4b\u548c IV - \u8f93\u5165 BST</li> </ul>","boost":2},{"location":"leetcode/662/","title":"662. \u4e8c\u53c9\u6811\u6700\u5927\u5bbd\u5ea6","text":"","boost":2},{"location":"leetcode/662/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u8fd4\u56de\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002</p> <p>\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u662f\u6240\u6709\u5c42\u4e2d\u6700\u5927\u7684\u5bbd\u5ea6\u3002</p> <p>\u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u8be5\u5c42\u6700\u5de6\u548c\u6700\u53f3\u7684\u975e\u7a7a\u8282\u70b9\uff08\u5373\uff0c\u4e24\u4e2a\u7aef\u70b9\uff09\u4e4b\u95f4\u7684\u957f\u5ea6\u3002\u5c06\u8fd9\u4e2a\u4e8c\u53c9\u6811\u89c6\u4f5c\u4e0e\u6ee1\u4e8c\u53c9\u6811\u7ed3\u6784\u76f8\u540c\uff0c\u4e24\u7aef\u70b9\u95f4\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5ef6\u4f38\u5230\u8fd9\u4e00\u5c42\u7684 <code>null</code> \u8282\u70b9\uff0c\u8fd9\u4e9b <code>null</code> \u8282\u70b9\u4e5f\u8ba1\u5165\u957f\u5ea6\u3002</p> <p>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u5c06\u4f1a\u572832 \u4f4d\u5e26\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</p> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,3,2,5,3,null,9]</p> <p>\u8f93\u51fa\uff1a7</p> <p>\u89e3\u91ca\uff1a\u6700\u5927\u5bbd\u5ea6\u51fa\u73b0\u5728\u6811\u7684\u7b2c 4 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 7 (6,null,null,null,null,null,7) \u3002</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,3,2,5,null,null,9,6,null,7]</p> <p>\u8f93\u51fa\uff1a5</p> <p>\u793a\u4f8b 3:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [1,3,2,5]</p> <p>\u8f93\u51fa\uff1a2</p> <p>\u89e3\u91ca\uff1a\u6700\u5927\u5bbd\u5ea6\u51fa\u73b0\u5728\u6811\u7684\u7b2c 2 \u5c42\uff0c\u5bbd\u5ea6\u4e3a 2 (3,2) \u3002</p>","boost":2},{"location":"leetcode/662/#_2","title":"\u9898\u89e3","text":"Go<pre><code>/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc widthOfBinaryTree(root *TreeNode) (ans int) {\n    queue := []Pair{Pair{1, root}}\n    for size := len(queue); size &gt; 0; size = len(queue) {\n        min, max := 0, 0\n        for i := 0; i &lt; size; i++ {\n            pair := queue[i]\n            code, node := pair.Code, pair.Node\n            if i == 0 {\n                min = code\n            }\n            if i == size - 1 {\n                max = code\n            }\n            if node.Left != nil {\n                queue = append(queue, Pair{code &lt;&lt; 1, node.Left})\n            }\n            if node.Right != nil {\n                queue = append(queue, Pair{(code &lt;&lt; 1) + 1, node.Right})\n            }\n        }\n        queue = queue[size:]\n        if d := max - min + 1; d &gt; ans {\n            ans = d\n        }\n    }\n    return\n}\n\ntype Pair struct {\n    Code int\n    Node *TreeNode\n}\n</code></pre> Python<pre><code># Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def widthOfBinaryTree(self, root: Optional[TreeNode]) -&gt; int:\n        ans, queue = 0, deque([(1, root)])\n        while queue:\n            mn, mx = inf, 0\n            for _ in range(len(queue)):\n                code, node = queue.popleft()\n                if node.left:\n                    queue.append((code * 2, node.left))\n                if node.right:\n                    queue.append((code * 2 + 1, node.right))\n                mn, mx = min(code, mn), max(code, mx)\n            ans = max(ans, mx - mn + 1)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/662/#_3","title":"\u601d\u8def","text":"<ol> <li>\u4f7f\u7528\u961f\u5217\u8fdb\u884c BFS \u904d\u5386\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u5176 \u7d22\u5f15\uff08\u5047\u8bbe\u6839\u8282\u70b9\u7d22\u5f15\u4e3a 0\uff09\u3002</li> <li>\u904d\u5386\u6bcf\u4e00\u5c42\u65f6\uff1a<ul> <li>\u8bb0\u5f55\u8be5\u5c42\u7684\u6700\u5de6\u8282\u70b9\u7d22\u5f15\u548c\u6700\u53f3\u8282\u70b9\u7d22\u5f15\u3002</li> <li>\u5bbd\u5ea6\u8ba1\u7b97\u516c\u5f0f\uff1a<code>\u5f53\u524d\u5c42\u5bbd\u5ea6 = \u6700\u53f3\u7d22\u5f15 - \u6700\u5de6\u7d22\u5f15 + 1</code>\u3002</li> <li>\u904d\u5386\u5b50\u8282\u70b9\u65f6\uff0c\u5de6\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * index</code>\uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * index + 1</code>\u3002</li> </ul> </li> <li>\u53d6\u6240\u6709\u5c42\u4e2d\u7684\u6700\u5927\u5bbd\u5ea6\u3002</li> </ol>","boost":2},{"location":"leetcode/662/#_4","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> </ul>","boost":2},{"location":"leetcode/662/#_5","title":"\u53c2\u8003","text":"<ul> <li>Benhao - 662. \u4e8c\u53c9\u6811\u6700\u5927\u5bbd\u5ea6</li> </ul>","boost":2},{"location":"leetcode/704/","title":"704. \u4e8c\u5206\u67e5\u627e","text":"","boost":2},{"location":"leetcode/704/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u5143\u7d20\u6709\u5e8f\u7684\uff08\u5347\u5e8f\uff09\u6574\u578b\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target \uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u641c\u7d22 nums \u4e2d\u7684 target\uff0c\u5982\u679c\u76ee\u6807\u503c\u5b58\u5728\u8fd4\u56de\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de -1\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 9</p> <p>\u8f93\u51fa: 4</p> <p>\u89e3\u91ca: 9 \u51fa\u73b0\u5728 nums \u4e2d\u5e76\u4e14\u4e0b\u6807\u4e3a 4</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: nums = [-1,0,3,5,9,12], target = 2</p> <p>\u8f93\u51fa: -1</p> <p>\u89e3\u91ca: 2 \u4e0d\u5b58\u5728 nums \u4e2d\u56e0\u6b64\u8fd4\u56de -1</p>","boost":2},{"location":"leetcode/704/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(log \\ n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/704/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func search(nums []int, target int) int {\n    left, right := 0, len(nums) - 1\n\n    for left &lt;= right {\n        mid := left + (right - left) / 2\n\n        if nums[mid] &gt; target{\n            right = mid - 1\n        } else if nums[mid] &lt; target {\n            left = mid + 1\n        } else {\n            return mid\n        }\n    }\n    return -1\n}\n</code></pre> Python<pre><code>class Solution:\n    def search(self, nums: List[int], target: int) -&gt; int:\n        left, right = 0, len(nums) - 1  # \u5b9a\u4e49target\u5728\u5de6\u95ed\u53f3\u95ed\u7684\u533a\u95f4\u91cc\uff0c[left, right]\n\n        while left &lt;= right:\n            middle = left + (right - left) // 2\n\n            if nums[middle] &gt; target:\n                right = middle - 1  # target\u5728\u5de6\u533a\u95f4\uff0c\u6240\u4ee5[left, middle - 1]\n            elif nums[middle] &lt; target:\n                left = middle + 1  # target\u5728\u53f3\u533a\u95f4\uff0c\u6240\u4ee5[middle + 1, right]\n            else:\n                return middle  # \u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\u4e0b\u6807\n        return -1  # \u672a\u627e\u5230\u76ee\u6807\u503c\n</code></pre>","boost":2},{"location":"leetcode/763/","title":"763. \u5212\u5206\u5b57\u6bcd\u533a\u95f4","text":"","boost":2},{"location":"leetcode/763/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\u3002\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5\uff0c\u540c\u4e00\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002</p> <p>\u6ce8\u610f\uff0c\u5212\u5206\u7ed3\u679c\u9700\u8981\u6ee1\u8db3\uff1a\u5c06\u6240\u6709\u5212\u5206\u7ed3\u679c\u6309\u987a\u5e8f\u8fde\u63a5\uff0c\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u4ecd\u7136\u662f<code>s</code>\u3002</p> <p>\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7247\u6bb5\u7684\u957f\u5ea6\u7684\u5217\u8868\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: s = \"ababcbacadefegdehijhklij\"</p> <p>\u8f93\u51fa: [9,7,8]</p> <p>\u89e3\u91ca: \u5212\u5206\u7ed3\u679c\u4e3a \"ababcbaca\"\u3001\"defegde\"\u3001\"hijhklij\" \u3002\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\u50cf \"ababcbacadefegde\", \"hijhklij\" \u8fd9\u6837\u7684\u5212\u5206\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5212\u5206\u7684\u7247\u6bb5\u6570\u8f83\u5c11\u3002 </p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: s = \"eccbbbbdec\"</p> <p>\u8f93\u51fa: 10</p>","boost":2},{"location":"leetcode/763/#_2","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u662f \\(s\\) \u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(|\\Sigma|)\\)\u3002\u5176\u4e2d \\(|\\Sigma|\\) \u662f\u5b57\u7b26\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u672c\u9898\u5b57\u7b26\u5747\u4e3a\u5c0f\u5199\u5b57\u6bcd\uff0c\u6240\u4ee5 \\(|\\Sigma|=26\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/763/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func partitionLabels(s string) (ans []int) {\n    last := [26]int{}\n    for i, c := range s {\n        last[c-'a'] = i // \u6bcf\u4e2a\u5b57\u6bcd\u6700\u540e\u51fa\u73b0\u7684\u4e0b\u6807\n    }\n\n    start, end := 0, 0\n    for i, c := range s {\n        end = max(end, last[c-'a']) // \u66f4\u65b0\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\n        if end == i { // \u5f53\u524d\u533a\u95f4\u5408\u5e76\u5b8c\u6bd5\n            ans = append(ans, end - start + 1) // \u533a\u95f4\u957f\u5ea6\u52a0\u5165\u7b54\u6848\n            start = i + 1 // \u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n        }\n    }\n    return\n}\n</code></pre> Python<pre><code>class Solution:\n    def partitionLabels(self, s: str) -&gt; List[int]:\n        last = {c: i for i, c in enumerate(s)}  # \u6bcf\u4e2a\u5b57\u6bcd\u6700\u540e\u51fa\u73b0\u7684\u4e0b\u6807\n        ans = []\n        start = end = 0\n        for i, c in enumerate(s):\n            end = max(end, last[c])  # \u66f4\u65b0\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u6700\u5927\u503c\n            if end == i:  # \u5f53\u524d\u533a\u95f4\u5408\u5e76\u5b8c\u6bd5\n                ans.append(end - start + 1)  # \u533a\u95f4\u957f\u5ea6\u52a0\u5165\u7b54\u6848\n                start = i + 1  # \u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/763/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 763. \u5212\u5206\u5b57\u6bcd\u533a\u95f4</li> </ul>","boost":2},{"location":"leetcode/78/","title":"78. \u5b50\u96c6","text":"","boost":2},{"location":"leetcode/78/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 \u4e92\u4e0d\u76f8\u540c \u3002\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002</p> <p>\u89e3\u96c6 \u4e0d\u80fd \u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002\u4f60\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u89e3\u96c6\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: nums = [1,2,3]</p> <p>\u8f93\u51fa: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: nums = [0]</p> <p>\u8f93\u51fa: [[],[0]]</p>","boost":2},{"location":"leetcode/78/#_2","title":"\u9898\u89e3","text":"Go<pre><code>func subsets(nums []int) [][]int {\n    n := len(nums)\n    ans := make([][]int, 0, 1&lt;&lt;n) // \u9884\u5206\u914d\u7a7a\u95f4\n    path := make([]int, 0, n) // \u9884\u5206\u914d\u7a7a\u95f4\n    var dfs func(int)\n    dfs = func(i int) {\n        if i == n { // \u5b50\u96c6\u6784\u9020\u5b8c\u6bd5\n            ans = append(ans, slices.Clone(path)) // \u590d\u5236 path\n            return\n        }\n\n        // \u4e0d\u9009 nums[i]\n        dfs(i + 1)\n\n        // \u9009 nums[i]\n        path = append(path, nums[i])\n        dfs(i + 1)\n        path = path[:len(path)-1] // \u6062\u590d\u73b0\u573a\n    }\n    dfs(0)\n    return ans\n}\n</code></pre> Python<pre><code>class Solution:\n    def subsets(self, nums: List[int]) -&gt; List[List[int]]:\n        ans = []\n        path = []\n        n = len(nums)\n\n        def dfs(i: int) -&gt; None:\n            if i == n: # \u8fb9\u754c\u6761\u4ef6\n                ans.append(path.copy()) # copy, path[:]\n                return\n\n            dfs(i + 1) # \u4e0d\u9009\u62e9 nums[i]\n\n            path.append(nums[i]) # \u9009\u62e9 nums[i]\n            dfs(i + 1)\n            path.pop() # \u6062\u590d\n\n\n        dfs(0)\n        return ans\n</code></pre>","boost":2},{"location":"leetcode/78/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6: \\(O(n \\ 2^n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(nums\\) \u7684\u957f\u5ea6\u3002\u6bcf\u6b21\u90fd\u662f\u9009\u6216\u4e0d\u9009\uff0c\u9012\u5f52\u6b21\u6570\u4e3a\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u4e00\u5171\u4f1a\u9012\u5f52 \\(O(2^n)\\) \u6b21\uff08\u7b49\u6bd4\u6570\u5217\u548c\uff09\uff0c\u518d\u7b97\u4e0a\u52a0\u5165\u7b54\u6848\u65f6\u590d\u5236 path \u9700\u8981 \\(O(n)\\) \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\ 2^n)\\)\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6: \\(O(n)\\)\u3002</li> </ul>","boost":2},{"location":"leetcode/78/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 78. \u5b50\u96c6</li> </ul>","boost":2},{"location":"leetcode/82/","title":"82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II","text":"","boost":2},{"location":"leetcode/82/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868\u7684\u5934 <code>head</code> \uff0c \u5220\u9664\u539f\u59cb\u94fe\u8868\u4e2d\u6240\u6709\u91cd\u590d\u6570\u5b57\u7684\u8282\u70b9\uff0c\u53ea\u7559\u4e0b\u4e0d\u540c\u7684\u6570\u5b57 \u3002\u8fd4\u56de \u5df2\u6392\u5e8f\u7684\u94fe\u8868 \u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1a<code>head = [1,2,3,3,4,4,5]</code></p> <p>\u8f93\u51fa\uff1a[1,2,5]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1a<code>head = [1,1,1,2,3]</code></p> <p>\u8f93\u51fa\uff1a[2,3]</p>","boost":2},{"location":"leetcode/82/#_2","title":"\u601d\u8def","text":"<p>\u865a\u62df\u5934\u7ed3\u70b9</p>","boost":2},{"location":"leetcode/82/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func deleteDuplicates(head *ListNode) *ListNode {\n    dummy := &amp;ListNode{Next: head}\n    cur := dummy\n    for cur.Next != nil &amp;&amp; cur.Next.Next != nil {\n        val := cur.Next.Val\n        if cur.Next.Next.Val == val {\n            for cur.Next != nil &amp;&amp; cur.Next.Val == val {\n                cur.Next = cur.Next.Next\n            }\n        } else {\n            cur = cur.Next\n        }\n    }\n    return dummy.Next\n}\n</code></pre> Python<pre><code>class Solution:\n    def deleteDuplicates(self, head: Optional[ListNode]) -&gt; Optional[ListNode]:\n        cur = dummy = ListNode(next=head)\n        while cur.next and cur.next.next:\n            val = cur.next.val\n            if cur.next.next.val == val:\n                while cur.next and cur.next.val == val:\n                    cur.next = cur.next.next\n            else:\n                cur = cur.next\n        return dummy.next\n</code></pre>","boost":2},{"location":"leetcode/82/#_4","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\), \u5176\u4e2d \\(n\\) \u4e3a\u94fe\u8868\u7684\u957f\u5ea6\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\), \u4ec5\u7528\u5230\u82e5\u5e72\u989d\u5916\u53d8\u91cf\u3002</li> </ul>","boost":2},{"location":"leetcode/82/#_5","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c-82. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II</li> </ul>","boost":2},{"location":"leetcode/977/","title":"977. \u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9","text":"","boost":2},{"location":"leetcode/977/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4 <code>nums</code>\uff0c\u8fd4\u56de \u6bcf\u4e2a\u6570\u5b57\u7684\u5e73\u65b9 \u7ec4\u6210\u7684\u65b0\u6570\u7ec4\uff0c\u8981\u6c42\u4e5f\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5e8f\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1anums = [-4,-1,0,3,10]</p> <p>\u8f93\u51fa\uff1a[0,1,9,16,100]</p> <p>\u89e3\u91ca\uff1a\u5e73\u65b9\u540e\uff0c\u6570\u7ec4\u53d8\u4e3a [16,1,0,9,100]. \u6392\u5e8f\u540e\uff0c\u6570\u7ec4\u53d8\u4e3a [0,1,9,16,100]</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165\uff1anums = [-7,-3,2,3,11]</p> <p>\u8f93\u51fa\uff1a[4,9,9,49,121]</p>","boost":2},{"location":"leetcode/977/#_2","title":"\u9898\u89e3","text":"<p>\u53cc\u6307\u9488</p> Go<pre><code>func sortedSquares(nums []int) []int {\n    n := len(nums)\n    i, j, k := 0, n - 1, n - 1\n    ans := make([]int, n)\n    for i &lt;= j {\n        lm, rm := nums[i]*nums[i], nums[j]*nums[j]\n        if lm &gt; rm {\n            ans[k] = lm\n            i++\n        } else {\n            ans[k] = rm\n            j--\n        }\n        k--\n    }\n    return ans\n}\n</code></pre> Python<pre><code>class Solution:\n    def sortedSquares(self, nums: List[int]) -&gt; List[int]:\n        l, r, i = 0, len(nums) - 1, len(nums) - 1\n        res = [float('inf')] * len(nums) # \u9700\u8981\u63d0\u524d\u5b9a\u4e49\u5217\u8868\uff0c\u5b58\u653e\u7ed3\u679c\n        while l &lt;= r:\n            if nums[l] ** 2 &lt; nums[r] ** 2: # \u5de6\u53f3\u8fb9\u754c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u627e\u51fa\u6700\u5927\u503c\n                res[i] = nums[r] ** 2\n                r -= 1 # \u53f3\u6307\u9488\u5f80\u5de6\u79fb\u52a8\n            else:\n                res[i] = nums[l] ** 2\n                l += 1 # \u5de6\u6307\u9488\u5f80\u53f3\u79fb\u52a8\n            i -= 1 # \u5b58\u653e\u7ed3\u679c\u7684\u6307\u9488\u9700\u8981\u5f80\u524d\u5e73\u79fb\u4e00\u4f4d\n        return res\n</code></pre>","boost":2},{"location":"leetcode/977/#_3","title":"\u590d\u6742\u5ea6","text":"<ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>","boost":2},{"location":"leetcode/98/","title":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811","text":"","boost":2},{"location":"leetcode/98/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 <code>root</code> \uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p> <p>\u6709\u6548 \u4e8c\u53c9\u641c\u7d22\u6811\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u8282\u70b9\u7684\u5de6\u5b50\u6811 \u53ea\u5305\u542b \u5c0f\u4e8e \u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li> <li>\u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b \u5927\u4e8e \u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li> <li>\u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li> </ul> <p>\u793a\u4f8b 1:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [2,1,3]</p> <p>\u8f93\u51fa\uff1atrue</p> <p>\u793a\u4f8b 2:</p> <p></p> <p>\u8f93\u5165\uff1aroot = [5,1,4,null,null,3,6]</p> <p>\u8f93\u51fa\uff1afalse</p>","boost":2},{"location":"leetcode/98/#_2","title":"\u590d\u6742\u5ea6","text":"<p>\u524d\u5e8f\u904d\u5386</p> <ul> <li> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002</li> <li> \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\u3002\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u9700\u8981 \\(O(n)\\) \u7684\u6808\u7a7a\u95f4\u3002</li> </ul>","boost":2},{"location":"leetcode/98/#_3","title":"\u9898\u89e3","text":"Go<pre><code>func isValidBST(root *TreeNode) bool {\n    return checkBST(root, math.MinInt64, math.MaxInt64)\n}\n\nfunc checkBST(node *TreeNode, min, max int) bool {\n    if node == nil {\n        return true\n    }\n\n    x := node.Val\n    return min &lt; x &amp;&amp; x &lt; max &amp;&amp;\n        checkBST(node.Left, min, x) &amp;&amp;\n        checkBST(node.Right, x, max)\n}\n</code></pre> Python<pre><code>class Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -&gt; bool:\n        def checkBST(node: Optional[TreeNode], left=-inf, right=inf) -&gt; bool:\n            if node is None:\n                return True\n            x = node.val\n            return left &lt; x &lt; right and \\\n                checkBST(node.left, left, x) and \\\n                checkBST(node.right, x, right)\n\n        return checkBST(root)\n</code></pre>","boost":2},{"location":"leetcode/98/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u7075\u8336\u5c71\u827e\u5e9c 98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul>","boost":2},{"location":"leetcode/binary_tree/","title":"\u57fa\u7840","text":"","boost":2},{"location":"leetcode/binary_tree/#_1","title":"\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386","text":"<pre><code>// Recursion\nfunc preorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    res := []int{}\n    var preOrder func(*TreeNode)\n    preOrder = func(root *TreeNode) {\n        if root == nil {\n            return\n        }\n        res = append(res, root.Val)  // root\n        preOrder(root.Left)          // left\n        preOrder(root.Right)         // right\n    }\n    preOrder(root)\n    return res\n}\n\n// Iterate\nfunc preorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    if root == nil {\n        return nil\n    }\n\n    res := make([]int, 0)\n    stack := make([]*TreeNode, 0)\n    for len(stack) &gt; 0 || root != nil {\n        for root != nil {\n            res = append(res, root.Val)     // root\n            stack = append(stack, root)\n            root = root.Left                // left\n        }\n        // pop\n        node := stack[len(stack)-1]\n        stack = stack[:len(stack)-1]\n        root = node.Right                  // right\n    }\n    return res\n}\n</code></pre>","boost":2},{"location":"leetcode/binary_tree/#_2","title":"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386","text":"<pre><code>// Recursion\nfunc inorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    res := []int{}\n    var inorder func(*TreeNode)\n    inorder = func(root *TreeNode) {\n        if root == nil {\n            return\n        }\n        inorder(root.Left)          // left\n        res = append(res, root.Val)  // root\n        inorder(root.Right)         // right\n    }\n    inorder(root)\n    return res\n}\n\n// Iterate\nfunc inorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    if root == nil {\n        return nil\n    }\n\n    res := make([]int, 0)\n    stack := make([]*TreeNode, 0)\n    for len(stack) &gt; 0 || root != nil {\n        for root != nil {\n            stack = append(stack, root)\n            root = root.Left            // left\n        }\n        node := stack[len(stack)-1]\n        stack = stack[:len(stack)-1]\n        res = append(res, node.Val)    // root\n        root = node.Right              // right\n    }\n\n    return res\n}\n</code></pre>","boost":2},{"location":"leetcode/binary_tree/#_3","title":"\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386","text":"<pre><code>// Recursion\nfunc postorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    res := []int{}\n    var postorder func(*TreeNode)\n    postorder = func(root *TreeNode) {\n        if root == nil {\n            return\n        }\n        postorder(root.Left)          // left\n        postorder(root.Right)         // right\n        res = append(res, root.Val)   // root\n    }\n    postorder(root)\n    return res\n}\n\n// Iterate\nfunc postorderTraversal(root *TreeNode) []int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    if root == nil {\n        return nil\n    }\n\n    res := make([]int, 0)\n    stack := make([]*TreeNode, 0)\n    // will check if right node has been pop\n    var lastVisit *TreeNode\n    for len(stack) &gt; 0 || root != nil {\n        for root != nil {\n            stack = append(stack, root)\n            root = root.Left                                // left\n        }\n\n        node := stack[len(stack)-1]\n        // root will pop after right node\n        if node.Right == nil || node.Right == lastVisit {\n            stack = stack[:len(stack)-1]\n            res = append(res, node.Val)                   // root\n            lastVisit = node\n        } else {\n            root = node.Right                             // right\n        }\n    }\n    return res\n}\n</code></pre>","boost":2},{"location":"leetcode/binary_tree/#_4","title":"\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","text":"<pre><code>// Recursion (BFS)\nfunc levelorder(root *TreeNode) [][]int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    res := [][]int{}\n    var bfs func(node *TreeNode, dep int)\n    bfs = func(node *TreeNode, dep int) {\n        if node == nil {\n            return\n        }\n        if len(res) == dep {\n            res = append(res, []int{})\n        }\n        res[dep] = append(res[dep], node.Val)\n        bfs(node.Left, dep+1)\n        bfs(node.Right, dep+1)\n    }\n\n    bfs(root, 0)\n    return res\n}\n\n// Iterate\nfunc levelorder(root *TreeNode) [][]int {\n    // Time complexity: O(n)\n    // Spatial complexity: O(n)\n    if root == nil {\n        return [][]int{}\n    }\n\n    res := make([][]int, 0)\n    curr := []*TreeNode{root}\n    for len(curr) &gt; 0 {\n        next := []*TreeNode{}\n        vals := []int{}\n\n        for _, node := range curr {\n            vals = append(vals, node.Val) // add curr level node val\n\n            if node.Left != nil {\n                next = append(next, node.Left)\n            }\n\n            if node.Right != nil {\n                next = append(next, node.Right)\n            }\n        }\n        res = append(res, vals)\n        curr = next\n    }\n    return res\n}\n</code></pre>","boost":2},{"location":"llm/","title":"LLM\u77e5\u8bc6\u603b\u7ed3","text":"<ul> <li>\u6df1\u5ea6\u5b66\u4e60\u5b9e\u73b0\u7b14\u8bb0<ul> <li>https://nn.labml.ai/</li> <li>GitHub: https://github.com/labmlai/annotated_deep_learning_paper_implementations</li> </ul> </li> </ul>"},{"location":"llm/attention/","title":"Attention \u6ce8\u610f\u529b","text":"","boost":2},{"location":"llm/attention/#mha","title":"MHA","text":"<p>MHA\uff08Multi-Head Attention\uff09\uff0c\u4e5f\u5c31\u662f\u591a\u5934\u6ce8\u610f\u529b\u3002</p> <p>Attention Is All You Need</p>","boost":2},{"location":"llm/attention/#mqa","title":"MQA","text":"<p>MQA\uff0c\u5373\u201cMulti-Query Attention\u201d\uff0c\u662f\u51cf\u5c11KV Cache\u7684\u4e00\u6b21\u975e\u5e38\u6734\u7d20\u7684\u5c1d\u8bd5\u3002</p> <p>Fast Transformer Decoding: One Write-Head is All You Need</p> <p>https://kexue.fm/archives/4765</p>","boost":2},{"location":"llm/attention/#gqa","title":"GQA","text":"<p>GQA\uff08Grouped-Query Attention\uff09</p> <p>GQA: Training Generalized Multi-Query Transformer Models from Multi-Head Checkpoints</p>","boost":2},{"location":"llm/attention/#mla","title":"MLA","text":"<p>MLA\uff08Multi-head Latent Attention\uff09</p> <p>DeepSeek-V2: A Strong, Economical, and Efficient Mixture-of-Experts Language Model</p>","boost":2},{"location":"llm/paper/","title":"\u8bba\u6587","text":""},{"location":"llm/paper/#prompt","title":"Prompt","text":"<ul> <li>The Prompt Report: A Systematic Survey of Prompting Techniques</li> </ul>"},{"location":"llm/qa/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"llm/qa/#1-llm-decoder-only","title":"1. LLM\u4e3a\u4ec0\u4e48\u5927\u591a\u90fd\u662f Decoder-only \u67b6\u6784","text":"<p>LLM\u662f <code>Large Language Model</code> \u7684\u7b80\u5199\uff0c\u76ee\u524d\u4e00\u822c\u6307\u767e\u4ebf\u53c2\u6570\u4ee5\u4e0a\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u4e3b\u8981\u9762\u5411\u6587\u672c\u751f\u6210\u4efb\u52a1\u3002</p> <ol> <li>Encoder \u4f4e\u79e9\u95ee\u9898\uff1aEncoder\u7684\u53cc\u5411\u6ce8\u610f\u529b\u4f1a\u5b58\u5728\u4f4e\u79e9\u95ee\u9898\uff0c\u53ef\u80fd\u524a\u5f31\u6a21\u578b\u8868\u8fbe\u80fd\u529b\u3002\u5bf9\u4e8e\u751f\u6210\u4efb\u52a1\u800c\u8a00\uff0c\u5f15\u5165\u53cc\u5411\u6ce8\u610f\u529b\u5e76\u65e0\u5b9e\u8d28\u597d\u5904</li> <li>\u6709\u66f4\u597d\u7684 Zero-Shot(\u96f6\u6837\u672c\u5b66\u4e60) \u6027\u80fd\uff0c\u66f4\u9002\u5408\u5927\u8bed\u6599\u7684\u81ea\u76d1\u7763\u5b66\u4e60\uff1a</li> <li>Decoder-only \u652f\u6301\u4e00\u76f4\u590d\u7528 KV-Cache\uff0c\u5bf9\u591a\u8f6e\u5bf9\u8bdd\u66f4\u53cb\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e2aToken\u7684\u8868\u793a\u4e4b\u548c\u5b83\u4e4b\u524d\u7684\u8f93\u5165\u6709\u5173\uff0c\u800cencoder-decoder\u548cPrefixLM\u5c31\u96be\u4ee5\u505a\u5230\u3002</li> </ol> <p>\u82cf\u5251\u6797: \u4e3a\u4ec0\u4e48\u73b0\u5728\u7684LLM\u90fd\u662fDecoder-only\u7684\u67b6\u6784\uff1f</p>"},{"location":"llm/fine_tuning/","title":"\u6982\u8981","text":"\u5fae\u8c03\u65b9\u6cd5 \u539f\u7406 \u5907\u6ce8 \u5168\u53c2\u6570\u5fae\u8c03\uff08Full Fine-Tuning\uff09 \u9ad8\u6548\u53c2\u6570\u5fae\u8c03 PEFT\uff08Parameter-Efficient Fine-Tuning\uff09 LoRA\uff08Low-Rank Adaptation\uff09"},{"location":"llm/fine_tuning/framework/","title":"\u5f00\u6e90\u6846\u67b6","text":""},{"location":"llm/fine_tuning/framework/#llamafactory","title":"LlamaFactory","text":"<p>https://github.com/hiyouga/LLaMA-Factory</p>"},{"location":"llm/fine_tuning/framework/#deepspeed","title":"Deepspeed","text":"<p>https://github.com/deepspeedai/DeepSpeed</p>"},{"location":"llm/fine_tuning/lora/","title":"LoRA","text":"<ul> <li>Paper: LoRA: Low-Rank Adaptation of Large Language Models</li> <li>GitHub: https://github.com/microsoft/LoRA</li> </ul>","boost":2},{"location":"llm/inference/","title":"\u7b80\u4ecb","text":"","boost":2},{"location":"llm/inference/#1-vllm","title":"1. vLLM","text":"<p>\u9879\u76ee\u5730\u5740: https://github.com/vllm-project/vllm</p>","boost":2},{"location":"llm/inference/#2-sglang","title":"2. SGLang","text":"<p>\u9879\u76ee\u5730\u5740: https://github.com/sgl-project/sglang</p>","boost":2},{"location":"llm/inference/#3-lmdeploy","title":"3. LMDeploy","text":"","boost":2},{"location":"llm/inference/#4-ollama","title":"4. Ollama","text":"","boost":2},{"location":"llm/inference/#5-llamacpp","title":"5. Llama.cpp","text":"","boost":2},{"location":"llm/inference/#6-tensorrt-llm","title":"6. TensorRT-LLM","text":"","boost":2},{"location":"llm/inference/#7-hugging-face-tgi","title":"7. Hugging Face TGI","text":"","boost":2},{"location":"llm/inference/#8-mlc-llm","title":"8. MLC-LLM","text":"","boost":2},{"location":"llm/mcp/","title":"Index","text":"<p>MCP \u5168\u79f0 Model Context Protocol.</p> <ul> <li>https://modelcontextprotocol.io/introduction</li> </ul>"},{"location":"llm/mcp/#_1","title":"\u6838\u5fc3\u67b6\u6784","text":"<pre><code>graph LR\n    subgraph \"Application Host Process\"\n        H[Host]\n        C1[Client 1]\n        C2[Client 2]\n        C3[Client 3]\n        H --&gt; C1\n        H --&gt; C2\n        H --&gt; C3\n    end\n\n    subgraph \"Local machine\"\n        S1[Server 1&lt;br&gt;Files &amp; Git]\n        S2[Server 2&lt;br&gt;Database]\n        R1[(\"Local&lt;br&gt;Resource A\")]\n        R2[(\"Local&lt;br&gt;Resource B\")]\n\n        C1 --&gt; S1\n        C2 --&gt; S2\n        S1 &lt;--&gt; R1\n        S2 &lt;--&gt; R2\n    end\n\n    subgraph \"Internet\"\n        S3[Server 3&lt;br&gt;External APIs]\n        R3[(\"Remote&lt;br&gt;Resource C\")]\n\n        C3 --&gt; S3\n        S3 &lt;--&gt; R3\n    end</code></pre>"},{"location":"misc/","title":"\u5e38\u7528","text":""},{"location":"misc/#emoji","title":"Emoji","text":"<ul> <li>Emoji Search: https://emojifinder.com/</li> <li>Emoji Animation: https://googlefonts.github.io/noto-emoji-animation/</li> </ul>"},{"location":"misc/#skill-icon","title":"Skill Icon","text":"<ul> <li>Skill Icon: https://github.com/LelouchFR/skill-icons</li> </ul>"},{"location":"misc/#documentation-websites","title":"Documentation Websites","text":"<ul> <li>https://github.com/mintlify/starter</li> <li>https://github.com/withastro/starlight</li> <li>https://github.com/executablebooks/sphinx-book-theme</li> </ul>"},{"location":"misc/regex/","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"misc/regex/#1","title":"1. \u624b\u673a\u53f7","text":"<pre><code>phone_num_reg = r\"(?&lt;!\\d)1[3-9]\\d{9}(?!\\d)\"\n</code></pre>"},{"location":"misc/regex/#2","title":"2. \u8eab\u4efd\u8bc1\u53f7\u7801","text":"<pre><code>id_num_reg = r\"(?&lt;!\\d)(\\d{18}|\\d{17}[X-x])(?!\\d)\"\n</code></pre>"},{"location":"misc/regex/#3","title":"3. \u8f66\u724c\u53f7","text":"<pre><code>plate_num_reg = r\"[\u4eac\u6d25\u6caa\u6e1d\u5180\u8c6b\u4e91\u8fbd\u9ed1\u6e58\u7696\u9c81\u65b0\u82cf\u6d59\u8d63\u9102\u6842\u7518\u664b\u8499\u9655\u5409\u95fd\u8d35\u7ca4\u9752\u85cf\u5ddd\u5b81\u743c\u4f7f\u9886]\\s?[A-HJ-NP-Z]\\s?[A-HJ-NP-Z0-9]{4,6}[A-HJ-NP-Z0-9\u6302\u5b66\u8b66\u6e2f\u6fb3]\"\n</code></pre>"},{"location":"misc/mac/","title":"\u57fa\u7840\u914d\u7f6e","text":""},{"location":"misc/mac/#xcode","title":"\u5b89\u88c5 Xcode","text":"<p>\u5728\u5e94\u7528\u5546\u5e97\u4e2d\u5b89\u88c5\u66f4\u65b0 Xode\uff0c\u6216\u8005\u5728\u5b89\u88c5 HomeBrew \u65f6\uff0c\u5185\u90e8\u81ea\u52a8\u5b89\u88c5\u3001\u66f4\u65b0 Xode Command Line Tool\u3002</p>"},{"location":"misc/mac/#homebrew","title":"Homebrew","text":"<p>MacOS \u5305\u7ba1\u7406\u5de5\u5177</p> <pre><code># \u5355\u72ec\u6307\u5b9a brew \u548c core \u7684repo\u5730\u5740\nexport HOMEBREW_BREW_GIT_REMOTE=\"...\"  # put your Git mirror of Homebrew/brew here\nexport HOMEBREW_CORE_GIT_REMOTE=\"...\"  # put your Git mirror of Homebrew/homebrew-core here\n\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"misc/mac/#git","title":"Git\u5b89\u88c5","text":"<pre><code>brew install git\n</code></pre>"},{"location":"misc/mac/#_1","title":"\u7ec8\u7aef\u5de5\u5177","text":"<ul> <li>iTerm2</li> <li>WezTerm</li> <li>Warp</li> <li>Alacritty</li> </ul>"},{"location":"misc/mac/#zsh","title":"zsh \u4f18\u5316","text":"<ul> <li>zsh: https://www.zsh.org/</li> <li>Oh-My-Zsh</li> </ul> <pre><code># \u5b89\u88c5 Oh-My-Zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <p>\u63d2\u4ef6</p> <p>Zsh community projects.</p> <ul> <li>zsh-syntax-highlighting</li> <li>zsh-autosuggestions</li> <li>zsh-completions</li> </ul> <pre><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\ngit clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4fee\u6539 <code>~/.zshrc</code> \u6587\u4ef6\u3002</p> ~/.zshrc<pre><code>plugins=( \n    # other plugins...\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n    zsh-completions\n)\n</code></pre> <p>\u4e3b\u9898</p> <p>starship \u548c powerlevel10k \u4e8c\u9009\u4e00\u5373\u53ef\u3002</p> starship<pre><code># \u5b89\u88c5\u6700\u65b0\u7248\u672c\ncurl -sS https://starship.rs/install.sh | sh\n\n# \u521d\u59cb\u5316, \u9700\u8981\u5c06\u6b64\u547d\u4ee4\u8ffd\u52a0\u5230 ~/.zshrc \u6587\u4ef6\u4e2d\neval \"$(starship init zsh)\"\n</code></pre> powerlevel10k<pre><code>git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k\necho 'source ~/powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt;~/.zshrc\n\n# \u65e0\u6cd5\u79d1\u5b66\u4e0a\u7f51\ngit clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/powerlevel10k\necho 'source ~/powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt;~/.zshrc\n</code></pre>"},{"location":"misc/mac/#vim","title":"Vim","text":"<pre><code>git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime\nsh ~/.vim_runtime/install_awesome_vimrc.sh\n</code></pre> <p>The Ultimate vimrc</p>"},{"location":"misc/mac/#neofetch","title":"neofetch","text":"<p>\u5feb\u901f\u83b7\u53d6\u5173\u952e\u7cfb\u7edf\u4fe1\u606f</p> <pre><code># \u5b89\u88c5\nbrew install neofetch\n\n# \u4f7f\u7528\nneofetch\n</code></pre>"},{"location":"misc/mac/#tmux","title":"Tmux","text":"<pre><code>brew install tmux\n</code></pre> <ul> <li>tmux cheatsheet</li> <li>Dark theme for tmux</li> <li>tmux \u914d\u7f6e\u6587\u4ef6\u5206\u4eab</li> <li>github.comgpakosz/.tmux </li> </ul>"},{"location":"misc/mac/#docker","title":"Docker\u76f8\u5173","text":"<ul> <li>OrbStack: https://orbstack.dev/</li> </ul> <p>\u66f4\u52a0\u8f7b\u91cf\u3001\u9ad8\u6548\u7684 MacOS Docker\u5de5\u5177\u3002</p>"},{"location":"misc/mac/#vs-code","title":"VS Code","text":"<ul> <li>\u52fe\u9009\u7b26\u5408\u81ea\u5df1\u7248\u672c\u4e0b\u8f7d\u3002</li> <li>\u4e0b\u8f7d\uff1ahttps://code.visualstudio.com/#alt-downloads</li> </ul> <p>\u5e94\u7528\u4e0b\u8f7d\u540e\u6dfb\u52a0\u914d\u7f6e</p> setting.json<pre><code>{\n  \"terminal.integrated.defaultProfile.osx\": \"zsh\",\n}\n</code></pre> <p>VS Code Cli</p> <p><code>command + shift + p</code> \u4e4b\u540e\u641c\u7d22 code\uff0c\u9009\u62e9 <code>Shell Command: Install 'code' command in PATH</code>\u3002</p>"},{"location":"misc/mac/iterm2/","title":"iTerm2\u914d\u7f6e","text":""},{"location":"misc/mac/iterm2/#iterm2","title":"iTerm2 \u5149\u6807\u5feb\u901f\u8df3\u8bcd\u79fb\u52a8","text":"<p>\u6253\u5f00 iTerm2 \u7684 <code>Settings</code> \u6216\u8005 <code>Perferences</code>\u3002</p> iTerm2 Settings <p>\u9009\u62e9\u5f53\u524dProfiles --&gt; \u9009\u62e9 <code>Keys</code> \u9009\u9879 --&gt; \u9009\u62e9 <code>Key Mappings</code> \u3002</p> iTerm2 Settings Key Mappings <p>\u4fee\u6539 <code>option &lt;-</code> \u548c <code>option -&gt;</code>\u3002 Action \u9009\u62e9\u4e3a Send Escape Sequence\u3002</p> <ul> <li><code>option &lt;-</code> \u5bf9\u5e94 b</li> <li><code>option -&gt;</code> \u5bf9\u5e94 f</li> </ul> option left option right Result"},{"location":"misc/mac/mirror/","title":"\u955c\u50cf\u6e90\u914d\u7f6e","text":""},{"location":"misc/mac/mirror/#pypi","title":"Pypi","text":""},{"location":"misc/mac/mirror/#pip","title":"pip\u5b89\u88c5","text":"<pre><code># \u4e34\u65f6\u4f7f\u7528\u955c\u50cf\u6e90\npip install {pkg} -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n# \u6c38\u4e45\u914d\u7f6e\u4e3a\u9ed8\u8ba4\u6e90\npython -m pip install --upgrade pip\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre>"},{"location":"misc/mac/mirror/#poetry","title":"Poetry\u5305\u7ba1\u7406","text":"<pre><code># \u8bbe\u7f6e\u9996\u9009\u955c\u50cf\npoetry source add --priority=primary mirrors https://pypi.tuna.tsinghua.edu.cn/simple/\n\n# \u8bbe\u7f6e\u8865\u5145\u955c\u50cf\npoetry source add --priority=supplemental mirrors https://pypi.tuna.tsinghua.edu.cn/simple/\n</code></pre> <p>TUNA PyPI \u955c\u50cf\u4f7f\u7528\u5e2e\u52a9</p>"},{"location":"misc/mac/ml/","title":"\u673a\u5668\u5b66\u4e60","text":""},{"location":"misc/mac/ml/#apple-silicon-pytorch","title":"Apple Silicon \u5b89\u88c5\u52a0\u901f PyTorch","text":"<ul> <li>Accelerated PyTorch training on Mac</li> </ul>"},{"location":"misc/mac/niz/","title":"\u5b81\u829d Niz\u952e\u76d8","text":""},{"location":"misc/mac/niz/#niz-plum","title":"\u5b81\u829d Niz Plum \u84dd\u7259\u8fde\u63a5","text":""},{"location":"misc/mac/niz/#_1","title":"\u7b2c\u4e00\u6b21\u8fde\u63a5\u8bbe\u5907","text":"<ul> <li>\u4e0d\u8981\u8ba9\u952e\u76d8\u548c\u7535\u8111\u4f7f\u7528 USB \u8fde\u63a5</li> <li>\u957f\u6309\u952e\u76d8\u7535\u6e90\u952e\u5f00\u542f\u952e\u76d8</li> <li>\u6253\u5f00\u7535\u8111\u84dd\u7259\u8fde\u63a5</li> <li>\u6309\u4f4f\u952e\u76d8\u7684 <code>Fn + Del</code> \u81f3\u7535\u6e90\u6309\u94ae\u5de6\u4e0b\u65b9\u706f\u5149\u6301\u7eed\u95ea\u70c1\uff0c\u8fdb\u5165\u914d\u5bf9\u72b6\u6001</li> <li>\u7535\u8111\u754c\u9762\u63d0\u793a\u8f93\u5165 <code>6</code> \u4f4d\u6570\u5b57\u5e76\u6309 <code>Enter</code> \u952e\u786e\u8ba4\u5373\u53ef\u8fde\u63a5</li> </ul>"},{"location":"misc/mac/program_env/","title":"\u7f16\u7a0b\u73af\u5883\u914d\u7f6e","text":""},{"location":"misc/mac/program_env/#1-python-uv","title":"1. Python (UV)","text":"<p><code>uv</code> \u5de5\u5177\u4ecb\u7ecd: https://docs.astral.sh/uv/</p> <pre><code># \u4e0b\u8f7d\u5b89\u88c5\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n\n# \u521d\u59cb\u5316\ncd workspace\n# \u521d\u59cb\u5316\n#  -p: \u6307\u5b9a python \u7248\u672c\nuv init -p 3.xx\n\n# \u521b\u5efa\u672c\u9879\u76ee\u7684\u865a\u62df\u73af\u5883 virtual environment,\n#  -p: \u6307\u5b9a python \u7248\u672c\nuv venv -p 3.xx\n\n# \u6fc0\u6d3b\u5f53\u524d\u865a\u62df\u73af\u5883\nsource .venv/bin/activate\n</code></pre>"},{"location":"misc/mac/program_env/#2-go","title":"2. Go \u5f00\u53d1\u73af\u5883\u914d\u7f6e","text":"<p>\u8fdb\u5165\u4e0b\u8f7d\u5730\u5740\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684 pkg \u5305\u3002\u6240\u6709\u53d1\u5e03\u7248\u672c\u4e0b\u8f7d\u5730\u5740\u3002\u9009\u62e9 <code>go1.x.x.darwin-arm64.pkg</code> \u4e0b\u8f7d\u3002</p> <p>\u4e0b\u8f7d\u5b8c\u6210\u540e\u70b9\u51fb\u5b89\u88c5\uff0c\u6309\u7167\u5f15\u5bfc\u64cd\u4f5c\u5373\u53ef\u3002</p> <pre><code># \u67e5\u770b\u5b89\u88c5\u7684\u7248\u672c\ngo version\n\n# \u67e5\u770b\u5f53\u524dGo Env\ngo env\n</code></pre>"},{"location":"misc/mac/program_env/#_1","title":"\u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u9009\u62e9\u81ea\u5df1\u5bf9\u5e94\u7684\u7ec8\u7aef\u7684\u914d\u7f6e\u6587\u4ef6, <code>zsh</code> \u6216\u8005 <code>bash</code>\u3002 <pre><code># Zsh\nvim ~/.zshrc\n\n# Bash\nvim ~/.bashrc\n</code></pre></p> <p>\u6587\u4ef6\u5185\u5bb9\u4fee\u6539\u5982\u4e0b</p> <pre><code># Go\nexport GOPATH=/\uff08\u4f60\u81ea\u5df1\u7684\u8def\u5f84\uff09\nexport GOBIN=$GOPATH/bin\nexport PATH=$PATH:$GOBIN\nexport GO111MODULE=on\n\n# \u9009\u62e9\u914d\u7f6e\nexport GOPROXY=https://mirrors.aliyun.com/goproxy/ \n# Go END\n</code></pre> <p>\u7f16\u8f91\u597d\u540e\u4fdd\u5b58, <code>source ~/.zshrc</code> \u91cd\u8f7d\u914d\u7f6e\u3002\u6216\u8005\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u3002</p>"},{"location":"misc/mac/program_env/#3-rust","title":"3. Rust \u5f00\u53d1\u73af\u5883\u914d\u7f6e","text":"<pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre> <p>\u8fd0\u884c\u540e\u9009\u62e9 \u65b9\u5f0f 1 \u5b89\u88c5\u3002\u4e4b\u540e\u91cd\u542f\u7ec8\u7aef\u5373\u53ef\u3002</p> <pre><code># \u67e5\u770b\u5b89\u88c5\u7684 Rust \u7248\u672c\nrustc --version\n\ncargo --version\n</code></pre> <p>\u4e4b\u540e\u5982\u679c\u9700\u8981\u5347\u7ea7\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>rustup</code> CLI\u547d\u4ee4\u3002</p> <pre><code># \u5347\u7ea7\nrustup update\n\n# \u5982\u679c\u9009\u62e9 stable \u7248\u672c\nrustup update stable\n</code></pre> <p>\u53c2\u8003: https://www.rust-lang.org/tools/install</p>"},{"location":"misc/mac/program_env/#4-java","title":"4. Java","text":"<ul> <li>JDK\u4e0b\u8f7d: https://jdk.java.net/archive/</li> <li>Maven\u5305(\u5305\u62ec <code>mvnd</code> )\u4e0b\u8f7d: https://maven.apache.org/download.cgi</li> </ul> <pre><code># ~/.bash_profile\nexport JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-17.0.2.jdk/Contents/Home\nexport MAVEN_HOME=/opt/maven/apache-maven-3.9.9\nexport PATH=$PATH:$MAVEN_HOME/bin\n</code></pre> <ul> <li>Maven\u52a0\u901f: <ul> <li>\u963f\u91cc\u4e91: https://developer.aliyun.com/mvn/guide</li> </ul> </li> </ul> <pre><code>vim /opt/maven/apache-maven-3.9.9/conf/settings.xml\n</code></pre> <p>\u5728 <code>&lt;mirrors&gt;xxx&lt;&lt;/mirrors&gt;&gt;</code> \u4e2d\u6dfb\u52a0 aliyun Maven\u52a0\u901f\u5e93</p> <pre><code>&lt;mirrors&gt;\n  ......\n  &lt;mirror&gt;\n    &lt;id&gt;aliyunmaven&lt;/id&gt;\n    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;\n    &lt;name&gt;aliyun&lt;/name&gt;\n    &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;\n  &lt;/mirror&gt;\n  ......\n&lt;/mirrors&gt;\n</code></pre>"},{"location":"misc/mac/vscode/","title":"VS Code \u914d\u7f6e\u6587\u4ef6","text":"setting.json<pre><code>{\n    \"terminal.integrated.defaultProfile.osx\": \"zsh\",\n    \"editor.fontSize\": 13,\n    \"files.autoSave\": \"afterDelay\",\n    \"files.autoGuessEncoding\": true,\n    \"editor.minimap.enabled\": false,\n    \"editor.maxTokenizationLineLength\": 100000,\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"workbench.editor.enablePreview\": false,\n    \"[python]\": {\n        \"editor.formatOnType\": true,\n        \"editor.formatOnSave\": true,\n        \"editor.defaultFormatter\": \"ms-python.black-formatter\",\n        \"editor.codeActionsOnSave\": {\n            \"source.convertImportFormat\": \"explicit\"\n        }\n    },\n    \"isort.args\": [\n        \"--profile\",\n        \"black\"\n    ],\n    \"terminal.integrated.shell.osx\": \"/bin/zsh\",\n    \"terminal.integrated.shellArgs.osx\": [],\n    \"terminal.integrated.profiles.osx\": {\n        \"bash\": {\n            \"path\": \"bash\",\n            \"args\": [\n                \"-l\"\n            ],\n            \"icon\": \"terminal-bash\"\n        },\n        \"zsh\": {\n            \"path\": \"zsh\",\n            \"args\": [\n                \"-l\"\n            ]\n        },\n        \"fish\": {\n            \"path\": \"fish\",\n            \"args\": [\n                \"-l\"\n            ]\n        },\n        \"tmux\": {\n            \"path\": \"tmux\",\n            \"icon\": \"terminal-tmux\"\n        },\n        \"pwsh\": {\n            \"path\": \"pwsh\",\n            \"icon\": \"terminal-powershell\"\n        }\n    }\n}\n</code></pre>"},{"location":"mysql/","title":"\u57fa\u7840","text":"","boost":2},{"location":"mysql/#acid","title":"\u4ec0\u4e48\u662f ACID\uff1f","text":"<p>ACID \u89c4\u5219\u539f\u6765\u662f\u5728 1970 \u88ab Jim Gray \u5b9a\u4e49\uff0cACID \u4e8b\u52a1\u89e3\u51b3\u4e86\u5f88\u591a\u95ee\u9898\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u548c\u6027\u80fd\u505a\u5e73\u8861\u534f\u8c03\uff0c\u4e8b\u52a1\u8d8a\u5f3a\uff0c\u6027\u80fd\u53ef\u80fd\u8d8a\u4f4e\uff0c\u5b89\u5168\u53ef\u9760\u6027\u548c\u9ad8\u6027\u80fd\u662f\u4e00\u5bf9\u77db\u76fe\u3002</p> <p>\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0 ACID\uff1a\u7b2c\u4e00\u79cd\u662f Write ahead logging\uff0c\u4e5f\u5c31\u662f\u65e5\u5fd7\u5f0f\u7684\u65b9\u5f0f\u3002\u7b2c\u4e8c\u79cd\u662f Shadow paging\u3002</p> <ul> <li>Atomicity \u539f\u5b50\u6027: \u4e00\u4e2a\u4e8b\u52a1\u7684\u6240\u6709\u7cfb\u5217\u64cd\u4f5c\u6b65\u9aa4\u88ab\u770b\u6210\u662f\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6240\u6709\u7684\u6b65\u9aa4\u8981\u4e48\u5168\u90e8\u5b8c\u6210\u8981\u4e48\u4e00\u4e2a\u4e5f\u4e0d\u4f1a\u5b8c\u6210\uff0c\u5982\u679c\u4e8b\u52a1\u8fc7\u7a0b\u4e2d\u4efb\u4f55\u4e00\u70b9\u5931\u8d25\uff0c\u5c06\u8981\u88ab\u6539\u53d8\u7684\u6570\u636e\u5e93\u8bb0\u5f55\u5c31\u4e0d\u4f1a\u88ab\u771f\u6b63\u88ab\u6539\u53d8\u3002</li> <li>Consistency \u4e00\u81f4\u6027: \u6570\u636e\u5e93\u7684\u7ea6\u675f \u7ea7\u8054\u548c\u89e6\u53d1\u673a\u5236 Trigger \u90fd\u5fc5\u987b\u6ee1\u8db3\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7\u5404\u79cd\u9014\u5f84\u5305\u62ec\u5916\u952e\u7ea6\u675f\u7b49\u4efb\u4f55\u5199\u5165\u6570\u636e\u5e93\u7684\u6570\u636e\u90fd\u662f\u6709\u6548\u7684\uff0c\u4e0d\u80fd\u53d1\u751f\u8868\u4e0e\u8868\u4e4b\u95f4\u5b58\u5728\u5916\u952e\u7ea6\u675f\uff0c\u4f46\u662f\u6709\u6570\u636e\u5374\u8fdd\u80cc\u8fd9\u79cd\u7ea6\u675f\u6027\u3002\u6240\u6709\u6539\u53d8\u6570\u636e\u5e93\u6570\u636e\u7684\u52a8\u4f5c\u4e8b\u52a1\u5fc5\u987b\u5b8c\u6210\uff0c\u6ca1\u6709\u4e8b\u52a1\u4f1a\u521b\u5efa\u4e00\u4e2a\u65e0\u6548\u6570\u636e\u72b6\u6001\uff0c\u8fd9\u662f\u4e0d\u540c\u4e8e CAP \u7406\u8bba\u7684\u4e00\u81f4\u6027\"consistency\".</li> <li>Isolation \u9694\u79bb\u6027: \u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0\u5e76\u53d1\u63a7\u5236, \u9694\u79bb\u80fd\u591f\u786e\u4fdd\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u80fd\u591f\u987a\u5e8f\u4e00\u4e2a\u63a5\u4e00\u4e2a\u6267\u884c\uff0c\u901a\u8fc7\u9694\u79bb\uff0c\u4e00\u4e2a\u672a\u5b8c\u6210\u4e8b\u52a1\u4e0d\u4f1a\u5f71\u54cd\u53e6\u5916\u4e00\u4e2a\u672a\u5b8c\u6210\u4e8b\u52a1\u3002</li> <li>Durability \u6301\u4e45\u6027: \u4e00\u65e6\u4e00\u4e2a\u4e8b\u52a1\u88ab\u63d0\u4ea4\uff0c\u5b83\u5e94\u8be5\u6301\u4e45\u4fdd\u5b58\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u548c\u5176\u4ed6\u64cd\u4f5c\u51b2\u7a81\u800c\u53d6\u6d88\u8fd9\u4e2a\u4e8b\u52a1\u3002\u5f88\u591a\u4eba\u8ba4\u4e3a\u8fd9\u610f\u5473\u7740\u4e8b\u52a1\u662f\u6301\u4e45\u5728\u78c1\u76d8\u4e0a\uff0c\u4f46\u662f\u89c4\u8303\u6ca1\u6709\u7279\u522b\u5b9a\u4e49\u8fd9\u70b9\u3002</li> </ul> <p>InnoDB \u5f15\u64ce\u901a\u8fc7\u4ec0\u4e48\u6280\u672f\u6765\u4fdd\u8bc1\u4e8b\u52a1\u7684\u8fd9\u56db\u4e2a\u7279\u6027\u7684\u5462\uff1f</p> <ul> <li>\u6301\u4e45\u6027\u662f\u901a\u8fc7 redo log \uff08\u91cd\u505a\u65e5\u5fd7\uff09\u6765\u4fdd\u8bc1\u7684\uff1b</li> <li>\u539f\u5b50\u6027\u662f\u901a\u8fc7 undo log\uff08\u56de\u6eda\u65e5\u5fd7\uff09 \u6765\u4fdd\u8bc1\u7684\uff1b</li> <li>\u9694\u79bb\u6027\u662f\u901a\u8fc7 MVCC\uff08\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff09 \u6216\u9501\u673a\u5236\u6765\u4fdd\u8bc1\u7684\uff1b</li> <li>\u4e00\u81f4\u6027\u5219\u662f\u901a\u8fc7\u6301\u4e45\u6027+\u539f\u5b50\u6027+\u9694\u79bb\u6027\u6765\u4fdd\u8bc1\uff1b</li> </ul>","boost":2},{"location":"mysql/#cap","title":"\u4ec0\u4e48\u662f CAP\uff1f","text":"<p>CAP \u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8fdb\u884c\u5e73\u8861\u7684\u7406\u8bba\uff0c\u5b83\u662f\u7531 Eric Brewer \u53d1\u5e03\u5728 2000 \u5e74\u3002</p> <ul> <li>Consistency \u4e00\u81f4\u6027: \u540c\u6837\u6570\u636e\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6240\u6709\u5730\u65b9\u90fd\u662f\u88ab\u590d\u5236\u6210\u76f8\u540c\u3002</li> <li>Availability \u53ef\u7528\u6027: \u6240\u6709\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u6d3b\u8dc3\u7684\u8282\u70b9\u90fd\u80fd\u591f\u5904\u7406\u64cd\u4f5c\u4e14\u80fd\u54cd\u5e94\u67e5\u8be2\u3002</li> <li>Partition Tolerance \u5206\u533a\u5bb9\u9519\u6027: \u5728\u4e24\u4e2a\u590d\u5236\u7cfb\u7edf\u4e4b\u95f4\uff0c\u5982\u679c\u53d1\u751f\u4e86\u8ba1\u5212\u4e4b\u5916\u7684\u7f51\u7edc\u8fde\u63a5\u95ee\u9898\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6709\u4e00\u5957\u5bb9\u9519\u6027\u8bbe\u8ba1\u6765\u4fdd\u8bc1\u3002</li> </ul> <p>\u5728\u4e00\u7cfb\u5217\u7684\u7814\u7a76\u7ed3\u679c\u91cc\u53d1\u73b0\uff0c\u5728\u8f83\u5927\u578b\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u7531\u4e8e\u7f51\u7edc\u5206\u9694\uff0c\u4e00\u81f4\u6027\u4e0e\u53ef\u7528\u6027\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e09\u4e2a\u8981\u7d20\u53ea\u80fd\u540c\u65f6\u5b9e\u73b0\u4e24\u4e2a\uff0c\u4e0d\u53ef\u80fd\u4e09\u8005\u517c\u987e\uff1b\u653e\u5bbd\u4e00\u81f4\u6027\u7684\u8981\u6c42\u4f1a\u63d0\u5347\u7cfb\u7edf\u7684\u53ef\u7528\u6027\uff0c\u63d0\u5347\u4e00\u81f4\u6027\u610f\u5473\u7740\u7cfb\u7edf\u9700\u8981\u727a\u7272\u4e00\u5b9a\u7684\u53ef\u7528\u6027\u3002</p>","boost":2},{"location":"mysql/db_index/","title":"\u7d22\u5f15","text":"","boost":2},{"location":"mysql/db_index/#_1","title":"\u4ec0\u4e48\u662f\u7d22\u5f15\uff1f","text":"<p>\u7d22\u5f15\u7684\u5b9a\u4e49\u5c31\u662f\u5e2e\u52a9\u5b58\u50a8\u5f15\u64ce\u5feb\u901f\u83b7\u53d6\u6570\u636e\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5f62\u8c61\u7684\u8bf4\u5c31\u662f\u7d22\u5f15\u662f\u6570\u636e\u7684\u76ee\u5f55\u3002</p>","boost":2},{"location":"mysql/db_index/#_2","title":"\u7d22\u5f15\u7684\u5206\u7c7b","text":"<ul> <li>\u6309\u300c\u6570\u636e\u7ed3\u6784\u300d\u5206\u7c7b\uff1aB+tree \u7d22\u5f15\u3001Hash \u7d22\u5f15\u3001Full-text \u7d22\u5f15\u3002</li> <li>\u6309\u300c\u7269\u7406\u5b58\u50a8\u300d\u5206\u7c7b\uff1a\u805a\u7c07\u7d22\u5f15\uff08\u4e3b\u952e\u7d22\u5f15\uff09\u3001\u4e8c\u7ea7\u7d22\u5f15\uff08\u8f85\u52a9\u7d22\u5f15\uff09\u3002</li> <li>\u6309\u300c\u5b57\u6bb5\u7279\u6027\u300d\u5206\u7c7b\uff1a\u4e3b\u952e\u7d22\u5f15\u3001\u552f\u4e00\u7d22\u5f15\u3001\u666e\u901a\u7d22\u5f15\u3001\u524d\u7f00\u7d22\u5f15\u3002</li> <li>\u6309\u300c\u5b57\u6bb5\u4e2a\u6570\u300d\u5206\u7c7b\uff1a\u5355\u5217\u7d22\u5f15\u3001\u8054\u5408\u7d22\u5f15\u3002</li> </ul> <p>\u5728\u521b\u5efa\u8868\u65f6\uff0cInnoDB \u5b58\u50a8\u5f15\u64ce\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u573a\u666f\u9009\u62e9\u4e0d\u540c\u7684\u5217\u4f5c\u4e3a\u7d22\u5f15\uff1a</p> <ul> <li>\u5982\u679c\u6709\u4e3b\u952e\uff0c\u9ed8\u8ba4\u4f1a\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u7684\u7d22\u5f15\u952e\uff08key\uff09\uff1b</li> <li>\u5982\u679c\u6ca1\u6709\u4e3b\u952e\uff0c\u5c31\u9009\u62e9\u7b2c\u4e00\u4e2a\u4e0d\u5305\u542b NULL \u503c\u7684\u552f\u4e00\u5217\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u7684\u7d22\u5f15\u952e\uff08key\uff09\uff1b</li> <li>\u5728\u4e0a\u9762\u4e24\u4e2a\u90fd\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\uff0cInnoDB \u5c06\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u9690\u5f0f\u81ea\u589e id \u5217\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u7684\u7d22\u5f15\u952e\uff08key\uff09\uff1b</li> </ul> <p>\u5176\u5b83\u7d22\u5f15\u90fd\u5c5e\u4e8e\u8f85\u52a9\u7d22\u5f15\uff08Secondary Index\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u4e8c\u7ea7\u7d22\u5f15\u6216\u975e\u805a\u7c07\u7d22\u5f15\u3002\u521b\u5efa\u7684\u4e3b\u952e\u7d22\u5f15\u548c\u4e8c\u7ea7\u7d22\u5f15\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f B+Tree \u7d22\u5f15\u3002</p> <p>\u8054\u5408\u7d22\u5f15\u7684\u6700\u5de6\u5339\u914d\u539f\u5219</p> <p>\u5728\u9047\u5230\u8303\u56f4\u67e5\u8be2\uff08\u5982 &gt;\u3001&lt;\uff09\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u505c\u6b62\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u8303\u56f4\u67e5\u8be2\u7684\u5b57\u6bb5\u53ef\u4ee5\u7528\u5230\u8054\u5408\u7d22\u5f15\uff0c\u4f46\u662f\u5728\u8303\u56f4\u67e5\u8be2\u5b57\u6bb5\u7684\u540e\u9762\u7684\u5b57\u6bb5\u65e0\u6cd5\u7528\u5230\u8054\u5408\u7d22\u5f15\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e &gt;=\u3001&lt;=\u3001BETWEEN\u3001like \u524d\u7f00\u5339\u914d\u7684\u8303\u56f4\u67e5\u8be2\uff0c\u5e76\u4e0d\u4f1a\u505c\u6b62\u5339\u914d\uff0c</p>","boost":2},{"location":"mysql/db_index/#_3","title":"\u4ec0\u4e48\u65f6\u5019\u9002\u7528\u7d22\u5f15\uff1f","text":"<ul> <li>\u5b57\u6bb5\u6709\u552f\u4e00\u6027\u9650\u5236\u7684\uff0c\u6bd4\u5982\u5546\u54c1\u7f16\u7801\uff1b</li> <li>\u7ecf\u5e38\u7528\u4e8e WHERE \u67e5\u8be2\u6761\u4ef6\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u80fd\u591f\u63d0\u9ad8\u6574\u4e2a\u8868\u7684\u67e5\u8be2\u901f\u5ea6\uff0c\u5982\u679c\u67e5\u8be2\u6761\u4ef6\u4e0d\u662f\u4e00\u4e2a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u5efa\u7acb\u8054\u5408\u7d22\u5f15\u3002</li> <li>\u7ecf\u5e38\u7528\u4e8e GROUP BY \u548c ORDER BY \u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u518d\u53bb\u505a\u4e00\u6b21\u6392\u5e8f\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u90fd\u5df2\u7ecf\u77e5\u9053\u4e86\u5efa\u7acb\u7d22\u5f15\u4e4b\u540e\u5728 B+Tree \u4e2d\u7684\u8bb0\u5f55\u90fd\u662f\u6392\u5e8f\u597d\u7684\u3002</li> </ul>","boost":2},{"location":"mysql/db_index/#_4","title":"\u4ec0\u4e48\u65f6\u5019\u4e0d\u9700\u8981\u521b\u5efa\u7d22\u5f15\uff1f","text":"<ul> <li>WHERE \u6761\u4ef6\uff0cGROUP BY \u548c ORDER BY \u91cc\u7528\u4e0d\u5230\u7684\u5b57\u6bb5</li> <li>\u5b57\u6bb5\u4e2d\u5b58\u5728\u5927\u91cf\u91cd\u590d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7d22\u5f15</li> <li>\u8868\u6570\u636e\u592a\u5c11\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7d22\u5f15</li> <li>\u7ecf\u5e38\u66f4\u65b0\u7684\u5b57\u6bb5\u4e0d\u7528\u521b\u5efa\u7d22\u5f15</li> </ul>","boost":2},{"location":"mysql/db_index/#_5","title":"\u4f18\u5316\u7d22\u5f15\u7684\u65b9\u6cd5","text":"<ul> <li>\u524d\u7f00\u7d22\u5f15\u4f18\u5316\uff1b</li> <li>\u8986\u76d6\u7d22\u5f15\u4f18\u5316\uff1b</li> <li>\u4e3b\u952e\u7d22\u5f15\u6700\u597d\u662f\u81ea\u589e\u7684\uff1b</li> <li>\u9632\u6b62\u7d22\u5f15\u5931\u6548\uff1b</li> </ul>","boost":2},{"location":"mysql/db_index/#_6","title":"\u524d\u7f00\u7d22\u5f15\u4f18\u5316","text":"<p>\u524d\u7f00\u7d22\u5f15\uff1a\u4f7f\u7528 \u67d0\u4e2a\u5b57\u6bb5\u4e2d\u5b57\u7b26\u4e32\u7684\u524d\u51e0\u4e2a\u5b57\u7b26 \u5efa\u7acb\u7d22\u5f15\u3002</p> <p>\u4f7f\u7528\u524d\u7f00\u7d22\u5f15\u662f\u4e3a\u4e86\u51cf\u5c0f\u7d22\u5f15\u5b57\u6bb5\u5927\u5c0f\uff0c\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u7d22\u5f15\u9875\u4e2d\u5b58\u50a8\u7684\u7d22\u5f15\u503c\uff0c\u6709\u6548\u63d0\u9ad8\u7d22\u5f15\u7684\u67e5\u8be2\u901f\u5ea6\u3002\u5728\u4e00\u4e9b\u5927\u5b57\u7b26\u4e32\u7684\u5b57\u6bb5\u4f5c\u4e3a\u7d22\u5f15\u65f6\uff0c\u4f7f\u7528\u524d\u7f00\u7d22\u5f15\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u51cf\u5c0f\u7d22\u5f15\u9879\u7684\u5927\u5c0f\u3002</p> <p>\u524d\u7f00\u7d22\u5f15\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027</p> <ul> <li><code>order by</code> \u5c31\u65e0\u6cd5\u4f7f\u7528\u524d\u7f00\u7d22\u5f15</li> <li>\u65e0\u6cd5\u628a\u524d\u7f00\u7d22\u5f15\u7528\u4f5c\u8986\u76d6\u7d22\u5f15</li> </ul>","boost":2},{"location":"mysql/db_index/#_7","title":"\u8986\u76d6\u7d22\u5f15\u4f18\u5316","text":"<p>\u8986\u76d6\u7d22\u5f15\uff08covering index \uff0c\u6216\u79f0\u4e3a\u7d22\u5f15\u8986\u76d6\uff09\u5373\u4ece\u975e\u4e3b\u952e\u7d22\u5f15\u4e2d\u5c31\u80fd\u67e5\u5230\u7684\u8bb0\u5f55\uff0c\u800c\u4e0d\u9700\u8981\u67e5\u8be2\u4e3b\u952e\u7d22\u5f15\u4e2d\u7684\u8bb0\u5f55\uff0c\u907f\u514d\u4e86\u56de\u8868\u7684\u4ea7\u751f\u51cf\u5c11\u4e86\u6811\u7684\u641c\u7d22\u6b21\u6570\uff0c\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002</p> <p>\u4f7f\u7528\u8986\u76d6\u7d22\u5f15\u7684\u597d\u5904\u5c31\u662f\uff0c\u4e0d\u9700\u8981\u67e5\u8be2\u51fa\u5305\u542b\u6574\u884c\u8bb0\u5f55\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4e5f\u5c31\u51cf\u5c11\u4e86\u5927\u91cf\u7684 I/O \u64cd\u4f5c\u3002</p> <p>\u5982\u4f55\u786e\u5b9a\u6570\u636e\u5e93\u6210\u529f\u4f7f\u7528\u4e86\u8986\u76d6\u7d22\u5f15\u5462\uff1f</p> <p>\u5f53\u53d1\u8d77\u4e00\u4e2a\u7d22\u5f15\u8986\u76d6\u67e5\u8be2\u65f6\uff0c\u5728 explain \u7684 extra \u5217\u53ef\u4ee5\u770b\u5230 using index \u7684\u4fe1\u606f\u3002Extra\u4e2d <code>Using index</code> \u8868\u660e\u6211\u4eec\u6210\u529f\u4f7f\u7528\u4e86\u8986\u76d6\u7d22\u5f15\u3002</p>","boost":2},{"location":"mysql/db_index/#_8","title":"\u4e3b\u952e\u7d22\u5f15\u6700\u597d\u662f\u81ea\u589e\u7684","text":"<p>InnoDB \u521b\u5efa\u4e3b\u952e\u7d22\u5f15\u9ed8\u8ba4\u4e3a\u805a\u7c07\u7d22\u5f15\uff0c\u6570\u636e\u88ab\u5b58\u653e\u5728\u4e86 B+Tree \u7684\u53f6\u5b50\u8282\u70b9\u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u540c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5185\u7684\u5404\u4e2a\u6570\u636e\u662f\u6309\u4e3b\u952e\u987a\u5e8f\u5b58\u653e\u7684\uff0c\u56e0\u6b64\uff0c\u6bcf\u5f53\u6709\u4e00\u6761\u65b0\u7684\u6570\u636e\u63d2\u5165\u65f6\uff0c\u6570\u636e\u5e93\u4f1a\u6839\u636e\u4e3b\u952e\u5c06\u5176\u63d2\u5165\u5230\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\u3002</p> <p>\u5982\u679c\u4f7f\u7528\u8d39\u81ea\u589e\u4e3b\u952e\uff0c\u6bcf\u6b21\u63d2\u5165\u4e3b\u952e\u7684\u7d22\u5f15\u503c\u90fd\u662f\u968f\u673a\u7684\u3002\u5bfc\u81f4\u51fa\u73b0\u9875\u5206\u88c2\u3002\u9875\u5206\u88c2\u8fd8\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u5927\u91cf\u7684\u5185\u5b58\u788e\u7247\uff0c\u5bfc\u81f4\u7d22\u5f15\u7ed3\u6784\u4e0d\u7d27\u51d1\uff0c\u4ece\u800c\u5f71\u54cd\u67e5\u8be2\u6548\u7387\u3002</p>","boost":2},{"location":"mysql/db_index/#_9","title":"\u9632\u6b62\u7d22\u5f15\u5931\u6548","text":"<p>\u907f\u514d\u5199\u51fa\u7d22\u5f15\u5931\u6548\u7684\u67e5\u8be2\u8bed\u53e5\u3002\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u53d1\u751f\u7d22\u5f15\u5931\u6548\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53\u4f7f\u7528\u5de6\u6216\u8005\u5de6\u53f3\u6a21\u7cca\u5339\u914d\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f <code>like %xx</code> \u6216\u8005 <code>like %xx%</code> \u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u4f1a\u9020\u6210\u7d22\u5f15\u5931\u6548\uff1b</li> <li>\u5f53\u5728\u67e5\u8be2\u6761\u4ef6\u4e2d\u5bf9\u7d22\u5f15\u5217\u505a\u4e86\u8ba1\u7b97\u3001\u51fd\u6570\u3001\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u90fd\u4f1a\u9020\u6210\u7d22\u5f15\u5931\u6548\uff1b</li> <li>\u8054\u5408\u7d22\u5f15\u8981\u80fd\u6b63\u786e\u4f7f\u7528\u9700\u8981\u9075\u5faa\u6700\u5de6\u5339\u914d\u539f\u5219\uff0c\u4e5f\u5c31\u662f\u6309\u7167\u6700\u5de6\u4f18\u5148\u7684\u65b9\u5f0f\u8fdb\u884c\u7d22\u5f15\u7684\u5339\u914d\uff0c\u5426\u5219\u5c31\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\u3002</li> <li>\u5728 WHERE \u5b50\u53e5\u4e2d\uff0c\u5982\u679c\u5728 OR \u524d\u7684\u6761\u4ef6\u5217\u662f\u7d22\u5f15\u5217\uff0c\u800c\u5728 OR \u540e\u7684\u6761\u4ef6\u5217\u4e0d\u662f\u7d22\u5f15\u5217\uff0c\u90a3\u4e48\u7d22\u5f15\u4f1a\u5931\u6548\u3002</li> </ul>","boost":2},{"location":"mysql/db_index/#_10","title":"\u7d22\u5f15\u4e0b\u63a8","text":"<p>\u7d22\u5f15\u4e0b\u63a8\uff08Index Condition Pushdown\uff09 \u662f MySQL 5.6 \u7248\u672c\u4e2d\u63d0\u4f9b\u7684\u4e00\u9879\u7d22\u5f15\u4f18\u5316\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u975e\u805a\u7c07\u7d22\u5f15(\u8054\u5408\u7d22\u5f15)\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u7d22\u5f15\u4e2d\u5305\u542b\u7684\u5b57\u6bb5\u5148\u505a\u5224\u65ad\uff0c\u8fc7\u6ee4\u6389\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c\u51cf\u5c11\u56de\u8868\u6b21\u6570\u3002</p> <p>\u5f53\u4f60\u7684\u67e5\u8be2\u8bed\u53e5\u7684\u6267\u884c\u8ba1\u5212\u91cc\uff0c\u51fa\u73b0\u4e86 Extra \u4e3a <code>Using index condition</code>\uff0c\u90a3\u4e48\u8bf4\u660e\u4f7f\u7528\u4e86\u7d22\u5f15\u4e0b\u63a8\u7684\u4f18\u5316\u3002</p>","boost":2},{"location":"mysql/db_index/#mysql-b","title":"\u4e3a\u4ec0\u4e48 MySQL \u91c7\u7528 B+ \u6811\u4f5c\u4e3a\u7d22\u5f15\uff1f","text":"<p>InnoDB \u662f MySQL \u9ed8\u8ba4\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u5b83\u5c31\u662f\u91c7\u7528\u4e86 B+ \u6811\u4f5c\u4e3a\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <ol> <li>B+ \u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u5b58\u653e\u5b9e\u9645\u7684\u8bb0\u5f55\u6570\u636e\uff0c\u4ec5\u5b58\u653e\u7d22\u5f15\uff0c\u56e0\u6b64\u6570\u636e\u91cf\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u76f8\u6bd4\u5b58\u50a8\u5373\u5b58\u7d22\u5f15\u53c8\u5b58\u8bb0\u5f55\u7684 B \u6811\uff0cB+\u6811\u7684\u975e\u53f6\u5b50\u8282\u70b9\u53ef\u4ee5\u5b58\u653e\u66f4\u591a\u7684\u7d22\u5f15\uff0c\u56e0\u6b64 B+ \u6811\u53ef\u4ee5\u6bd4 B \u6811\u66f4\u300c\u77ee\u80d6\u300d\uff0c\u67e5\u8be2\u5e95\u5c42\u8282\u70b9\u7684\u78c1\u76d8 I/O \u6b21\u6570\u4f1a\u66f4\u5c11\u3002</li> <li>B+ \u6811\u6709\u5927\u91cf\u7684\u5197\u4f59\u8282\u70b9\uff08\u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u5197\u4f59\u7d22\u5f15\uff09\uff0c\u8fd9\u4e9b\u5197\u4f59\u7d22\u5f15\u8ba9 B+ \u6811\u5728\u63d2\u5165\u3001\u5220\u9664\u7684\u6548\u7387\u90fd\u66f4\u9ad8\uff0c\u6bd4\u5982\u5220\u9664\u6839\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u50cf B \u6811\u90a3\u6837\u4f1a\u53d1\u751f\u590d\u6742\u7684\u6811\u7684\u53d8\u5316\uff1b</li> <li>B+ \u6811\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7528\u94fe\u8868\u8fde\u63a5\u4e86\u8d77\u6765\uff0c\u6709\u5229\u4e8e\u8303\u56f4\u67e5\u8be2\uff0c\u800c B \u6811\u8981\u5b9e\u73b0\u8303\u56f4\u67e5\u8be2\uff0c\u56e0\u6b64\u53ea\u80fd\u901a\u8fc7\u6811\u7684\u904d\u5386\u6765\u5b8c\u6210\u8303\u56f4\u67e5\u8be2\uff0c\u8fd9\u4f1a\u6d89\u53ca\u591a\u4e2a\u8282\u70b9\u7684\u78c1\u76d8 I/O \u64cd\u4f5c\uff0c\u8303\u56f4\u67e5\u8be2\u6548\u7387\u4e0d\u5982 B+ \u6811\u3002</li> </ol>","boost":2},{"location":"mysql/db_index/#count-count1","title":"count(*) \u548c count(1) \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u54ea\u4e2a\u6027\u80fd\u6700\u597d\uff1f","text":"<p>\u6309\u7167\u6027\u80fd\u6392\u5e8f\uff1a<code>count(*) = count(1) &gt; count(\u4e3b\u952e\u5b57\u6bb5) &gt; count(\u5b57\u6bb5)</code></p> <p>count(1)\u3001 count(*)\u3001 count(\u4e3b\u952e\u5b57\u6bb5)\u5728\u6267\u884c\u7684\u65f6\u5019\uff0c\u5982\u679c\u8868\u91cc\u5b58\u5728\u4e8c\u7ea7\u7d22\u5f15\uff0c\u4f18\u5316\u5668\u5c31\u4f1a\u9009\u62e9\u4e8c\u7ea7\u7d22\u5f15\u8fdb\u884c\u626b\u63cf\u3002</p> <p>\u5982\u679c\u8981\u6267\u884c count(1)\u3001 count(*)\u3001 count(\u4e3b\u952e\u5b57\u6bb5) \u65f6\uff0c\u5c3d\u91cf\u5728\u6570\u636e\u8868\u4e0a\u5efa\u7acb\u4e8c\u7ea7\u7d22\u5f15\uff0c\u8fd9\u6837\u4f18\u5316\u5668\u4f1a\u81ea\u52a8\u91c7\u7528 key_len \u6700\u5c0f\u7684\u4e8c\u7ea7\u7d22\u5f15\u8fdb\u884c\u626b\u63cf\uff0c\u76f8\u6bd4\u4e8e\u626b\u63cf\u4e3b\u952e\u7d22\u5f15\u6548\u7387\u4f1a\u9ad8\u4e00\u4e9b\u3002</p> <p>\u5c31\u662f\u4e0d\u8981\u4f7f\u7528 count(\u5b57\u6bb5) \u6765\u7edf\u8ba1\u8bb0\u5f55\u4e2a\u6570\uff0c\u56e0\u4e3a\u5b83\u7684\u6548\u7387\u662f\u6700\u5dee\u7684\uff0c\u4f1a\u91c7\u7528\u5168\u8868\u626b\u63cf\u7684\u65b9\u5f0f\u6765\u7edf\u8ba1\u3002\u5982\u679c\u4f60\u975e\u8981\u7edf\u8ba1\u8868\u4e2d\u8be5\u5b57\u6bb5\u4e0d\u4e3a NULL \u7684\u8bb0\u5f55\u4e2a\u6570\uff0c\u5efa\u8bae\u7ed9\u8fd9\u4e2a\u5b57\u6bb5\u5efa\u7acb\u4e00\u4e2a\u4e8c\u7ea7\u7d22\u5f15\u3002</p>","boost":2},{"location":"mysql/db_index/#count","title":"\u5982\u4f55\u4f18\u5316 count(*)\uff1f","text":"<ul> <li>\u8fd1\u4f3c\u503c\uff1a\u53ef\u4ee5\u4f7f\u7528 <code>show table status`` \u6216\u8005</code>explain`` \u547d\u4ee4\u6765\u8868\u8fdb\u884c\u4f30\u7b97\u3002</li> <li>\u989d\u5916\u8868\u4fdd\u5b58\u8ba1\u6570\u503c\uff1a\u60f3\u7cbe\u786e\u7684\u83b7\u53d6\u8868\u7684\u8bb0\u5f55\u603b\u6570\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u8ba1\u6570\u503c\u4fdd\u5b58\u5230\u5355\u72ec\u7684\u4e00\u5f20\u8ba1\u6570\u8868\u4e2d</li> </ul>","boost":2},{"location":"mysql/db_index/#_11","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding-\u7d22\u5f15\u5e38\u89c1\u9762\u8bd5\u9898</li> </ul>","boost":2},{"location":"mysql/lock/","title":"\u9501","text":"","boost":2},{"location":"mysql/lock/#_1","title":"\u6b7b\u9501","text":"<p>\u6b7b\u9501\u7684\u56db\u4e2a\u5fc5\u8981\u6761\u4ef6\uff1a\u4e92\u65a5\u3001\u5360\u6709\u4e14\u7b49\u5f85\u3001\u4e0d\u53ef\u5f3a\u5360\u7528\u3001\u5faa\u73af\u7b49\u5f85\u3002\u53ea\u8981\u7cfb\u7edf\u53d1\u751f\u6b7b\u9501\uff0c\u8fd9\u4e9b\u6761\u4ef6\u5fc5\u7136\u6210\u7acb\uff0c\u4f46\u662f\u53ea\u8981\u7834\u574f\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\u5c31\u6b7b\u9501\u5c31\u4e0d\u4f1a\u6210\u7acb\u3002</p>","boost":2},{"location":"mysql/lock/#_2","title":"\u5982\u4f55\u907f\u514d\u6b7b\u9501\uff1f","text":"<p>\u5728\u6570\u636e\u5e93\u5c42\u9762\uff0c\u6709\u4e24\u79cd\u7b56\u7565</p> <ul> <li>\u8bbe\u7f6e\u4e8b\u52a1\u7b49\u5f85\u9501\u7684\u8d85\u65f6\u65f6\u95f4\uff1a\u5f53\u4e00\u4e2a\u4e8b\u52a1\u7684\u7b49\u5f85\u65f6\u95f4\u8d85\u8fc7\u8be5\u503c\u540e\uff0c\u5c31\u5bf9\u8fd9\u4e2a\u4e8b\u52a1\u8fdb\u884c\u56de\u6eda\uff0c\u4e8e\u662f\u9501\u5c31\u91ca\u653e\u4e86\uff0c\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u4e86\u3002\u5728 InnoDB \u4e2d\uff0c\u53c2\u6570 <code>innodb_lock_wait_timeout</code> \u662f\u7528\u6765\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u7684\uff0c\u9ed8\u8ba4\u503c\u65f6 50 \u79d2\u3002</li> <li>\u5f00\u542f\u4e3b\u52a8\u6b7b\u9501\u68c0\u6d4b\uff1a\u4e3b\u52a8\u6b7b\u9501\u68c0\u6d4b\u5728\u53d1\u73b0\u6b7b\u9501\u540e\uff0c\u4e3b\u52a8\u56de\u6eda\u6b7b\u9501\u94fe\u6761\u4e2d\u7684\u67d0\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8ba9\u5176\u4ed6\u4e8b\u52a1\u5f97\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5c06\u53c2\u6570 innodb_deadlock_detect \u8bbe\u7f6e\u4e3a on\uff0c\u8868\u793a\u5f00\u542f\u8fd9\u4e2a\u903b\u8f91\uff0c\u9ed8\u8ba4\u5c31\u5f00\u542f\u3002</li> </ul> <pre><code>-- \u5f53\u53d1\u751f\u8d85\u65f6\u540e\uff0c\u5c31\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\u63d0\u793a\nERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction\n\n-- \u5f53\u68c0\u6d4b\u5230\u6b7b\u9501\u540e\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\u63d0\u793a\nERROR 1213 (40001): Deadlock found when trying to get lock; try restarting\n</code></pre>","boost":2},{"location":"mysql/lock/#_3","title":"\u6b7b\u9501\u68c0\u67e5\u5904\u7406","text":"<ol> <li>\u67e5\u770b\u4e8b\u52a1\u6267\u884c SQL \u8fc7\u7a0b\u4e2d\u52a0\u4e86\u4ec0\u4e48\u9501</li> </ol> <pre><code>select * from performance_schema.data_locks\\G\n</code></pre> <ol> <li>\u67e5\u770b\u6700\u8fd1\u4e00\u4e2a\u6b7b\u9501\u60c5\u51b5</li> </ol> <pre><code>mysql&gt; SHOW ENGINE INNODB STATUS;\n</code></pre>","boost":2},{"location":"mysql/log/","title":"\u65e5\u5fd7","text":"","boost":2},{"location":"mysql/log/#1-mysql","title":"1. MySQL \u4e09\u5927\u65e5\u5fd7","text":"<ul> <li>undo log\uff08\u56de\u6eda\u65e5\u5fd7\uff09\uff1a\u662f Innodb \u5b58\u50a8\u5f15\u64ce\u5c42\u751f\u6210\u7684\u65e5\u5fd7\uff0c\u5b9e\u73b0\u4e86\u4e8b\u52a1\u4e2d\u7684 \u539f\u5b50\u6027\uff0c\u4e3b\u8981\u7528\u4e8e \u4e8b\u52a1\u56de\u6eda\u548c MVCC\u3002</li> <li>redo log\uff08\u91cd\u505a\u65e5\u5fd7\uff09\uff1a\u662f Innodb \u5b58\u50a8\u5f15\u64ce\u5c42\u751f\u6210\u7684\u65e5\u5fd7\uff0c\u5b9e\u73b0\u4e86\u4e8b\u52a1\u4e2d\u7684 \u6301\u4e45\u6027\uff0c\u4e3b\u8981\u7528\u4e8e \u6389\u7535\u7b49\u6545\u969c\u6062\u590d\uff1b</li> <li>binlog \uff08\u5f52\u6863\u65e5\u5fd7\uff09\uff1a\u662f Server \u5c42\u751f\u6210\u7684\u65e5\u5fd7\uff0c\u4e3b\u8981\u7528\u4e8e \u6570\u636e\u5907\u4efd\u548c\u4e3b\u4ece\u590d\u5236\uff1b</li> </ul>","boost":2},{"location":"mysql/log/#2-undo-log","title":"2. undo log","text":"<p>\u6bcf\u5f53 InnoDB \u5f15\u64ce\u5bf9\u4e00\u6761\u8bb0\u5f55\u8fdb\u884c\u64cd\u4f5c\uff08\u4fee\u6539\u3001\u5220\u9664\u3001\u65b0\u589e\uff09\u65f6\uff0c\u8981\u628a\u56de\u6eda\u65f6\u9700\u8981\u7684\u4fe1\u606f\u90fd\u8bb0\u5f55\u5230 undo log \u91cc\u3002</p> <ul> <li>\u5728\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8981\u628a\u8fd9\u6761\u8bb0\u5f55\u7684\u4e3b\u952e\u503c\u8bb0\u4e0b\u6765\uff0c\u8fd9\u6837\u4e4b\u540e\u56de\u6eda\u65f6\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u4e3b\u952e\u503c\u5bf9\u5e94\u7684\u8bb0\u5f55\u5220\u6389\u5c31\u597d\u4e86\uff1b</li> <li>\u5728\u5220\u9664\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8981\u628a\u8fd9\u6761\u8bb0\u5f55\u4e2d\u7684\u5185\u5bb9\u90fd\u8bb0\u4e0b\u6765\uff0c\u8fd9\u6837\u4e4b\u540e\u56de\u6eda\u65f6\u518d\u628a\u7531\u8fd9\u4e9b\u5185\u5bb9\u7ec4\u6210\u7684\u8bb0\u5f55\u63d2\u5165\u5230\u8868\u4e2d\u5c31\u597d\u4e86\uff1b</li> <li>\u5728\u66f4\u65b0\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8981\u628a\u88ab\u66f4\u65b0\u7684\u5217\u7684\u65e7\u503c\u8bb0\u4e0b\u6765\uff0c\u8fd9\u6837\u4e4b\u540e\u56de\u6eda\u65f6\u518d\u628a\u8fd9\u4e9b\u5217\u66f4\u65b0\u4e3a\u65e7\u503c\u5c31\u597d\u4e86\u3002</li> </ul> <p>\u5728\u53d1\u751f\u56de\u6eda\u65f6\uff0c\u5c31\u8bfb\u53d6 undo log \u91cc\u7684\u6570\u636e\uff0c\u7136\u540e\u505a\u539f\u5148\u76f8\u53cd\u64cd\u4f5c\u3002\u6bd4\u5982\u5f53 delete \u4e00\u6761\u8bb0\u5f55\u65f6\uff0cundo log \u4e2d\u4f1a\u628a\u8bb0\u5f55\u4e2d\u7684\u5185\u5bb9\u90fd\u8bb0\u4e0b\u6765\uff0c\u7136\u540e\u6267\u884c\u56de\u6eda\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5c31\u8bfb\u53d6 undo log \u91cc\u7684\u6570\u636e\uff0c\u7136\u540e\u8fdb\u884c insert \u64cd\u4f5c\u3002</p>","boost":2},{"location":"mysql/log/#_1","title":"\u4e24\u5927\u4f5c\u7528","text":"<ul> <li>\u5b9e\u73b0\u4e8b\u52a1\u56de\u6eda\uff0c\u4fdd\u969c\u4e8b\u52a1\u7684\u539f\u5b50\u6027\u3002\u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u9519\u8bef\u6216\u8005\u7528\u6237\u6267 \u884c\u4e86 ROLLBACK \u8bed\u53e5\uff0cMySQL \u53ef\u4ee5\u5229\u7528 undo log \u4e2d\u7684\u5386\u53f2\u6570\u636e\u5c06\u6570\u636e\u6062\u590d\u5230\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u7684\u72b6\u6001\u3002</li> <li>\u5b9e\u73b0 MVCC\uff08\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff09\u5173\u952e\u56e0\u7d20\u4e4b\u4e00\u3002MVCC \u662f\u901a\u8fc7 ReadView + undo log \u5b9e\u73b0\u7684\u3002undo log \u4e3a\u6bcf\u6761\u8bb0\u5f55\u4fdd\u5b58\u591a\u4efd\u5386\u53f2\u6570\u636e\uff0cMySQL \u5728\u6267\u884c\u5feb\u7167\u8bfb\uff08\u666e\u901a select \u8bed\u53e5\uff09\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e\u4e8b\u52a1\u7684 Read View \u91cc\u7684\u4fe1\u606f\uff0c\u987a\u7740 undo log \u7684\u7248\u672c\u94fe\u627e\u5230\u6ee1\u8db3\u5176\u53ef\u89c1\u6027\u7684\u8bb0\u5f55\u3002</li> </ul> <p>undo log \u662f\u5982\u4f55\u5237\u76d8\uff08\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff09\u7684\uff1f</p> <p>undo log \u548c\u6570\u636e\u9875\u7684\u5237\u76d8\u7b56\u7565\u662f\u4e00\u6837\u7684\uff0c\u90fd\u9700\u8981\u901a\u8fc7 redo log \u4fdd\u8bc1\u6301\u4e45\u5316\u3002</p> <p>buffer pool \u4e2d\u6709 undo \u9875\uff0c\u5bf9 undo \u9875\u7684\u4fee\u6539\u4e5f\u90fd\u4f1a\u8bb0\u5f55\u5230 redo log\u3002redo log \u4f1a\u6bcf\u79d2\u5237\u76d8\uff0c\u63d0\u4ea4\u4e8b\u52a1\u65f6\u4e5f\u4f1a\u5237\u76d8\uff0c\u6570\u636e\u9875\u548c undo \u9875\u90fd\u662f\u9760\u8fd9\u4e2a\u673a\u5236\u4fdd\u8bc1\u6301\u4e45\u5316\u7684\u3002</p>","boost":2},{"location":"mysql/log/#3-buffer-pool","title":"3. Buffer Pool","text":"<p>Innodb \u5b58\u50a8\u5f15\u64ce\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7f13\u51b2\u6c60\uff08Buffer Pool\uff09\uff0c\u6765\u63d0\u9ad8\u6570\u636e\u5e93\u7684\u8bfb\u5199\u6027\u80fd\u3002</p> <p>\u6709\u4e86 Buffer Poo \u540e\uff1a</p> <ul> <li>\u5f53\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u5982\u679c\u6570\u636e\u5b58\u5728\u4e8e Buffer Pool \u4e2d\uff0c\u5ba2\u6237\u7aef\u5c31\u4f1a\u76f4\u63a5\u8bfb\u53d6 Buffer Pool \u4e2d\u7684\u6570\u636e\uff0c\u5426\u5219\u518d\u53bb\u78c1\u76d8\u4e2d\u8bfb\u53d6\u3002</li> <li>\u5f53\u4fee\u6539\u6570\u636e\u65f6\uff0c\u5982\u679c\u6570\u636e\u5b58\u5728\u4e8e Buffer Pool \u4e2d\uff0c\u90a3\u76f4\u63a5\u4fee\u6539 Buffer Pool \u4e2d\u6570\u636e\u6240\u5728\u7684\u9875\uff0c\u7136\u540e\u5c06\u5176\u9875\u8bbe\u7f6e\u4e3a\u810f\u9875\uff08\u8be5\u9875\u7684\u5185\u5b58\u6570\u636e\u548c\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5df2\u7ecf\u4e0d\u4e00\u81f4\uff09\uff0c\u4e3a\u4e86\u51cf\u5c11\u78c1\u76d8 I/O\uff0c\u4e0d\u4f1a\u7acb\u5373\u5c06\u810f\u9875\u5199\u5165\u78c1\u76d8\uff0c\u540e\u7eed\u7531\u540e\u53f0\u7ebf\u7a0b\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u65f6\u673a\u5c06\u810f\u9875\u5199\u5165\u5230\u78c1\u76d8\u3002</li> </ul> <p>\u5728 MySQL \u542f\u52a8\u7684\u65f6\u5019\uff0cInnoDB \u4f1a\u4e3a Buffer Pool \u7533\u8bf7\u4e00\u7247\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u6309\u7167\u9ed8\u8ba4\u7684  16KB  \u7684\u5927\u5c0f\u5212\u5206\u51fa\u4e00\u4e2a\u4e2a\u7684\u9875\uff0c Buffer Pool \u4e2d\u7684\u9875\u5c31\u53eb\u505a\u7f13\u5b58\u9875\u3002\u6b64\u65f6\u8fd9\u4e9b\u7f13\u5b58\u9875\u90fd\u662f\u7a7a\u95f2\u7684\uff0c\u4e4b\u540e\u968f\u7740\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u624d\u4f1a\u6709\u78c1\u76d8\u4e0a\u7684\u9875\u88ab\u7f13\u5b58\u5230 Buffer Pool \u4e2d\u3002</p> <p>Buffer Pool \u9664\u4e86\u7f13\u5b58\u300c\u7d22\u5f15\u9875\u300d\u548c\u300c\u6570\u636e\u9875\u300d\uff0c\u8fd8\u5305\u62ec\u4e86 Undo \u9875\uff0c\u63d2\u5165\u7f13\u5b58\u3001\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15\u3001\u9501\u4fe1\u606f\u7b49\u7b49\u3002</p> <p>WAL \uff08Write-Ahead Logging\uff09\u6280\u672f</p> <p>InnoDB \u5f15\u64ce\u4f1a\u5728\u9002\u5f53\u7684\u65f6\u5019\uff0c\u7531\u540e\u53f0\u7ebf\u7a0b\u5c06\u7f13\u5b58\u5728 Buffer Pool \u7684\u810f\u9875\u5237\u65b0\u5230\u78c1\u76d8\u91cc\uff0c\u8fd9\u5c31\u662f WAL \uff08Write-Ahead Logging\uff09\u6280\u672f\u3002</p> <p>WAL \u6280\u672f\u6307\u7684\u662f\uff0c MySQL \u7684\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u7acb\u523b\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u662f\u5148\u5199\u65e5\u5fd7\uff0c\u7136\u540e\u5728\u5408\u9002\u7684\u65f6\u95f4\u518d\u5199\u5230\u78c1\u76d8\u4e0a\u3002</p>","boost":2},{"location":"mysql/log/#4-redo-log","title":"4. redo log","text":"<p>\u4ec0\u4e48\u662f redo log\uff1f</p> <p>redo log\uff08\u91cd\u505a\u65e5\u5fd7\uff09\u662fInnoDB\u5b58\u50a8\u5f15\u64ce\u72ec\u6709\u7684\uff0c\u5b83\u8ba9MySQL\u62e5\u6709\u4e86\u5d29\u6e83\u6062\u590d\u80fd\u529b\u3002</p> <p>redo log \u662f\u7269\u7406\u65e5\u5fd7\uff0c\u8bb0\u5f55\u4e86\u67d0\u4e2a\u6570\u636e\u9875\u505a\u4e86\u4ec0\u4e48\u4fee\u6539\uff0c\u6bd4\u5982\u5bf9 XXX \u8868\u7a7a\u95f4\u4e2d\u7684 YYY \u6570\u636e\u9875 ZZZ \u504f\u79fb\u91cf\u7684\u5730\u65b9\u505a\u4e86 AAA \u66f4\u65b0\uff0c\u6bcf\u5f53\u6267\u884c\u4e00\u4e2a\u4e8b\u52a1\u5c31\u4f1a\u4ea7\u751f\u8fd9\u6837\u7684\u4e00\u6761\u6216\u8005\u591a\u6761\u7269\u7406\u65e5\u5fd7\u3002</p> <p>\u5728\u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0c\u53ea\u8981\u5148\u5c06 redo log \u6301\u4e45\u5316\u5230\u78c1\u76d8\u5373\u53ef\uff0c\u53ef\u4ee5\u4e0d\u9700\u8981\u7b49\u5230\u5c06\u7f13\u5b58\u5728 Buffer Pool \u91cc\u7684\u810f\u9875\u6570\u636e\u6301\u4e45\u5316\u5230\u78c1\u76d8\u3002</p> <p>\u5f53\u7cfb\u7edf\u5d29\u6e83\u65f6\uff0c\u867d\u7136\u810f\u9875\u6570\u636e\u6ca1\u6709\u6301\u4e45\u5316\uff0c\u4f46\u662f redo log \u5df2\u7ecf\u6301\u4e45\u5316\uff0c\u63a5\u7740 MySQL \u91cd\u542f\u540e\uff0c\u53ef\u4ee5\u6839\u636e redo log \u7684\u5185\u5bb9\uff0c\u5c06\u6240\u6709\u6570\u636e\u6062\u590d\u5230\u6700\u65b0\u7684\u72b6\u6001\u3002</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981 redo log\uff1f</p> <ul> <li>\u5b9e\u73b0\u4e8b\u52a1\u7684\u6301\u4e45\u6027\uff0c\u8ba9 MySQL \u6709 crash-safe \u7684\u80fd\u529b\uff0c\u80fd\u591f\u4fdd\u8bc1 MySQL \u5728\u4efb\u4f55\u65f6\u95f4\u6bb5\u7a81\u7136\u5d29\u6e83\uff0c\u91cd\u542f\u540e\u4e4b\u524d\u5df2\u63d0\u4ea4\u7684\u8bb0\u5f55\u90fd\u4e0d\u4f1a\u4e22\u5931\uff1b</li> <li>\u5c06\u5199\u64cd\u4f5c\u4ece\u300c\u968f\u673a\u5199\u300d\u53d8\u6210\u4e86\u300c\u987a\u5e8f\u5199\u300d\uff0c\u63d0\u5347 MySQL \u5199\u5165\u78c1\u76d8\u7684\u6027\u80fd\u3002</li> </ul>","boost":2},{"location":"mysql/log/#redo-log-undo-log","title":"redo log \u548c undo log \u533a\u522b\u5728\u54ea\uff1f","text":"<p>\u4e24\u79cd\u65e5\u5fd7\u662f\u5c5e\u4e8e InnoDB \u5b58\u50a8\u5f15\u64ce\u7684\u65e5\u5fd7\uff0c\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li>redo log \u8bb0\u5f55\u4e86\u6b64\u6b21\u4e8b\u52a1\u300c\u5b8c\u6210\u540e\u300d\u7684\u6570\u636e\u72b6\u6001\uff0c\u8bb0\u5f55\u7684\u662f\u66f4\u65b0\u4e4b\u540e\u7684\u503c\uff1b</li> <li>undo log \u8bb0\u5f55\u4e86\u6b64\u6b21\u4e8b\u52a1\u300c\u5f00\u59cb\u524d\u300d\u7684\u6570\u636e\u72b6\u6001\uff0c\u8bb0\u5f55\u7684\u662f\u66f4\u65b0\u4e4b\u524d\u7684\u503c\uff1b</li> </ul> <p>\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u53d1\u751f\u4e86\u5d29\u6e83\uff0c\u91cd\u542f\u540e\u4f1a\u901a\u8fc7 undo log \u56de\u6eda\u4e8b\u52a1\uff0c\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\u53d1\u751f\u4e86\u5d29\u6e83\uff0c\u91cd\u542f\u540e\u4f1a\u901a\u8fc7 redo log \u6062\u590d\u4e8b\u52a1</p>","boost":2},{"location":"mysql/log/#redo-log","title":"redo log \u662f\u76f4\u63a5\u5199\u5165\u78c1\u76d8\u7684\u5417\uff1f","text":"<p>redo log \u4e5f\u6709\u81ea\u5df1\u7684\u7f13\u5b58\u2014\u2014 redo log buffer\uff0c\u6bcf\u5f53\u4ea7\u751f\u4e00\u6761 redo log \u65f6\uff0c\u4f1a\u5148\u5199\u5165\u5230 redo log buffer\uff0c\u540e\u7eed\u5728\u6301\u4e45\u5316\u5230\u78c1\u76d8\u3002</p>","boost":2},{"location":"mysql/log/#redo-log_1","title":"redo log \u4ec0\u4e48\u65f6\u5019\u5237\u76d8\uff1f","text":"","boost":2},{"location":"mysql/log/#5-binlog","title":"5. binlog","text":"<p>MySQL \u5728\u5b8c\u6210\u4e00\u6761\u66f4\u65b0\u64cd\u4f5c\u540e\uff0cServer \u5c42\u8fd8\u4f1a\u751f\u6210\u4e00\u6761 binlog\uff0c\u7b49\u4e4b\u540e\u4e8b\u52a1\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u8be5\u4e8b\u7269\u6267\u884c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u6240\u6709 binlog \u7edf\u4e00\u5199 \u5165 binlog \u6587\u4ef6\u3002</p> <p>binlog \u6587\u4ef6\u662f\u8bb0\u5f55\u4e86\u6240\u6709\u6570\u636e\u5e93\u8868\u7ed3\u6784\u53d8\u66f4\u548c\u8868\u6570\u636e\u4fee\u6539\u7684\u65e5\u5fd7\uff0c\u4e0d\u4f1a\u8bb0\u5f55\u67e5\u8be2\u7c7b\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982 SELECT \u548c SHOW \u64cd\u4f5c\u3002</p>","boost":2},{"location":"mysql/log/#redo-log-bin-log","title":"redo log \u548c bin log \u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>1\u3001\u9002\u7528\u5bf9\u8c61\u4e0d\u540c\uff1a</p> <ul> <li>binlog \u662f MySQL \u7684 Server \u5c42\u5b9e\u73b0\u7684\u65e5\u5fd7\uff0c\u6240\u6709\u5b58\u50a8\u5f15\u64ce\u90fd\u53ef\u4ee5\u4f7f\u7528\uff1b</li> <li>redo log \u662f Innodb \u5b58\u50a8\u5f15\u64ce\u5b9e\u73b0\u7684\u65e5\u5fd7\uff1b</li> </ul> <p>2\u3001\u6587\u4ef6\u683c\u5f0f\u4e0d\u540c\uff1a</p> <ul> <li>binlog \u6709 3 \u79cd\u683c\u5f0f\u7c7b\u578b\uff0c\u5206\u522b\u662f STATEMENT\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3001ROW\u3001 MIXED.</li> <li>redo log \u662f\u7269\u7406\u65e5\u5fd7\uff0c\u8bb0\u5f55\u7684\u662f\u5728\u67d0\u4e2a\u6570\u636e\u9875\u505a\u4e86\u4ec0\u4e48\u4fee\u6539\uff0c\u6bd4\u5982\u5bf9 XXX \u8868\u7a7a\u95f4\u4e2d\u7684 YYY \u6570\u636e\u9875 ZZZ \u504f\u79fb\u91cf\u7684\u5730\u65b9\u505a\u4e86 AAA \u66f4\u65b0\uff1b</li> </ul> <p>3\u3001\u5199\u5165\u65b9\u5f0f\u4e0d\u540c\uff1a</p> <ul> <li>binlog \u662f\u8ffd\u52a0\u5199\uff0c\u5199\u6ee1\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7ee7\u7eed\u5199\uff0c\u4e0d\u4f1a\u8986\u76d6\u4ee5\u524d\u7684\u65e5\u5fd7\uff0c\u4fdd\u5b58\u7684\u662f\u5168\u91cf\u7684\u65e5\u5fd7\u3002</li> <li>redo log \u662f\u5faa\u73af\u5199\uff0c\u65e5\u5fd7\u7a7a\u95f4\u5927\u5c0f\u662f\u56fa\u5b9a\uff0c\u5168\u90e8\u5199\u6ee1\u5c31\u4ece\u5934\u5f00\u59cb\uff0c\u4fdd\u5b58\u672a\u88ab\u5237\u5165\u78c1\u76d8\u7684\u810f\u9875\u65e5\u5fd7\u3002</li> </ul> <p>4\u3001\u7528\u9014\u4e0d\u540c\uff1a</p> <ul> <li>binlog \u7528\u4e8e\u5907\u4efd\u6062\u590d\u3001\u4e3b\u4ece\u590d\u5236\uff1b</li> <li>redo log \u7528\u4e8e\u6389\u7535\u7b49\u6545\u969c\u6062\u590d\u3002</li> </ul>","boost":2},{"location":"mysql/log/#binlog","title":"binlog \u4ec0\u4e48\u65f6\u5019\u5237\u76d8\uff1f","text":"<p>\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5148\u628a\u65e5\u5fd7\u5199\u5230 binlog cache\uff08Server \u5c42\u7684 cache\uff09\uff0c\u4e8b\u52a1\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u518d\u628a binlog cache \u5199\u5230 binlog \u6587\u4ef6\u4e2d\u3002</p>","boost":2},{"location":"mysql/log/#6","title":"6. \u4e3a\u4ec0\u4e48\u9700\u8981\u4e24\u9636\u6bb5\u63d0\u4ea4\uff1f","text":"<p>\u4e8b\u52a1\u63d0\u4ea4\u540e\uff0credo log \u548c binlog \u90fd\u8981\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u662f\u72ec\u7acb\u7684\u903b\u8f91\uff0c\u53ef\u80fd\u51fa\u73b0\u534a\u6210\u529f\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e24\u4efd\u65e5\u5fd7\u4e4b\u95f4\u7684\u903b\u8f91\u4e0d\u4e00\u81f4\u3002</p> <p>\u5728\u6301\u4e45\u5316 redo log \u548c binlog \u8fd9\u4e24\u4efd\u65e5\u5fd7\u7684\u65f6\u5019\uff0c\u5982\u679c\u51fa\u73b0\u534a\u6210\u529f\u7684\u72b6\u6001\uff0c\u5c31\u4f1a\u9020\u6210\u4e3b\u4ece\u73af\u5883\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u3002\u8fd9\u662f\u56e0\u4e3a redo log \u5f71\u54cd\u4e3b\u5e93\u7684\u6570\u636e\uff0cbinlog \u5f71\u54cd\u4ece\u5e93\u7684\u6570\u636e\uff0c\u6240\u4ee5 redo log \u548c binlog \u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u624d\u80fd\u4fdd\u8bc1\u4e3b\u4ece\u6570\u636e\u4e00\u81f4\u3002</p> <p>MySQL \u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u4e24\u4efd\u65e5\u5fd7\u4e4b\u95f4\u7684\u903b\u8f91\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u4f7f\u7528\u4e86\u300c\u4e24\u9636\u6bb5\u63d0\u4ea4\u300d\u6765\u89e3\u51b3\uff0c\u4e24\u9636\u6bb5\u63d0\u4ea4\u5176\u5b9e\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u591a\u4e2a\u903b\u8f91\u64cd\u4f5c\u8981\u4e0d\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e0d\u5168\u90e8\u5931\u8d25\uff0c\u4e0d\u4f1a\u51fa\u73b0\u534a\u6210\u529f\u7684\u72b6\u6001\u3002</p> <p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u628a\u5355\u4e2a\u4e8b\u52a1\u7684\u63d0\u4ea4\u62c6\u5206\u6210\u4e86 2 \u4e2a\u9636\u6bb5\uff0c\u5206\u522b\u662f\u300c\u51c6\u5907\uff08Prepare\uff09\u9636\u6bb5\u300d\u548c\u300c\u63d0\u4ea4\uff08Commit\uff09\u9636\u6bb5\u300d\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u7531\u534f\u8c03\u8005\uff08Coordinator\uff09\u548c\u53c2\u4e0e\u8005\uff08Participant\uff09\u5171\u540c\u5b8c\u6210\u3002</p>","boost":2},{"location":"mysql/log/#_2","title":"\u4e24\u9636\u6bb5\u63d0\u4ea4\u7684\u8fc7\u7a0b","text":"<p>\u4e8b\u52a1\u7684\u63d0\u4ea4\u8fc7\u7a0b\u6709\u4e24\u4e2a\u9636\u6bb5\uff0c\u5c31\u662f\u5c06 redo log \u7684\u5199\u5165\u62c6\u6210\u4e86\u4e24\u4e2a\u6b65\u9aa4\uff1aprepare \u548c commit\uff0c\u4e2d\u95f4\u518d\u7a7f\u63d2\u5199\u5165 binlog\uff0c\u5177\u4f53\u5982\u4e0b\uff1a</p> <ul> <li>prepare \u9636\u6bb5\uff1a\u5c06 XID\uff08\u5185\u90e8 XA \u4e8b\u52a1\u7684 ID\uff09 \u5199\u5165\u5230 redo log\uff0c\u540c\u65f6\u5c06 redo log \u5bf9\u5e94\u7684\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3a prepare\uff0c\u7136\u540e\u5c06 redo log \u6301\u4e45\u5316\u5230\u78c1\u76d8\uff08<code>innodb_flush_log_at_trx_commit = 1</code> \u7684\u4f5c\u7528\uff09\uff1b</li> <li>commit \u9636\u6bb5\uff1a\u628a XID \u5199\u5165\u5230 binlog\uff0c\u7136\u540e\u5c06 binlog \u6301\u4e45\u5316\u5230\u78c1\u76d8\uff08<code>sync_binlog = 1</code> \u7684\u4f5c\u7528\uff09\uff0c\u63a5\u7740\u8c03\u7528\u5f15\u64ce\u7684\u63d0\u4ea4\u4e8b\u52a1\u63a5\u53e3\uff0c\u5c06 redo log \u72b6\u6001\u8bbe\u7f6e\u4e3a commit\uff0c\u6b64\u65f6\u8be5\u72b6\u6001\u5e76\u4e0d\u9700\u8981\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff0c\u53ea\u9700\u8981 write \u5230\u6587\u4ef6\u7cfb\u7edf\u7684 page cache \u4e2d\u5c31\u591f\u4e86\uff0c\u56e0\u4e3a\u53ea\u8981 binlog \u5199\u78c1\u76d8\u6210\u529f\uff0c\u5c31\u7b97 redo log \u7684\u72b6\u6001\u8fd8\u662f prepare \u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u4e00\u6837\u4f1a\u88ab\u8ba4\u4e3a\u4e8b\u52a1\u5df2\u7ecf\u6267\u884c\u6210\u529f\uff1b</li> </ul> <p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u662f\u4ee5 binlog \u5199\u6210\u529f\u4e3a\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\u7684\u6807\u8bc6\uff0c\u56e0\u4e3a binlog \u5199\u6210\u529f\u4e86\uff0c\u5c31\u610f\u5473\u7740\u80fd\u5728 binlog \u4e2d\u67e5\u627e\u5230\u4e0e redo log \u76f8\u540c\u7684 XID\u3002</p> <p>\u4e8b\u52a1\u6ca1\u63d0\u4ea4\u7684\u65f6\u5019\uff0credo log \u4e5f\u662f\u53ef\u80fd\u88ab\u6301\u4e45\u5316\u5230\u78c1\u76d8\u7684\u3002</p>","boost":2},{"location":"mysql/log/#_3","title":"\u4e24\u9636\u6bb5\u63d0\u4ea4\u6709\u4ec0\u4e48\u95ee\u9898\uff1f","text":"<p>\u4e24\u9636\u6bb5\u63d0\u4ea4\u867d\u7136\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u4f46\u662f\u6027\u80fd\u5f88\u5dee\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u9762\u7684\u5f71\u54cd\uff1a\u78c1\u76d8 I/O \u6b21\u6570\u9ad8\uff08\u81f3\u5c11 2 \u6b21\u5237\u76d8\uff0c\u4e00\u6b21 redo log \u8f93\u76d8\uff0c\u4e00\u6b21 bing log \u843d\u76d8\uff09 \u548c \u9501\u7ade\u4e89\u6fc0\u70c8\uff08\u591a\u4e8b\u52a1\u52a0\u9501\u4fdd\u8bc1\u65e5\u5fd7\u63d0\u4ea4\u987a\u5e8f\u4e00\u81f4\uff09\u3002</p> <p>MySQL \u5f15\u5165\u4e86 binlog \u7ec4\u63d0\u4ea4\uff08group commit\uff09\u673a\u5236\uff0c\u5f53\u6709\u591a\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u591a\u4e2a binlog \u5237\u76d8\u64cd\u4f5c\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u4ece\u800c\u51cf\u5c11\u78c1\u76d8 I/O \u7684\u6b21\u6570\u3002</p>","boost":2},{"location":"mysql/log/#7-mysql-io","title":"7. MySQL \u78c1\u76d8 I/O \u5f88\u9ad8\uff0c\u4f18\u5316\u65b9\u6cd5","text":"<ul> <li>\u8bbe\u7f6e\u7ec4\u63d0\u4ea4\u7684\u4e24\u4e2a\u53c2\u6570\uff1a <code>binlog_group_commit_sync_delay</code> \u548c <code>binlog_group_commit_sync_no_delay_count</code> \u53c2\u6570\uff0c\u5ef6\u8fdf binlog \u5237\u76d8\u7684\u65f6\u673a\uff0c\u4ece\u800c\u51cf\u5c11 binlog \u7684\u5237\u76d8\u6b21\u6570\u3002</li> <li>\u5c06 sync_binlog \u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u7684\u503c\uff08\u6bd4\u8f83\u5e38\u89c1\u662f 100~1000\uff09\uff0c\u8868\u793a\u6bcf\u6b21\u63d0\u4ea4\u4e8b\u52a1\u90fd write\uff0c\u4f46\u7d2f\u79ef N \u4e2a\u4e8b\u52a1\u540e\u624d fsync\uff0c\u76f8\u5f53\u4e8e\u5ef6\u8fdf\u4e86 binlog \u5237\u76d8\u7684\u65f6\u673a\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u98ce\u9669\u662f\uff0c\u4e3b\u673a\u6389\u7535\u65f6\u4f1a\u4e22 N \u4e2a\u4e8b\u52a1\u7684 binlog \u65e5\u5fd7\u3002</li> <li>\u5c06 <code>innodb_flush_log_at_trx_commit</code> \u8bbe\u7f6e\u4e3a 2\u3002\u8868\u793a\u6bcf\u6b21\u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0c\u90fd\u53ea\u662f\u7f13\u5b58\u5728 redo log buffer \u91cc\u7684 redo log \u5199\u5230 redo log \u6587\u4ef6\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u98ce\u9669\u662f\uff0c\u4e3b\u673a\u6389\u7535\u7684\u65f6\u5019\u4f1a\u4e22\u6570\u636e\u3002</li> </ul>","boost":2},{"location":"mysql/log/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding: \u56fe\u89e3 MySQL-\u65e5\u5fd7\u7bc7</li> </ul>","boost":2},{"location":"mysql/transaction/","title":"\u4e8b\u52a1","text":"<p>\u4e8b\u52a1\u7684\u5b9a\u4e49\u5f88\u4e25\u683c\uff0c\u5b83\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u56db\u4e2a\u7279\u6027\uff0c\u5373\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u548c\u6301\u4e45\u6027\uff0c\u4e5f\u5c31\u662f\u4eba\u4eec\u4fd7\u79f0\u7684 ACID \u7279\u6027\uff0c\u5177\u4f53\u5982\u4e0b</p>","boost":2},{"location":"mysql/transaction/#_1","title":"\u5e76\u884c\u4e8b\u52a1\u5f15\u53d1\u7684\u95ee\u9898","text":"<p>\u4e25\u91cd\u6027\u6392\u5e8f: \u810f\u8bfb &gt; \u4e0d\u53ef\u91cd\u590d\u8bfb &gt; \u5e7b\u8bfb</p> \u95ee\u9898 \u8bf4\u660e \u6982\u8981 \u810f\u8bfb \u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u300c\u8bfb\u5230\u300d\u4e86\u53e6\u4e00\u4e2a\u300c\u672a\u63d0\u4ea4\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e\u300d\uff0c\u5c31\u610f\u5473\u7740\u53d1\u751f\u4e86\u300c\u810f\u8bfb\u300d\u73b0\u8c61\u3002 \u8bfb\u5230\u5176\u4ed6\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff1b \u4e0d\u53ef\u91cd\u590d\u8bfb \u5728\u4e00\u4e2a\u4e8b\u52a1\u5185\u591a\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679c\u51fa\u73b0\u524d\u540e\u4e24\u6b21\u8bfb\u5230\u7684\u6570\u636e\u4e0d\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u5c31\u610f\u5473\u7740\u53d1\u751f\u4e86\u300c\u4e0d\u53ef\u91cd\u590d\u8bfb\u300d\u73b0\u8c61\u3002 \u524d\u540e\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u4e00\u81f4\uff1b \u5e7b\u8bfb \u5728\u4e00\u4e2a\u4e8b\u52a1\u5185\u591a\u6b21\u67e5\u8be2\u67d0\u4e2a\u7b26\u5408\u67e5\u8be2\u6761\u4ef6\u7684\u300c\u8bb0\u5f55\u6570\u91cf\u300d\uff0c\u5982\u679c\u51fa\u73b0\u524d\u540e\u4e24\u6b21\u67e5\u8be2\u5230\u7684\u8bb0\u5f55\u6570\u91cf\u4e0d\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u5c31\u610f\u5473\u7740\u53d1\u751f\u4e86\u300c\u5e7b\u8bfb\u300d\u73b0\u8c61\u3002 \u524d\u540e\u8bfb\u53d6\u7684\u8bb0\u5f55\u6570\u91cf\u4e0d\u4e00\u81f4\u3002","boost":2},{"location":"mysql/transaction/#_2","title":"\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b","text":"<ul> <li>\u8bfb\u672a\u63d0\u4ea4\uff08read uncommitted\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u63d0\u4ea4\u65f6\uff0c\u5b83\u505a\u7684\u53d8\u66f4\u5c31\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u770b\u5230\uff1b</li> <li>\u8bfb\u63d0\u4ea4\uff08read committed\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\uff0c\u5b83\u505a\u7684\u53d8\u66f4\u624d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u770b\u5230\uff1b</li> <li>\u53ef\u91cd\u590d\u8bfb\uff08repeatable read\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\u770b\u5230\u7684\u6570\u636e\uff0c\u4e00\u76f4\u8ddf\u8fd9\u4e2a\u4e8b\u52a1\u542f\u52a8\u65f6\u770b\u5230\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0cMySQL InnoDB \u5f15\u64ce\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\uff1b</li> <li>\u4e32\u884c\u5316\uff08serializable\u00a0\uff09\uff1b\u4f1a\u5bf9\u8bb0\u5f55\u52a0\u4e0a\u8bfb\u5199\u9501\uff0c\u5728\u591a\u4e2a\u4e8b\u52a1\u5bf9\u8fd9\u6761\u8bb0\u5f55\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u53d1\u751f\u4e86\u8bfb\u5199\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u540e\u8bbf\u95ee\u7684\u4e8b\u52a1\u5fc5\u987b\u7b49\u524d\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u7ee7\u7eed\u6267\u884c</li> </ul> <p>\u6309\u9694\u79bb\u6c34\u5e73\u9ad8\u4f4e\u6392\u5e8f\u5982\u4e0b</p> <p></p> <p>\u9488\u5bf9\u4e0d\u540c\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u5e76\u53d1\u4e8b\u52a1\u65f6\u53ef\u80fd\u53d1\u751f\u7684\u73b0\u8c61\u4e5f\u4f1a\u4e0d\u540c\u3002</p> <p></p> <ul> <li>\u5728\u300c\u8bfb\u672a\u63d0\u4ea4\u300d\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u53ef\u80fd\u53d1\u751f\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u73b0\u8c61\uff1b</li> <li>\u5728\u300c\u8bfb\u63d0\u4ea4\u300d\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u53ef\u80fd\u53d1\u751f\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u73b0\u8c61\uff0c\u4f46\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u810f\u8bfb\u73b0\u8c61\uff1b</li> <li>\u5728\u300c\u53ef\u91cd\u590d\u8bfb\u300d\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u53ef\u80fd\u53d1\u751f\u5e7b\u8bfb\u73b0\u8c61\uff0c\u4f46\u662f\u4e0d\u53ef\u80fd\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\u73b0\u8c61\uff1b</li> <li>\u5728\u300c\u4e32\u884c\u5316\u300d\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u73b0\u8c61\u90fd\u4e0d\u53ef\u80fd\u4f1a\u53d1\u751f\u3002</li> </ul> <p>mysql \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u8bed\u53e5\u6765\u67e5\u8be2\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b</p> <pre><code>select @@global.transaction_isolation,@@transaction_isolation;\n</code></pre>","boost":2},{"location":"mysql/transaction/#_3","title":"\u53ef\u91cd\u590d\u8bfb\u65f6\u5982\u4f55\u907f\u514d\u5e7b\u8bfb\u7684\uff1f","text":"<p>MySQL InnoDB \u5f15\u64ce\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\u867d\u7136\u662f\u300c\u53ef\u91cd\u590d\u8bfb\u300d\uff0c\u4f46\u662f\u5b83\u5f88\u5927\u7a0b\u5ea6\u4e0a\u907f\u514d\u5e7b\u8bfb\u73b0\u8c61\uff08\u5e76\u4e0d\u662f\u5b8c\u5168\u89e3\u51b3\u4e86\uff09\uff0c\u89e3\u51b3\u7684\u65b9\u6848\u6709\u4e24\u79cd\uff1a</p> <ul> <li>\u9488\u5bf9\u5feb\u7167\u8bfb\uff08\u666e\u901a select \u8bed\u53e5\uff09\uff0c\u662f \u901a\u8fc7 MVCC \u65b9\u5f0f\u89e3\u51b3\u4e86\u5e7b\u8bfb \uff0c\u56e0\u4e3a\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\u770b\u5230\u7684\u6570\u636e\uff0c\u4e00\u76f4\u8ddf\u8fd9\u4e2a\u4e8b\u52a1\u542f\u52a8\u65f6\u770b\u5230\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u5373\u4f7f\u4e2d\u9014\u6709\u5176\u4ed6\u4e8b\u52a1\u63d2\u5165\u4e86\u4e00\u6761\u6570\u636e\uff0c\u662f\u67e5\u8be2\u4e0d\u51fa\u6765\u8fd9\u6761\u6570\u636e\u7684\uff0c\u6240\u4ee5\u5c31\u5f88\u597d\u4e86\u907f\u514d\u5e7b\u8bfb\u95ee\u9898\u3002</li> <li>\u9488\u5bf9\u5f53\u524d\u8bfb\uff08<code>select ... for update</code> \u7b49\u8bed\u53e5\uff09\uff0c\u662f \u901a\u8fc7 next-key lock\uff08\u8bb0\u5f55\u9501+\u95f4\u9699\u9501\uff09\u65b9\u5f0f\u89e3\u51b3\u4e86\u5e7b\u8bfb \uff0c\u56e0\u4e3a\u5f53\u6267\u884c <code>select ... for update</code> \u8bed\u53e5\u7684\u65f6\u5019\uff0c\u4f1a\u52a0\u4e0a next-key lock\uff0c\u5982\u679c\u6709\u5176\u4ed6\u4e8b\u52a1\u5728 next-key lock \u9501\u8303\u56f4\u5185\u63d2\u5165\u4e86\u4e00\u6761\u8bb0\u5f55\uff0c\u90a3\u4e48\u8fd9\u4e2a\u63d2\u5165\u8bed\u53e5\u5c31\u4f1a\u88ab\u963b\u585e\uff0c\u65e0\u6cd5\u6210\u529f\u63d2\u5165\uff0c\u6240\u4ee5\u5c31\u5f88\u597d\u4e86\u907f\u514d\u5e7b\u8bfb\u95ee\u9898\u3002</li> </ul> <p>\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\u867d\u7136\u5f88\u5927\u7a0b\u5ea6\u4e0a\u907f\u514d\u4e86\u5e7b\u8bfb\uff0c\u4f46\u662f\u8fd8\u662f\u6ca1\u6709\u80fd\u5b8c\u5168\u89e3\u51b3\u5e7b\u8bfb\u3002</p> <p>\u4e24\u4e2a\u53d1\u751f\u5e7b\u8bfb\u573a\u666f\u7684\u4f8b\u5b50</p> <p>\u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5bf9\u4e8e\u5feb\u7167\u8bfb\uff0c MVCC \u5e76\u4e0d\u80fd\u5b8c\u5168\u907f\u514d\u5e7b\u8bfb\u73b0\u8c61\u3002\u56e0\u4e3a\u5f53\u4e8b\u52a1 A \u66f4\u65b0\u4e86\u4e00\u6761\u4e8b\u52a1 B \u63d2\u5165\u7684\u8bb0\u5f55\uff0c\u90a3\u4e48\u4e8b\u52a1 A \u524d\u540e\u4e24\u6b21\u67e5\u8be2\u7684\u8bb0\u5f55\u6761\u76ee\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u6240\u4ee5\u5c31\u53d1\u751f\u5e7b\u8bfb\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\uff1a\u5bf9\u4e8e\u5f53\u524d\u8bfb\uff0c\u5982\u679c\u4e8b\u52a1\u5f00\u542f\u540e\uff0c\u5e76\u6ca1\u6709\u6267\u884c\u5f53\u524d\u8bfb\uff0c\u800c\u662f\u5148\u5feb\u7167\u8bfb\uff0c\u7136\u540e\u8fd9\u671f\u95f4\u5982\u679c\u5176\u4ed6\u4e8b\u52a1\u63d2\u5165\u4e86\u4e00\u6761\u8bb0\u5f55\uff0c\u90a3\u4e48\u4e8b\u52a1\u540e\u7eed\u4f7f\u7528\u5f53\u524d\u8bfb\u8fdb\u884c\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u73b0\u4e24\u6b21\u67e5\u8be2\u7684\u8bb0\u5f55\u6761\u76ee\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u6240\u4ee5\u5c31\u53d1\u751f\u5e7b\u8bfb\u3002</p> <p>\u8981\u907f\u514d\u8fd9\u7c7b\u7279\u6b8a\u573a\u666f\u4e0b\u53d1\u751f\u5e7b\u8bfb\u7684\u73b0\u8c61\u7684\u8bdd\uff0c\u5c31\u662f\u5c3d\u91cf\u5728\u5f00\u542f\u4e8b\u52a1\u4e4b\u540e\uff0c\u9a6c\u4e0a\u6267\u884c <code>select ... for update</code> \u8fd9\u7c7b\u5f53\u524d\u8bfb\u7684\u8bed\u53e5\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5bf9\u8bb0\u5f55\u52a0 <code>next-key lock</code>\uff0c\u4ece\u800c\u907f\u514d\u5176\u4ed6\u4e8b\u52a1\u63d2\u5165\u4e00\u6761\u65b0\u8bb0\u5f55\u3002</p>","boost":2},{"location":"mysql/transaction/#mvcc","title":"MVCC","text":"<p>MVCC \u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff08Multi-Version Concurrency Control\uff09\uff0c\u662f\u5728\u8bfb\u53d6\u6570\u636e\u65f6\u901a\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u5feb\u7167\u7684\u65b9\u5f0f\u5c06\u6570\u636e\u4fdd\u5b58\u4e0b\u6765\uff0c\u8fd9\u6837\u8bfb\u9501\u548c\u5199\u9501\u4e0d\u51b2\u7a81\u4e86\uff0c\u4e0d\u540c\u7684\u4e8b\u7269 session \u4f1a\u770b\u5230\u81ea\u5df1\u7279\u5b9a\u7248\u672c\u7684\u6570\u636e\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7248\u672c\u94fe\u3002</p>","boost":2},{"location":"mysql/transaction/#mvcc_1","title":"MVCC \u5de5\u4f5c\u7684\u9694\u79bb\u7ea7\u522b","text":"<ul> <li>Read Uncommitted \u8bfb\u672a\u63d0\u4ea4\uff1a\u4e3a\u4e86\u8bfb\u53d6\u5230\u5176\u4ed6\u4e8b\u7269\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u603b\u662f\u4f1a\u8bfb\u53d6\u6700\u65b0\u7684\u6570\u636e\u884c\uff0c\u800c\u4e0d\u662f\u7b26\u5408\u5f53\u524d\u4e8b\u7269\u7248\u672c\u7684\u6570\u636e\u884c</li> <li>Serializable \u4e32\u884c\u5316\uff1a\u5df2\u7ecf\u5bf9\u6240\u6709\u5e76\u53d1\u64cd\u4f5c\u7684\u6570\u636e\u884c\u90fd\u8fdb\u884c\u52a0\u9501\u4e86\uff0c\u5df2\u7ecf\u6ca1\u6709\u5e76\u53d1\u95ee\u9898\u4e86\uff0c\u5f53\u7136\u4e5f\u4e0d\u9700\u8981 MVCC \u4e86</li> </ul> <p>\u5bf9\u4e8e\u300cREAD COMMITTED \u8bfb\u63d0\u4ea4\u300d\u548c\u300cRepeatable Read \u53ef\u91cd\u590d\u8bfb\u300d\u9694\u79bb\u7ea7\u522b\u7684\u4e8b\u52a1\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u901a\u8fc7 Read View \u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\u521b\u5efa Read View \u7684\u65f6\u673a\u4e0d\u540c\uff1a</p> <ul> <li>\u300c\u8bfb\u63d0\u4ea4\u300d\u9694\u79bb\u7ea7\u522b\u662f\u5728\u6bcf\u4e2a select \u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684 Read View\uff0c\u4e5f\u610f\u5473\u7740\uff0c\u4e8b\u52a1\u671f\u95f4\u7684\u591a\u6b21\u8bfb\u53d6\u540c\u4e00\u6761\u6570\u636e\uff0c\u524d\u540e\u4e24\u6b21\u8bfb\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u4e00\u81f4\uff0c\u56e0\u4e3a\u53ef\u80fd\u8fd9\u671f\u95f4\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u4fee\u6539\u4e86\u8be5\u8bb0\u5f55\uff0c\u5e76\u63d0\u4ea4\u4e86\u4e8b\u52a1\u3002</li> <li>\u300c\u53ef\u91cd\u590d\u8bfb\u300d\u9694\u79bb\u7ea7\u522b\u662f\u542f\u52a8\u4e8b\u52a1\u65f6\u751f\u6210\u4e00\u4e2a Read View\uff0c\u7136\u540e\u6574\u4e2a\u4e8b\u52a1\u671f\u95f4\u90fd\u5728\u7528\u8fd9\u4e2a Read View\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5728\u4e8b\u52a1\u671f\u95f4\u8bfb\u5230\u7684\u6570\u636e\u90fd\u662f\u4e8b\u52a1\u542f\u52a8\u524d\u7684\u8bb0\u5f55\u3002</li> </ul> <p>\u8fd9\u4e24\u4e2a\u9694\u79bb\u7ea7\u522b\u5b9e\u73b0\u662f\u901a\u8fc7\u300c\u4e8b\u52a1\u7684 Read View \u91cc\u7684\u5b57\u6bb5\u300d\u548c\u300c\u8bb0\u5f55\u4e2d\u7684\u4e24\u4e2a\u9690\u85cf\u5217\u300d\u7684\u6bd4\u5bf9\uff0c\u6765\u63a7\u5236\u5e76\u53d1\u4e8b\u52a1\u8bbf\u95ee\u540c\u4e00\u4e2a\u8bb0\u5f55\u65f6\u7684\u884c\u4e3a\uff0c\u8fd9\u5c31\u53eb MVCC\uff08\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff09\u3002</p>","boost":2},{"location":"mysql/transaction/#mvcc_2","title":"MVCC \u5b9e\u73b0\u539f\u7406","text":"<p>MVCC \u7684\u76ee\u7684\u5c31\u662f\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u7684\u5b9e\u73b0\uff0c\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8bfb\u5199\u51b2\u7a81\uff0c\u5b83\u7684\u5b9e\u73b0\u539f\u7406\u4e3b\u8981\u662f\u4f9d\u8d56\u8bb0\u5f55\u4e2d\u7684 3 \u4e2a\u9690\u5f0f\u5b57\u6bb5\uff0cundo \u65e5\u5fd7 \uff0cRead View \u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u9690\u85cf\u5b57\u6bb5\u4e2d\u5176\u5b9e\u53ea\u6709\u4e24\u4e2a\u662f\u5fc5\u8981\u7684\uff0c\u5206\u522b\u662f trx_id \u548c roll_pointer</p> <ul> <li>trx_id\uff1a\u7528\u6765\u5b58\u50a8\u6bcf\u6b21\u5bf9\u67d0\u6761\u805a\u7c07\u7d22\u5f15\u8bb0\u5f55\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\u7684\u4e8b\u7269 Id</li> <li>roll_pointer\uff1a\u6bcf\u6b21\u5bf9\u90a3\u6761\u7d22\u5f15\u8bb0\u5f55\u4e0a\u6709\u4fee\u6539\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u628a\u8001\u7248\u672c\u5199\u5165 undo \u65e5\u5fd7\u4e2d\u3002\u8fd9\u4e2a roll_pointer \u5c31\u662f\u5b58\u4e86\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u8fd9\u6761\u7d22\u5f15\u8bb0\u5f55\u7684\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u4f4d\u7f6e\uff0c\u901a\u8fc7\u5b83\u6765\u83b7\u5f97\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u8bb0\u5f55\u4fe1\u606f\uff08\u6ce8\u610f\u63d2\u5165\u64cd\u4f5c\u7684 undo \u65e5\u5fd7\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u8001\u7248\u672c\uff09</li> </ul>","boost":2},{"location":"mysql/transaction/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding-\u56fe\u89e3 MySQL \u4e8b\u52a1\u7bc7</li> </ul>","boost":2},{"location":"network/","title":"\u57fa\u7840","text":"","boost":2},{"location":"network/#tcpip","title":"TCP/IP \u7f51\u7edc\u6a21\u578b\u6709\u54ea\u51e0\u5c42\uff1f","text":"<p>TCP/IP \u6a21\u578b\u662f\u4e92\u8054\u7f51\u7684\u57fa\u7840\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u7f51\u7edc\u534f\u8bae\u7684\u603b\u79f0\u3002\u8fd9\u4e9b\u534f\u8bae\u53ef\u4ee5\u5212\u5206\u4e3a\u56db\u5c42\uff0c\u5206\u522b\u4e3a\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u3002</p> <ul> <li>\u94fe\u8def\u5c42\uff08Link layer\uff09\uff1a\u8d1f\u8d23\u5c01\u88c5\u548c\u89e3\u5c01\u88c5 IP \u62a5\u6587\uff0c\u53d1\u9001\u548c\u63a5\u53d7 ARP/RARP \u62a5\u6587\u7b49\u3002</li> <li>\u7f51\u7edc\u5c42\uff08Internet layer\uff09\uff1a\u8d1f\u8d23\u8def\u7531\u4ee5\u53ca\u628a\u5206\u7ec4\u62a5\u6587\u53d1\u9001\u7ed9\u76ee\u6807\u7f51\u7edc\u6216\u4e3b\u673a\u3002</li> <li>\u4f20\u8f93\u5c42\uff08Transport layer\uff09\uff1a\u8d1f\u8d23\u5bf9\u62a5\u6587\u8fdb\u884c\u5206\u7ec4\u548c\u91cd\u7ec4\uff0c\u5e76\u4ee5 TCP \u6216 UDP \u534f\u8bae\u683c\u5f0f\u5c01\u88c5\u62a5\u6587\u3002</li> <li>\u5e94\u7528\u5c42\uff08Application layer\uff09\uff1a\u8d1f\u8d23\u5411\u7528\u6237\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982 HTTP\u3001FTP\u3001Telnet\u3001DNS\u3001SMTP \u7b49\u3002</li> </ul>","boost":2},{"location":"network/#osi","title":"OSI \u4e03\u5c42\u6a21\u578b","text":"<p>OSI \u4e03\u5c42\u6a21\u578b\uff1a\u7269\u7406\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u3001\u4f1a\u8bdd\u5c42\u3001\u8868\u793a\u5c42\u548c\u5e94\u7528\u5c42\u3002</p> <ul> <li>\u7269\u7406\u5c42\uff08Physical Layer\uff09\uff1a\u6bd4\u7279\u7387\u4f20\u8f93\u3002</li> <li>\u6570\u636e\u94fe\u8def\u5c42\uff08Data Link Layer\uff09\uff1a\u63a7\u5236\u7f51\u7edc\u5c42\u4e0e\u7269\u7406\u5c42\u4e4b\u95f4\u901a\u4fe1\u3002</li> <li>\u7f51\u7edc\u5c42\uff08Network Layer\uff09\uff1aIP \u5bfb\u5740\u548c\u8def\u7531\u9009\u62e9\u3002</li> <li>\u4f20\u8f93\u5c42\uff08Transport Layer\uff09\uff1a\u5efa\u7acb\u3001\u7ef4\u62a4\u3001\u7ba1\u7406\u7aef\u5230\u7aef\u8fde\u63a5\u3002</li> <li>\u4f1a\u8bdd\u5c42\uff08Session Layer\uff09\uff1a\u5efa\u7acb\u3001\u7ef4\u62a4\u3001\u7ba1\u7406\u4f1a\u8bdd\u8fde\u63a5\u3002</li> <li>\u8868\u73b0\u5c42\uff08Presentation Layer\uff09\uff1a\u6570\u636e\u683c\u5f0f\u5316\uff0c\u52a0\u5bc6\u3001\u89e3\u5bc6\u3002</li> <li>\u5e94\u7528\u5c42\uff08Application Layer\uff09\uff1a\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\u3002</li> </ul> <p> </p> <ul> <li>\u6df1\u5165\u7406\u89e3 TCP/IP \u6a21\u578b</li> </ul>","boost":2},{"location":"network/cookie_session/","title":"Cookie\u548cSession","text":"","boost":2},{"location":"network/cookie_session/#1-cookie","title":"1. \u4ec0\u4e48\u662f Cookie\uff1f","text":"<p>HTTP Cookie\uff08\u4e5f\u53eb Web Cookie \u6216\u6d4f\u89c8\u5668 Cookie\uff09\u662f\u670d\u52a1\u5668\u53d1\u9001\u5230\u7528\u6237\u6d4f\u89c8\u5668\u5e76\u4fdd\u5b58\u5728\u672c\u5730\u7684\u4e00\u5c0f\u5757\u6570\u636e\uff0c\u5b83\u4f1a\u5728\u6d4f\u89c8\u5668\u4e0b\u6b21\u5411\u540c\u4e00\u670d\u52a1\u5668\u518d\u53d1\u8d77\u8bf7\u6c42\u65f6\u88ab\u643a\u5e26\u5e76\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e0a\u3002\u901a\u5e38\uff0c\u5b83\u7528\u4e8e\u544a\u77e5\u670d\u52a1\u7aef\u4e24\u4e2a\u8bf7\u6c42\u662f\u5426\u6765\u81ea\u540c\u4e00\u6d4f\u89c8\u5668\uff0c\u5982\u4fdd\u6301\u7528\u6237\u7684\u767b\u5f55\u72b6\u6001\u3002Cookie \u4f7f\u57fa\u4e8e\u65e0\u72b6\u6001\u7684 HTTP \u534f\u8bae\u8bb0\u5f55\u7a33\u5b9a\u7684\u72b6\u6001\u4fe1\u606f\u6210\u4e3a\u4e86\u53ef\u80fd\u3002</p> <p>Cookie \u4e3b\u8981\u7528\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762</p> <ul> <li>\u4f1a\u8bdd\u72b6\u6001\u7ba1\u7406\uff08\u5982\u7528\u6237\u767b\u5f55\u72b6\u6001\u3001\u8d2d\u7269\u8f66\u3001\u6e38\u620f\u5206\u6570\u6216\u5176\u5b83\u9700\u8981\u8bb0\u5f55\u7684\u4fe1\u606f\uff09</li> <li>\u4e2a\u6027\u5316\u8bbe\u7f6e\uff08\u5982\u7528\u6237\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u3001\u4e3b\u9898\u7b49\uff09</li> <li>\u6d4f\u89c8\u5668\u884c\u4e3a\u8ddf\u8e2a\uff08\u5982\u8ddf\u8e2a\u5206\u6790\u7528\u6237\u884c\u4e3a\u7b49\uff09</li> </ul>","boost":2},{"location":"network/cookie_session/#2-session","title":"2. \u4ec0\u4e48\u662f Session\uff1f","text":"<p>Session \u4ee3\u8868\u7740\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e00\u6b21\u4f1a\u8bdd\u7684\u8fc7\u7a0b\u3002Session \u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728 Session \u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u5ba2\u6237\u7aef\u5173\u95ed\u4f1a\u8bdd\uff0c\u6216\u8005 Session \u8d85\u65f6\u5931\u6548\u65f6\u4f1a\u8bdd\u7ed3\u675f\u3002</p>","boost":2},{"location":"network/cookie_session/#3-cookie-session","title":"3. Cookie \u548c Session \u6709\u4ec0\u4e48\u4e0d\u540c\uff1f","text":"<ol> <li>\u4f5c\u7528\u8303\u56f4\u4e0d\u540c\uff1aCookie \u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\uff09\uff0cSession \u4fdd\u5b58\u5728\u670d\u52a1\u5668\u7aef\u3002</li> <li>\u5b58\u53d6\u65b9\u5f0f\u7684\u4e0d\u540c\uff1aCookie \u53ea\u80fd\u4fdd\u5b58 ASCII\uff0cSession \u53ef\u4ee5\u5b58\u4efb\u610f\u6570\u636e\u7c7b\u578b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u5728 Session \u4e2d\u4fdd\u6301\u4e00\u4e9b\u5e38\u7528\u53d8\u91cf\u4fe1\u606f\uff0c\u6bd4\u5982\u8bf4 UserId \u7b49\u3002</li> <li>\u6709\u6548\u671f\u4e0d\u540c\uff1aCookie \u53ef\u8bbe\u7f6e\u4e3a\u957f\u65f6\u95f4\u4fdd\u6301\uff0c\u6bd4\u5982\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u7684\u9ed8\u8ba4\u767b\u5f55\u529f\u80fd\uff0cSession \u4e00\u822c\u5931\u6548\u65f6\u95f4\u8f83\u77ed\uff0c\u5ba2\u6237\u7aef\u5173\u95ed\u6216\u8005 Session \u8d85\u65f6\u90fd\u4f1a\u5931\u6548\u3002</li> <li>\u9690\u79c1\u7b56\u7565\u4e0d\u540c\uff1aCookie \u5b58\u50a8\u5728\u5ba2\u6237\u7aef\uff0c\u6bd4\u8f83\u5bb9\u6613\u906d\u5230\u4e0d\u6cd5\u83b7\u53d6\uff0c\u65e9\u671f\u6709\u4eba\u5c06\u7528\u6237\u7684\u767b\u5f55\u540d\u548c\u5bc6\u7801\u5b58\u50a8\u5728 Cookie \u4e2d\u5bfc\u81f4\u4fe1\u606f\u88ab\u7a83\u53d6\uff1bSession \u5b58\u50a8\u5728\u670d\u52a1\u7aef\uff0c\u5b89\u5168\u6027\u76f8\u5bf9 Cookie \u8981\u597d\u4e00\u4e9b\u3002</li> <li>\u5b58\u50a8\u5927\u5c0f\u4e0d\u540c\uff1a\u5355\u4e2a Cookie \u4fdd\u5b58\u7684\u6570\u636e\u4e0d\u80fd\u8d85\u8fc7 4K\uff0cSession \u53ef\u5b58\u50a8\u6570\u636e\u8fdc\u9ad8\u4e8e Cookie\u3002</li> </ol>","boost":2},{"location":"network/cookie_session/#4-cookie-session","title":"4. \u4e3a\u4ec0\u4e48\u9700\u8981 Cookie \u548c Session\uff0c\u4ed6\u4eec\u6709\u4ec0\u4e48\u5173\u8054\uff1f","text":"<p>\u6d4f\u89c8\u5668\u662f\u6ca1\u6709\u72b6\u6001\u7684(HTTP \u534f\u8bae\u65e0\u72b6\u6001)\uff0c\u8fd9\u610f\u5473\u7740\u6d4f\u89c8\u5668\u5e76\u4e0d\u77e5\u9053\u662f\u5f20\u4e09\u8fd8\u662f\u674e\u56db\u5728\u548c\u670d\u52a1\u7aef\u6253\u4ea4\u9053\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6709\u4e00\u4e2a\u673a\u5236\u6765\u544a\u8bc9\u670d\u52a1\u7aef\uff0c\u672c\u6b21\u64cd\u4f5c\u7528\u6237\u662f\u5426\u767b\u5f55\uff0c\u662f\u54ea\u4e2a\u7528\u6237\u5728\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u90a3\u8fd9\u5957\u673a\u5236\u7684\u5b9e\u73b0\u5c31\u9700\u8981 Cookie \u548c Session \u7684\u914d\u5408\u3002</p> <p>\u7528\u6237\u7b2c\u4e00\u6b21\u8bf7\u6c42\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u670d\u52a1\u5668\u6839\u636e\u7528\u6237\u63d0\u4ea4\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u521b\u5efa\u5bf9\u5e94\u7684 Session \uff0c\u8bf7\u6c42\u8fd4\u56de\u65f6\u5c06\u6b64 Session \u7684\u552f\u4e00\u6807\u8bc6\u4fe1\u606f SessionID \u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u63a5\u6536\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684 SessionID \u4fe1\u606f\u540e\uff0c\u4f1a\u5c06\u6b64\u4fe1\u606f\u5b58\u5165\u5230 Cookie \u4e2d\uff0c\u540c\u65f6 Cookie \u8bb0\u5f55\u6b64 SessionID \u5c5e\u4e8e\u54ea\u4e2a\u57df\u540d\u3002</p> <p>\u5f53\u7528\u6237\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u8bf7\u6c42\u4f1a\u81ea\u52a8\u5224\u65ad\u6b64\u57df\u540d\u4e0b\u662f\u5426\u5b58\u5728 Cookie \u4fe1\u606f\uff0c\u5982\u679c\u5b58\u5728\u81ea\u52a8\u5c06 Cookie \u4fe1\u606f\u4e5f\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u4f1a\u4ece Cookie \u4e2d\u83b7\u53d6 SessionID\uff0c\u518d\u6839\u636e SessionID \u67e5\u627e\u5bf9\u5e94\u7684 Session \u4fe1\u606f\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u8bf4\u660e\u7528\u6237\u6ca1\u6709\u767b\u5f55\u6216\u8005\u767b\u5f55\u5931\u6548\uff0c\u5982\u679c\u627e\u5230 Session \u8bc1\u660e\u7528\u6237\u5df2\u7ecf\u767b\u5f55\u53ef\u6267\u884c\u540e\u9762\u64cd\u4f5c\u3002</p> <p>Note</p> <p>SessionID \u662f\u8fde\u63a5 Cookie \u548c Session \u7684\u4e00\u9053\u6865\u6881\uff0c\u5927\u90e8\u5206\u7cfb\u7edf\u4e5f\u662f\u6839\u636e\u6b64\u539f\u7406\u6765\u9a8c\u8bc1\u7528\u6237\u767b\u5f55\u72b6\u6001\u3002</p>","boost":2},{"location":"network/cookie_session/#5-cookie-cookie","title":"5. \u65e2\u7136\u670d\u52a1\u7aef\u662f\u6839\u636e Cookie \u4e2d\u7684\u4fe1\u606f\u5224\u65ad\u7528\u6237\u662f\u5426\u767b\u5f55\uff0c\u90a3\u4e48\u5982\u679c\u6d4f\u89c8\u5668\u4e2d\u7981\u6b62\u4e86 Cookie\uff0c\u5982\u4f55\u4fdd\u969c\u6574\u4e2a\u673a\u5236\u7684\u6b63\u5e38\u8fd0\u8f6c\uff1f","text":"<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u6bcf\u6b21\u8bf7\u6c42\u4e2d\u90fd\u643a\u5e26\u4e00\u4e2a SessionID \u7684\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5 Post \u7684\u65b9\u5f0f\u63d0\u4ea4\uff0c\u4e5f\u53ef\u4ee5\u5728\u8bf7\u6c42\u7684\u5730\u5740\u540e\u9762\u62fc\u63a5 <code>xxx?SessionID=123456...</code>\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0cToken \u673a\u5236\u3002Token \u673a\u5236\u591a\u7528\u4e8e App \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u6a21\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e Web \u7aef\u505a\u7528\u6237\u72b6\u6001\u7ba1\u7406\u3002</li> </ul> <p>Token \u7684\u610f\u601d\u662f\u201c\u4ee4\u724c\u201d\uff0c\u662f\u670d\u52a1\u7aef\u751f\u6210\u7684\u4e00\u4e32\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8fdb\u884c\u8bf7\u6c42\u7684\u4e00\u4e2a\u6807\u8bc6\u3002Token \u673a\u5236\u548c Cookie \u548c Session \u7684\u4f7f\u7528\u673a\u5236\u6bd4\u8f83\u7c7b\u4f3c\u3002</p> <p>\u5f53\u7528\u6237\u7b2c\u4e00\u6b21\u767b\u5f55\u540e\uff0c\u670d\u52a1\u5668\u6839\u636e\u63d0\u4ea4\u7684\u7528\u6237\u4fe1\u606f\u751f\u6210\u4e00\u4e2a Token\uff0c\u54cd\u5e94\u65f6\u5c06 Token \u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4ee5\u540e\u5ba2\u6237\u7aef\u53ea\u9700\u5e26\u4e0a\u8fd9\u4e2a Token \u524d\u6765\u8bf7\u6c42\u6570\u636e\u5373\u53ef\uff0c\u65e0\u9700\u518d\u6b21\u767b\u5f55\u9a8c\u8bc1\u3002</p>","boost":2},{"location":"network/cookie_session/#6-session","title":"6. \u5982\u4f55\u8003\u8651\u5206\u5e03\u5f0f Session \u95ee\u9898\uff1f","text":"<p>\u5206\u5e03\u5f0f Session \u4e00\u822c\u4f1a\u6709\u4ee5\u4e0b\u51e0\u79cd\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li>Nginx ip_hash \u7b56\u7565\uff1a\u670d\u52a1\u7aef\u4f7f\u7528 Nginx \u4ee3\u7406\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u6309\u8bbf\u95ee IP \u7684 hash \u5206\u914d\uff0c\u8fd9\u6837\u6765\u81ea\u540c\u4e00 IP \u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u53f0\u670d\u52a1\u5668\uff0c\u907f\u514d\u4e86\u5728\u670d\u52a1\u5668 A \u521b\u5efa Session\uff0c\u7b2c\u4e8c\u6b21\u5206\u53d1\u5230\u670d\u52a1\u5668 B \u7684\u73b0\u8c61\u3002</li> <li>Session \u590d\u5236\uff1a\u4efb\u4f55\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u7684 Session \u53d1\u751f\u6539\u53d8\uff08\u589e\u5220\u6539\uff09\uff0c\u8be5\u8282\u70b9\u4f1a\u628a\u8fd9\u4e2a Session \u7684\u6240\u6709\u5185\u5bb9\u5e8f\u5217\u5316\uff0c\u7136\u540e\u5e7f\u64ad\u7ed9\u6240\u6709\u5176\u5b83\u8282\u70b9\u3002</li> <li>\u5171\u4eab Session\uff1a\u670d\u52a1\u7aef\u65e0\u72b6\u6001\u8bdd\uff0c\u5c06\u7528\u6237\u7684 Session \u7b49\u4fe1\u606f\u4f7f\u7528\u7f13\u5b58\u4e2d\u95f4\u4ef6\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u4fdd\u969c\u5206\u53d1\u5230\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u54cd\u5e94\u7ed3\u679c\u90fd\u4e00\u81f4\u3002</li> </ol> <p>\u5efa\u8bae\u91c7\u7528\u7b2c\u4e09\u79cd\u65b9\u6848\u3002</p> <ul> <li>\u4f60\u771f\u7684\u4e86\u89e3 Cookie \u548c Session \u5417?</li> </ul>","boost":2},{"location":"network/tcp_upd/","title":"TCP/UDP","text":"","boost":2},{"location":"network/tcp_upd/#1-tcp","title":"1. \u4ec0\u4e48\u662f TCP \uff1f","text":"<p>TCP \u662f\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\u3002</p> <ul> <li>\u9762\u5411\u8fde\u63a5\uff1a\u4e00\u5b9a\u662f\u300c\u4e00\u5bf9\u4e00\u300d\u624d\u80fd\u8fde\u63a5\uff0c\u4e0d\u80fd\u50cf UDP \u534f\u8bae\u53ef\u4ee5\u4e00\u4e2a\u4e3b\u673a\u540c\u65f6\u5411\u591a\u4e2a\u4e3b\u673a\u53d1\u9001\u6d88\u606f\uff0c\u4e5f\u5c31\u662f\u4e00\u5bf9\u591a\u662f\u65e0\u6cd5\u505a\u5230\u7684\uff1b</li> <li>\u53ef\u9760\u7684\uff1a\u65e0\u8bba\u7684\u7f51\u7edc\u94fe\u8def\u4e2d\u51fa\u73b0\u4e86\u600e\u6837\u7684\u94fe\u8def\u53d8\u5316\uff0cTCP \u90fd\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u62a5\u6587\u4e00\u5b9a\u80fd\u591f\u5230\u8fbe\u63a5\u6536\u7aef\uff1b</li> <li>\u5b57\u8282\u6d41\uff1a\u7528\u6237\u6d88\u606f\u901a\u8fc7 TCP \u534f\u8bae\u4f20\u8f93\u65f6\uff0c\u6d88\u606f\u53ef\u80fd\u4f1a\u88ab\u64cd\u4f5c\u7cfb\u7edf\u300c\u5206\u7ec4\u300d\u6210\u591a\u4e2a\u7684 TCP \u62a5\u6587\uff0c\u5982\u679c\u63a5\u6536\u65b9\u7684\u7a0b\u5e8f\u5982\u679c\u4e0d\u77e5\u9053\u300c\u6d88\u606f\u7684\u8fb9\u754c\u300d\uff0c\u662f\u65e0\u6cd5\u8bfb\u51fa\u4e00\u4e2a\u6709\u6548\u7684\u7528\u6237\u6d88\u606f\u7684\u3002\u5e76\u4e14 TCP \u62a5\u6587\u662f\u300c\u6709\u5e8f\u7684\u300d\uff0c\u5f53\u300c\u524d\u4e00\u4e2a\u300dTCP \u62a5\u6587\u6ca1\u6709\u6536\u5230\u7684\u65f6\u5019\uff0c\u5373\u4f7f\u5b83\u5148\u6536\u5230\u4e86\u540e\u9762\u7684 TCP \u62a5\u6587\uff0c\u90a3\u4e48\u4e5f\u4e0d\u80fd\u6254\u7ed9\u5e94\u7528\u5c42\u53bb\u5904\u7406\uff0c\u540c\u65f6\u5bf9\u300c\u91cd\u590d\u300d\u7684 TCP \u62a5\u6587\u4f1a\u81ea\u52a8\u4e22\u5f03\u3002</li> </ul>","boost":2},{"location":"network/tcp_upd/#2-tcp","title":"2. \u4ec0\u4e48\u662f TCP \u8fde\u63a5\uff1f","text":"<p>\u7528\u4e8e\u4fdd\u8bc1\u53ef\u9760\u6027\u548c\u6d41\u91cf\u63a7\u5236\u7ef4\u62a4\u7684\u67d0\u4e9b\u72b6\u6001\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u7684\u7ec4\u5408\uff0c\u5305\u62ec Socket\u3001\u5e8f\u5217\u53f7\u548c\u7a97\u53e3\u5927\u5c0f\u79f0\u4e3a\u8fde\u63a5\u3002</p> <p>\u5efa\u7acb\u4e00\u4e2a TCP \u8fde\u63a5\u662f\u9700\u8981\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u8fbe\u6210\u4e0a\u8ff0\u4e09\u4e2a\u4fe1\u606f\u7684\u5171\u8bc6\u3002</p> <ul> <li>Socket\uff1a\u7531 IP \u5730\u5740\u548c\u7aef\u53e3\u53f7\u7ec4\u6210</li> <li>\u5e8f\u5217\u53f7\uff1a\u7528\u6765\u89e3\u51b3\u4e71\u5e8f\u95ee\u9898\u7b49</li> <li>\u7a97\u53e3\u5927\u5c0f\uff1a\u7528\u6765\u505a\u6d41\u91cf\u63a7\u5236</li> </ul>","boost":2},{"location":"network/tcp_upd/#3-tcp","title":"3. \u5982\u4f55\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a TCP \u8fde\u63a5\u5462\uff1f","text":"<p>TCP \u56db\u5143\u7ec4\u53ef\u4ee5\u552f\u4e00\u7684\u786e\u5b9a\u4e00\u4e2a\u8fde\u63a5\uff0c\u56db\u5143\u7ec4\u5305\u62ec\u5982\u4e0b\uff1a</p> <ul> <li>\u6e90\u5730\u5740</li> <li>\u6e90\u7aef\u53e3</li> <li>\u76ee\u7684\u5730\u5740</li> <li>\u76ee\u7684\u7aef\u53e3</li> </ul>","boost":2},{"location":"network/tcp_upd/#4-udp-tcp","title":"4. UDP \u548c TCP \u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u5206\u522b\u7684\u5e94\u7528\u573a\u666f\u662f\uff1f","text":"<p>TCP \u548c UDP \u533a\u522b\uff1a</p> <ol> <li>\u8fde\u63a5\uff1aTCP \u662f\u9762\u5411\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u4f20\u8f93\u6570\u636e\u524d\u5148\u8981\u5efa\u7acb\u8fde\u63a5\u3002UDP \u662f\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u5373\u523b\u4f20\u8f93\u6570\u636e\u3002</li> <li>\u670d\u52a1\u5bf9\u8c61\uff1aTCP \u662f\u4e00\u5bf9\u4e00\u7684\u4e24\u70b9\u670d\u52a1\uff0c\u5373\u4e00\u6761\u8fde\u63a5\u53ea\u6709\u4e24\u4e2a\u7aef\u70b9\u3002UDP \u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1</li> <li>\u53ef\u9760\u6027\uff1aTCP \u662f\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u7684\uff0c\u6570\u636e\u53ef\u4ee5\u65e0\u5dee\u9519\u3001\u4e0d\u4e22\u5931\u3001\u4e0d\u91cd\u590d\u3001\u6309\u5e8f\u5230\u8fbe\u3002UDP \u662f\u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\uff0c\u4e0d\u4fdd\u8bc1\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e UDP \u4f20\u8f93\u534f\u8bae\u5b9e\u73b0\u4e00\u4e2a\u53ef\u9760\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u6bd4\u5982 QUIC \u534f\u8bae\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u89c1\u8fd9\u7bc7\u6587\u7ae0\uff1a\u5982\u4f55\u57fa\u4e8e UDP \u534f\u8bae\u5b9e\u73b0\u53ef\u9760\u4f20\u8f93\uff1f(opens new window)</li> <li>\u62e5\u585e\u63a7\u5236\u3001\u6d41\u91cf\u63a7\u5236\uff1aTCP \u6709\u62e5\u585e\u63a7\u5236\u548c\u6d41\u91cf\u63a7\u5236\u673a\u5236\uff0c\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u5b89\u5168\u6027\u3002UDP \u5219\u6ca1\u6709\uff0c\u5373\u4f7f\u7f51\u7edc\u975e\u5e38\u62e5\u5835\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd UDP \u7684\u53d1\u9001\u901f\u7387\u3002</li> <li>\u9996\u90e8\u5f00\u9500\uff1aTCP \u9996\u90e8\u957f\u5ea6\u8f83\u957f\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u5f00\u9500\uff0c\u9996\u90e8\u5728\u6ca1\u6709\u4f7f\u7528\u300c\u9009\u9879\u300d\u5b57\u6bb5\u65f6\u662f 20 \u4e2a\u5b57\u8282\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u300c\u9009\u9879\u300d\u5b57\u6bb5\u5219\u4f1a\u53d8\u957f\u7684\u3002UDP \u9996\u90e8\u53ea\u6709 8 \u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u5f00\u9500\u8f83\u5c0f\u3002</li> <li>\u4f20\u8f93\u65b9\u5f0f\uff1aTCP \u662f\u6d41\u5f0f\u4f20\u8f93\uff0c\u6ca1\u6709\u8fb9\u754c\uff0c\u4f46\u4fdd\u8bc1\u987a\u5e8f\u548c\u53ef\u9760\u3002UDP \u662f\u4e00\u4e2a\u5305\u4e00\u4e2a\u5305\u7684\u53d1\u9001\uff0c\u662f\u6709\u8fb9\u754c\u7684\uff0c\u4f46\u53ef\u80fd\u4f1a\u4e22\u5305\u548c\u4e71\u5e8f\u3002</li> <li>\u5206\u7247\u4e0d\u540c\uff1aTCP \u7684\u6570\u636e\u5927\u5c0f\u5982\u679c\u5927\u4e8e MSS \u5927\u5c0f\uff0c\u5219\u4f1a\u5728\u4f20\u8f93\u5c42\u8fdb\u884c\u5206\u7247\uff0c\u76ee\u6807\u4e3b\u673a\u6536\u5230\u540e\uff0c\u4e5f\u540c\u6837\u5728\u4f20\u8f93\u5c42\u7ec4\u88c5 TCP \u6570\u636e\u5305\uff0c\u5982\u679c\u4e2d\u9014\u4e22\u5931\u4e86\u4e00\u4e2a\u5206\u7247\uff0c\u53ea\u9700\u8981\u4f20\u8f93\u4e22\u5931\u7684\u8fd9\u4e2a\u5206\u7247\u3002UDP \u7684\u6570\u636e\u5927\u5c0f\u5982\u679c\u5927\u4e8e MTU \u5927\u5c0f\uff0c\u5219\u4f1a\u5728 IP \u5c42\u8fdb\u884c\u5206\u7247\uff0c\u76ee\u6807\u4e3b\u673a\u6536\u5230\u540e\uff0c\u5728 IP \u5c42\u7ec4\u88c5\u5b8c\u6570\u636e\uff0c\u63a5\u7740\u518d\u4f20\u7ed9\u4f20\u8f93\u5c42\u3002</li> </ol>","boost":2},{"location":"network/tcp_upd/#5-tcp","title":"5. TCP \u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f\u4e3a\u4ec0\u4e48\u662f\u4e09\u6b21\u63e1\u624b\uff1f\u4e0d\u662f\u4e24\u6b21\u3001\u56db\u6b21\uff1f","text":"<p>TCP \u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\u80fd\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u7684\u5efa\u7acb\uff0c\u80fd\u51cf\u5c11\u53cc\u65b9\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u5f00\u9500\uff0c\u80fd\u5e2e\u52a9\u53cc\u65b9\u540c\u6b65\u521d\u59cb\u5316\u5e8f\u5217\u53f7\u3002\u5e8f\u5217\u53f7\u80fd\u591f\u4fdd\u8bc1\u6570\u636e\u5305\u4e0d\u91cd\u590d\u3001\u4e0d\u4e22\u5f03\u548c\u6309\u5e8f\u4f20\u8f93\u3002</p> <p>\u4e0d\u4f7f\u7528\u300c\u4e24\u6b21\u63e1\u624b\u300d\u548c\u300c\u56db\u6b21\u63e1\u624b\u300d\u7684\u539f\u56e0\uff1a</p> <ul> <li>\u300c\u4e24\u6b21\u63e1\u624b\u300d\uff1a\u65e0\u6cd5\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u7684\u5efa\u7acb\uff0c\u4f1a\u9020\u6210\u53cc\u65b9\u8d44\u6e90\u7684\u6d6a\u8d39\uff0c\u4e5f\u65e0\u6cd5\u53ef\u9760\u7684\u540c\u6b65\u53cc\u65b9\u5e8f\u5217\u53f7\uff1b</li> <li>\u300c\u56db\u6b21\u63e1\u624b\u300d\uff1a\u4e09\u6b21\u63e1\u624b\u5c31\u5df2\u7ecf\u7406\u8bba\u4e0a\u6700\u5c11\u53ef\u9760\u8fde\u63a5\u5efa\u7acb\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u4f7f\u7528\u66f4\u591a\u7684\u901a\u4fe1\u6b21\u6570\u3002</li> </ul>","boost":2},{"location":"network/tcp_upd/#6-tcp","title":"6. TCP \u56db\u6b21\u6325\u624b\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f\u4e3a\u4ec0\u4e48\u6325\u624b\u9700\u8981\u56db\u6b21\uff1f","text":"","boost":2},{"location":"network/tcp_upd/#7-time_wait-2msl","title":"7. \u4e3a\u4ec0\u4e48 TIME_WAIT \u7b49\u5f85\u7684\u65f6\u95f4\u662f 2MSL\uff1f","text":"","boost":2},{"location":"network/tcp_upd/#8-tcp","title":"8. TCP \u91cd\u4f20\u673a\u5236","text":"<ul> <li>\u8d85\u65f6\u91cd\u4f20</li> <li>\u5feb\u901f\u91cd\u4f20\uff08Fast Retransmit\uff09\uff1a\u5feb\u901f\u91cd\u4f20\u673a\u5236\u53ea\u89e3\u51b3\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8d85\u65f6\u65f6\u95f4\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5b83\u4f9d\u7136\u9762\u4e34\u7740\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u3002\u5c31\u662f\u91cd\u4f20\u7684\u65f6\u5019\uff0c\u662f\u91cd\u4f20\u4e00\u4e2a\uff0c\u8fd8\u662f\u91cd\u4f20\u6240\u6709\u7684\u95ee\u9898\u3002</li> <li>SACK\uff08 Selective Acknowledgment\uff09 \u9009\u62e9\u6027\u786e\u8ba4\uff1a\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u5728 TCP \u5934\u90e8\u300c\u9009\u9879\u300d\u5b57\u6bb5\u91cc\u52a0\u4e00\u4e2a SACK \u7684\u4e1c\u897f\uff0c\u5b83\u53ef\u4ee5\u5c06\u5df2\u6536\u5230\u7684\u6570\u636e\u7684\u4fe1\u606f\u53d1\u9001\u7ed9\u300c\u53d1\u9001\u65b9\u300d\uff0c\u8fd9\u6837\u53d1\u9001\u65b9\u5c31\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u6570\u636e\u6536\u5230\u4e86\uff0c\u54ea\u4e9b\u6570\u636e\u6ca1\u6536\u5230\uff0c\u77e5\u9053\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u53ea\u91cd\u4f20\u4e22\u5931\u7684\u6570\u636e\u3002</li> <li>Duplicate SACK \uff08D-SACK\uff09\uff1a\u5176\u4e3b\u8981\u4f7f\u7528\u4e86 SACK \u6765\u544a\u8bc9\u300c\u53d1\u9001\u65b9\u300d\u6709\u54ea\u4e9b\u6570\u636e\u88ab\u91cd\u590d\u63a5\u6536\u4e86\u3002</li> </ul>","boost":2},{"location":"python/","title":"\u57fa\u7840","text":""},{"location":"python/#1-arg-kwargs","title":"1. \u51fd\u6570\u53c2\u6570 *arg  \u548c **kwargs \u5206\u522b\u4ee3\u8868\u4ec0\u4e48\uff1f","text":"<p>Python \u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5206\u4e3a\u4f4d\u7f6e\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002<code>*args</code>\u4ee3\u8868\u53ef\u53d8\u53c2\u6570\uff0c\u53ef\u4ee5\u63a5\u6536 0 \u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570\uff0c\u5f53\u4e0d\u786e\u5b9a\u8c03\u7528\u8005\u4f1a\u4f20\u5165\u591a\u5c11\u4e2a\u4f4d\u7f6e\u53c2\u6570\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff0c\u5b83\u4f1a\u5c06\u4f20\u5165\u7684\u53c2\u6570\u6253\u5305\u6210\u4e00\u4e2a\u5143\u7ec4\u3002<code>**kwargs</code>\u4ee3\u8868\u5173\u952e\u5b57\u53c2\u6570\uff0c\u53ef\u4ee5\u63a5\u6536\u7528\u53c2\u6570\u540d=\u53c2\u6570\u503c\u7684\u65b9\u5f0f\u4f20\u5165\u7684\u53c2\u6570\uff0c\u4f20\u5165\u7684\u53c2\u6570\u7684\u4f1a\u6253\u5305\u6210\u4e00\u4e2a\u5b57\u5178\u3002\u5b9a\u4e49\u51fd\u6570\u65f6\u5982\u679c\u540c\u65f6\u4f7f\u7528 <code>*args</code>\u548c<code>**kwargs</code>\uff0c\u90a3\u4e48\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u53c2\u6570\u3002</p>"},{"location":"python/#9","title":"9. \u4ec0\u4e48\u662f\u8fed\u4ee3\u5668\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5b83\uff1f","text":"<p>\u62e5\u6709 <code>__iter__</code>\u3001 <code>__next__</code> \u9b54\u6cd5\u65b9\u6cd5\u7684\u5bf9\u8c61\u5c31\u662f\u8fed\u4ee3\u5668\uff0c\u4fdd\u5b58\u7684\u662f\u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f\u800c\u4e0d\u662f\u7ed3\u679c\uff0c\u6240\u4ee5\u60f3\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u751f\u6210\uff0c\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\u3002</p>"},{"location":"python/#10","title":"10.\u4ec0\u4e48\u662f\u751f\u6210\u5668\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5b83\uff1f","text":"<p>\u751f\u6210\u5668\u662f\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\uff0c\u4f7f\u7528 yield \u548c next \u51fd\u6570\uff0c\u6709\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u5668\u51fd\u6570\uff0c\u90fd\u662f\u4e3a\u4e86\u8282\u7ea6\u5185\u5b58\u3002</p>"},{"location":"python/#11","title":"11. \u7b80\u8ff0\u8fed\u4ee3\u5668\u3001\u751f\u6210\u5668\u7684\u533a\u522b\uff1f","text":"<p>\u751f\u6210\u5668\u662f\u8fed\u4ee3\u5668\uff0c\u4f46\u4f7f\u7528\u65b9\u5f0f\u4e0d\u540c\uff0c\u751f\u6210\u5668\u51fd\u6570\u4f7f\u7528 yield\uff0c\u8fd8\u6709\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff0c\u8fed\u4ee3\u5668\u4f7f\u7528next\u8fdb\u884c\u5143\u7d20\u8fed\u4ee3\u3002</p> <p>\u4f7f\u7528\u573a\u666f\u4e0d\u540c\uff1a\u5728\u5904\u7406\u5de8\u5927\u7684\u6570\u636e\u96c6\u5408\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528\u751f\u6210\u5668\u6765\u8282\u7701\u5185\u5b58\u3002\u5728\u904d\u5386\u5bb9\u5668\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5f88\u65b9\u4fbf\u3002</p>"},{"location":"python/#12-is","title":"12. is \u548c == \u7684\u533a\u522b\uff1f","text":"<ul> <li><code>==</code>\u5224\u65ad\u662f\u5426\u76f8\u7b49</li> <li><code>is</code>\u4e0d\u4ec5\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u8fd8\u5224\u65ad id \u5185\u5b58\u5730\u5740\u662f\u5426\u76f8\u7b49,\u4e24\u8005\u90fd\u76f8\u7b49\u4e86\u624d\u8fd4\u56de True</li> </ul>"},{"location":"python/#13-yield-return","title":"13. yield \u548c return \u7684\u76f8\u540c\u70b9\u548c\u533a\u522b?","text":"<ul> <li>\u76f8\u540c\u70b9\uff1a\u90fd\u662f\u8fd4\u56de\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\uff1b</li> <li>\u533a\u522b\uff1a<code>yield</code>\u8fd4\u56de\u7ed3\u679c\u4f46\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c<code>return</code>\u8fd4\u56de\u7ed3\u679c\u8868\u793a\u7a0b\u5e8f\u5df2\u7ecf\u7ed3\u675f\u6267\u884c</li> </ul>"},{"location":"python/interview/","title":"\u9762\u8bd5","text":""},{"location":"python/interview/#1-python","title":"1. \u8bf4\u8bf4Python\u4e2d\u7684\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u3002","text":"<p>Tip</p> <p>\u6d45\u62f7\u8d1d\u901a\u5e38\u53ea\u590d\u5236\u5bf9\u8c61\u672c\u8eab\uff0c\u800c\u6df1\u62f7\u8d1d\u4e0d\u4ec5\u4f1a\u590d\u5236\u5bf9\u8c61\uff0c\u8fd8\u4f1a\u9012\u5f52\u7684\u590d\u5236\u5bf9\u8c61\u6240\u5173\u8054\u7684\u5bf9\u8c61\u3002</p> <p>\u6df1\u62f7\u8d1d\u53ef\u80fd\u4f1a\u9047\u5230\u4e24\u4e2a\u95ee\u9898\uff1a\u4e00\u662f\u4e00\u4e2a\u5bf9\u8c61\u5982\u679c\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u5f15\u7528\u4e86\u81ea\u8eab\uff0c\u4f1a\u5bfc\u81f4\u65e0\u4f11\u6b62\u7684\u9012\u5f52\u62f7\u8d1d\uff1b\u4e8c\u662f\u6df1\u62f7\u8d1d\u53ef\u80fd\u5bf9\u539f\u672c\u8bbe\u8ba1\u4e3a\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u7684\u6570\u636e\u4e5f\u8fdb\u884c\u62f7\u8d1d\u3002</p> <p>Python\u901a\u8fc7 <code>copy</code> \u6a21\u5757\u4e2d\u7684<code>copy</code>\u548c<code>deepcopy</code>\u51fd\u6570\u6765\u5b9e\u73b0\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u64cd\u4f5c\uff0c\u5176\u4e2ddeepcopy\u53ef\u4ee5\u901a\u8fc7memo\u5b57\u5178\u6765\u4fdd\u5b58\u5df2\u7ecf\u62f7\u8d1d\u8fc7\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u907f\u514d\u521a\u624d\u6240\u8bf4\u7684\u81ea\u5f15\u7528\u9012\u5f52\u95ee\u9898\uff1b\u6b64\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7copyreg\u6a21\u5757\u7684pickle\u51fd\u6570\u6765\u5b9a\u5236\u6307\u5b9a\u7c7b\u578b\u5bf9\u8c61\u7684\u62f7\u8d1d\u884c\u4e3a\u3002</p> <p>deepcopy\u51fd\u6570\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u5bf9\u8c61\u7684\u4e00\u6b21\u5e8f\u5217\u5316\u548c\u4e00\u6b21\u8fd4\u56de\u5e8f\u5217\u5316\uff0c\u9762\u8bd5\u9898\u4e2d\u8fd8\u8003\u8fc7\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0\u5bf9\u8c61\u7684\u6df1\u62f7\u8d1d\u64cd\u4f5c\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528pickle\u6a21\u5757\u7684dumps\u548cloads\u6765\u505a\u5230\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import pickle\n\nmy_deep_copy = lambda obj: pickle.loads(pickle.dumps(obj))\n</code></pre> <ul> <li>\u5217\u8868\u7684\u5207\u7247\u64cd\u4f5c<code>[:]</code>\u76f8\u5f53\u4e8e\u5b9e\u73b0\u4e86\u5217\u8868\u5bf9\u8c61\u7684\u6d45\u62f7\u8d1d\uff0c\u800c\u5b57\u5178\u7684<code>copy</code>\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u5b57\u5178\u5bf9\u8c61\u7684\u6d45\u62f7\u8d1d\u3002</li> <li>\u5bf9\u8c61\u62f7\u8d1d\u5176\u5b9e\u662f\u66f4\u4e3a\u5feb\u6377\u7684\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002</li> <li>\u5728Python\u4e2d\uff0c\u901a\u8fc7\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u5c5e\u4e8e\u4e24\u9636\u6bb5\u6784\u9020\uff0c\u9996\u5148\u662f\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u662f\u521d\u59cb\u5316\u3002\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u201c\u539f\u578b\u201d\u5bf9\u8c61\u6765\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u901a\u8fc7\u5bf9\u539f\u578b\u5bf9\u8c61\u7684\u62f7\u8d1d\uff08\u590d\u5236\u5185\u5b58\uff09\u5c31\u5b8c\u6210\u4e86\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u521d\u59cb\u5316\uff0c\u8fd9\u79cd\u505a\u6cd5\u66f4\u52a0\u9ad8\u6548\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u539f\u578b\u6a21\u5f0f\u3002</li> </ul> <p>\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5143\u7c7b\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u539f\u578b\u6a21\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>import copy\n\n\nclass PrototypeMeta(type):\n    \"\"\"\u5b9e\u73b0\u539f\u578b\u6a21\u5f0f\u7684\u5143\u7c7b\"\"\"\n\n    def __init__(cls, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        # \u4e3a\u5bf9\u8c61\u7ed1\u5b9aclone\u65b9\u6cd5\u6765\u5b9e\u73b0\u5bf9\u8c61\u62f7\u8d1d\n        cls.clone = lambda self, is_deep=True: \\\n            copy.deepcopy(self) if is_deep else copy.copy(self)\n\n\nclass Person(metaclass=PrototypeMeta):\n    pass\n\n\np1 = Person()\np2 = p1.clone()                 # \u6df1\u62f7\u8d1d\np3 = p1.clone(is_deep=False)    # \u6d45\u62f7\u8d1d\n</code></pre>"},{"location":"python/interview/#2","title":"2. \u5199\u4e00\u4e2a\u51fd\u6570\u5b9e\u73b0\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u5c3d\u53ef\u80fd\u5199\u51fa\u4f60\u77e5\u9053\u7684\u6240\u6709\u65b9\u6cd5\u3002","text":"\u65b9\u6cd5\u4e00\uff1a\u53cd\u5411\u5207\u7247<pre><code>def reverse_string(content):\n    return content[::-1]\n</code></pre> \u65b9\u6cd5\u4e8c\uff1a\u53cd\u8f6c\u62fc\u63a5<pre><code>def reverse_string(content):\n    return ''.join(reversed(content))\n</code></pre> \u65b9\u6cd5\u4e09\uff1a\u9012\u5f52\u8c03\u7528<pre><code>def reverse_string(content):\n    if len(content) &lt;= 1:\n        return content\n    return reverse_string(content[1:]) + content[0]\n</code></pre> \u65b9\u6cd5\u56db\uff1a\u53cc\u7aef\u961f\u5217<pre><code>from collections import deque\n\ndef reverse_string(content):\n    q = deque()\n    q.extendleft(content)\n    return ''.join(q)\n</code></pre> \u65b9\u6cd5\u4e94\uff1a\u53cd\u5411\u7ec4\u88c5<pre><code>from io import StringIO\n\ndef reverse_string(content):\n    buffer = StringIO()\n    for i in range(len(content) - 1, -1, -1):\n        buffer.write(content[i])\n    return buffer.getvalue()\n</code></pre> \u65b9\u6cd5\u516d\uff1a\u53cd\u8f6c\u62fc\u63a5<pre><code>def reverse_string(content):\n    return ''.join([content[i] for i in range(len(content) - 1, -1, -1)])\n</code></pre> \u65b9\u6cd5\u4e03\uff1a\u534a\u622a\u4ea4\u6362<pre><code>def reverse_string(content):\n    length, content= len(content), list(content)\n    for i in range(length // 2):\n        content[i], content[length - 1 - i] = content[length - 1 - i], content[i]\n    return ''.join(content)\n</code></pre> \u65b9\u6cd5\u516b\uff1a\u5bf9\u4f4d\u4ea4\u6362<pre><code>def reverse_string(content):\n    length, content= len(content), list(content)\n    for i, j in zip(range(length // 2), range(length - 1, length // 2 - 1, -1)):\n        content[i], content[j] = content[j], content[i]\n    return ''.join(content)\n</code></pre>"},{"location":"redis/","title":"\u57fa\u7840","text":"","boost":2},{"location":"redis/#redis","title":"\u4ec0\u4e48\u662f Redis\uff1f","text":"<p>Redis \u662f\u4e00\u79cd\u57fa\u4e8e\u5185\u5b58\u7684\u6570\u636e\u5e93\uff0c\u5bf9\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u90fd\u662f\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\uff0c\u56e0\u6b64\u8bfb\u5199\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u5e38\u7528\u4e8e\u7f13\u5b58\uff0c\u6d88\u606f\u961f\u5217\u3001\u5206\u5e03\u5f0f\u9501\u7b49\u573a\u666f\u3002</p> <p>Redis \u63d0\u4f9b\u4e86\u591a\u79cd\u6570\u636e\u7c7b\u578b\u6765\u652f\u6301\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u6bd4\u5982 String(\u5b57\u7b26\u4e32)\u3001Hash(\u54c8\u5e0c)\u3001 List (\u5217\u8868)\u3001Set(\u96c6\u5408)\u3001Zset(\u6709\u5e8f\u96c6\u5408)\u3001Bitmaps\uff08\u4f4d\u56fe\uff09\u3001HyperLogLog\uff08\u57fa\u6570\u7edf\u8ba1\uff09\u3001GEO\uff08\u5730\u7406\u4fe1\u606f\uff09\u3001Stream\uff08\u6d41\uff09\uff0c\u5e76\u4e14\u5bf9\u6570\u636e\u7c7b\u578b\u7684\u64cd\u4f5c\u90fd\u662f\u539f\u5b50\u6027\u7684\uff0c\u56e0\u4e3a\u6267\u884c\u547d\u4ee4\u7531\u5355\u7ebf\u7a0b\u8d1f\u8d23\u7684\uff0c\u4e0d\u5b58\u5728\u5e76\u53d1\u7ade\u4e89\u7684\u95ee\u9898\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0cRedis \u8fd8\u652f\u6301\u4e8b\u52a1 \u3001\u6301\u4e45\u5316\u3001Lua \u811a\u672c\u3001\u591a\u79cd\u96c6\u7fa4\u65b9\u6848\uff08\u4e3b\u4ece\u590d\u5236\u6a21\u5f0f\u3001\u54e8\u5175\u6a21\u5f0f\u3001\u5207\u7247\u673a\u7fa4\u6a21\u5f0f\uff09\u3001\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\uff0c\u5185\u5b58\u6dd8\u6c70\u673a\u5236\u3001\u8fc7\u671f\u5220\u9664\u673a\u5236\u7b49\u7b49\u3002</p>","boost":2},{"location":"redis/cache/","title":"\u7f13\u5b58","text":"<p>Web\u5e94\u7528\u548c\u6570\u636e\u5e93\u4e4b\u95f4\u52a0\u5165Redis\u7f13\u5b58\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u5e76\u53d1\uff0c\u4f46\u4e5f\u4f1a\u5e26\u6765\u8bf8\u591a\u95ee\u9898\u3002\u5e38\u89c1\u7684\u7f13\u5b58\u95ee\u9898\u6709\uff1a\u7f13\u5b58\u96ea\u5d29\u3001\u7f13\u5b58\u51fb\u7a7f\u3001\u7f13\u5b58\u7a7f\u900f\u3002</p>","boost":2},{"location":"redis/cache/#1","title":"1. \u7f13\u5b58\u96ea\u5d29","text":"","boost":2},{"location":"redis/cache/#11","title":"1.1. \u63cf\u8ff0","text":"<p>\u5f53\u5927\u91cf\u7f13\u5b58\u6570\u636e\u5728\u540c\u4e00\u65f6\u95f4\u8fc7\u671f\uff08\u5931\u6548\uff09\u6216\u8005+Redis+\u6545\u969c\u5b95\u673a\u65f6\uff0c\u5982\u679c\u6b64\u65f6\u6709\u5927\u91cf\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u90fd\u65e0\u6cd5\u5728+Redis+\u4e2d\u5904\u7406\uff0c\u4e8e\u662f\u5168\u90e8\u8bf7\u6c42\u90fd\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4ece\u800c\u5bfc\u81f4\u6570\u636e\u5e93\u7684\u538b\u529b\u9aa4\u589e\uff0c\u4e25\u91cd\u7684\u4f1a\u9020\u6210\u6570\u636e\u5e93\u5b95\u673a\uff0c\u4ece\u800c\u5f62\u6210\u4e00\u7cfb\u5217\u8fde\u9501\u53cd\u5e94\uff0c\u9020\u6210\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002</p>","boost":2},{"location":"redis/cache/#12","title":"1.2. \u539f\u56e0","text":"<ul> <li>\u5927\u91cf\u6570\u636e\u540c\u65f6\u8fc7\u671f</li> <li>Redis \u6545\u969c\u5b95\u673a</li> </ul>","boost":2},{"location":"redis/cache/#13","title":"1.3. \u89e3\u51b3\u529e\u6cd5","text":"<p>\u5927\u91cf\u6570\u636e\u540c\u65f6\u8fc7\u671f</p> <ul> <li>\u5747\u5300\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4<ul> <li>\u8bbe\u7f6e\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\uff0c\u52a0\u4e0a\u4e00\u4e2a\u968f\u673a\u6570\u3002</li> </ul> </li> <li>\u4e92\u65a5\u9501<ul> <li>\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6765\u6784\u5efa\u7f13\u5b58</li> </ul> </li> <li>\u540e\u53f0\u66f4\u65b0\u7f13\u5b58<ul> <li>\u9891\u7e41\u5730\u68c0\u6d4b\u7f13\u5b58\u662f\u5426\u6709\u6548</li> <li>\u5728\u4e1a\u52a1\u7ebf\u7a0b\u53d1\u73b0\u7f13\u5b58\u6570\u636e\u5931\u6548\u540e\uff08\u7f13\u5b58\u6570\u636e\u88ab\u6dd8\u6c70\uff09\uff0c\u901a\u8fc7\u6d88\u606f\u961f\u5217\u53d1\u9001\u4e00\u6761\u6d88\u606f\u901a\u77e5\u540e\u53f0\u7ebf\u7a0b\u66f4\u65b0\u7f13\u5b58</li> </ul> </li> </ul> <p>Redis \u6545\u969c\u5b95\u673a</p> <ul> <li>\u670d\u52a1\u7194\u65ad\u6216\u8bf7\u6c42\u9650\u6d41\u673a\u5236</li> <li>\u6784\u5efa Redis \u7f13\u5b58\u9ad8\u53ef\u9760\u96c6\u7fa4</li> </ul>","boost":2},{"location":"redis/cache/#2","title":"2. \u7f13\u5b58\u51fb\u7a7f","text":"","boost":2},{"location":"redis/cache/#21","title":"2.1. \u63cf\u8ff0","text":"<p>\u5f53\u7f13\u5b58\u4e2d\u7684\u67d0\u4e2a\u70ed\u70b9\u6570\u636e\u8fc7\u671f\u4e86\uff0c\u6b64\u65f6\u6709\u5927\u91cf\u8bf7\u6c42\u8bbf\u95ee\u4e86\u8be5\u70ed\u70b9\u6570\u636e\uff0c\u5c31\u65e0\u6cd5\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\uff0c\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u5f88\u5bb9\u6613\u88ab\u9ad8\u5e76\u53d1\u8bf7\u6c42\u51fb\u57ae\u3002</p>","boost":2},{"location":"redis/cache/#22","title":"2.2. \u539f\u56e0","text":"<p>\u9891\u7e41\u53cd\u95ee\u8fc7\u671f\u7684\u70ed\u70b9\u6570\u636e</p>","boost":2},{"location":"redis/cache/#23","title":"2.3. \u89e3\u51b3\u529e\u6cd5","text":"<ul> <li>\u4e92\u65a5\u9501<ul> <li>\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6765\u6784\u5efa\u7f13\u5b58</li> </ul> </li> <li>\u4e0d\u7ed9\u70ed\u70b9\u6570\u636e\u5e93\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u540e\u53f0\u5f02\u6b65\u66f4\u65b0\u6216\u70ed\u70b9\u6570\u636e\u8fc7\u671f\u524d\uff0c\u63d0\u524d\u901a\u77e5\u540e\u53f0\u7ebf\u7a0b\u66f4\u65b0\u7f13\u5b58\u5e76\u91cd\u65b0\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4</li> </ul>","boost":2},{"location":"redis/cache/#3","title":"3. \u7f13\u5b58\u7a7f\u900f","text":"","boost":2},{"location":"redis/cache/#31","title":"3.1. \u63cf\u8ff0","text":"<p>\u5f53\u7528\u6237\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u65e2\u4e0d\u5728\u7f13\u5b58\u4e2d\uff0c\u4e5f\u4e0d\u5728\u6570\u636e\u5e93\u4e2d\u3002\u8bf7\u6c42\u6765\u4e34\u65f6\u5148\u8bbf\u95ee\u7f13\u5b58\uff0c\u6ca1\u6709\u6570\u636e\uff0c\u7136\u540e\u518d\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4e5f\u6ca1\u6709\u6570\u636e\uff0c\u5982\u679c\u8fd9\u7c7b\u8bf7\u6c42\u5927\u91cf\u6d8c\u5165\uff0c\u6570\u636e\u5e93\u538b\u529b\u6025\u5267\u4e0a\u5347\u3002</p>","boost":2},{"location":"redis/cache/#32","title":"3.2. \u539f\u56e0","text":"<p>\u4e00\u822c\u67092\u79cd\u60c5\u51b5</p> <ul> <li>\u4e1a\u52a1\u9519\u8bef\u64cd\u4f5c<ul> <li>\u7f13\u5b58\u548c\u6570\u636e\u5e93\u6570\u636e\u5747\u88ab\u4eba\u5220\u9664</li> </ul> </li> <li>\u9ed1\u5ba2\u6076\u610f\u653b\u51fb<ul> <li>\u6545\u610f\u4f7f\u7528\u4e0d\u5b58\u5728\u7684\u6570\u636e\uff0c\u5927\u91cf\u8bbf\u95ee</li> </ul> </li> </ul>","boost":2},{"location":"redis/cache/#33","title":"3.3. \u89e3\u51b3\u529e\u6cd5","text":"<ul> <li>\u9650\u5236\u975e\u6cd5\u8bf7\u6c42<ul> <li>\u7a0b\u5e8f\u4e2d\u4e25\u683c\u6821\u9a8c\uff0c\u5224\u65adAPI\u8bf7\u6c42\u7684\u5408\u6cd5\u6027\u3002</li> </ul> </li> <li>\u7f13\u5b58\u9ed8\u8ba4\u503c\u6216\u7a7a\u503c<ul> <li>\u5f53\u53d1\u751f\u7f13\u5b58\u7a7f\u900f\u60c5\u51b5\uff0c\u9488\u5bf9\u4e1a\u52a1\u67e5\u8be2\u7684\u6570\u636e\uff0c\u5728\u7f13\u5b58\u4e2d\u521b\u5efa\u9ed8\u8ba4\u503c\u6216\u7a7a\u503c</li> </ul> </li> <li>\u4f7f\u7528\u5e03\u9686\u6ee4\u6ce2\u5668\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u67e5\u8be2\u503c\uff0c\u907f\u514d\u901a\u8fc7\u67e5\u8be2\u6570\u636e\u5e93\u5224\u65ad<ul> <li>\u5e03\u9686\u6ee4\u6ce2\u5668\u57fa\u4e8e\u54c8\u5e0c\u51fd\u6570\u5b9e\u73b0\u67e5\u627e\uff0c\u9ad8\u6548\u67e5\u8be2\u7684\u540c\u65f6\uff0c\u4e5f\u5b58\u5728\u54c8\u5e0c\u51b2\u7a81\u7684\u60c5\u51b5\uff08\u8bef\u5224\uff09\u3002</li> <li>\u67e5\u8be2\u5e03\u9686\u6ee4\u6ce2\u5668\u6570\u636e\u5b58\u5728\uff0c\u5e76\u4e0d\u4e00\u5b9a\u8bc1\u660e\u6570\u636e\u5e93\u4e2d\u4e00\u5b9a\u5b58\u5728\u6570\u636e\u3002\u4f46\u67e5\u8be2\u5e03\u9686\u6ee4\u6ce2\u5668\u6570\u636e\u4e0d\u5b58\u5728\uff0c\u6570\u636e\u5e93\u4e2d\u4e00\u5b9a\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684\u6570\u636e\u3002</li> </ul> </li> </ul>","boost":2},{"location":"redis/cache/#_1","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797coding - \u4ec0\u4e48\u662f\u7f13\u5b58\u96ea\u5d29\u3001\u51fb\u7a7f\u3001\u7a7f\u900f?</li> </ul>","boost":2},{"location":"redis/durability/","title":"\u6301\u4e45\u5316","text":"<p>Redis \u5171\u6709\u4e09\u79cd\u6570\u636e\u6301\u4e45\u5316\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>AOF \u65e5\u5fd7\uff1a\u6bcf\u6267\u884c\u4e00\u6761\u5199\u64cd\u4f5c\u547d\u4ee4\uff0c\u5c31\u628a\u8be5\u547d\u4ee4\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\uff1b</li> <li>RDB \u5feb\u7167\uff1a\u5c06\u67d0\u4e00\u65f6\u523b\u7684\u5185\u5b58\u6570\u636e\uff0c\u4ee5\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u5199\u5165\u78c1\u76d8\uff1b</li> <li>\u6df7\u5408\u6301\u4e45\u5316\u65b9\u5f0f\uff1aRedis 4.0 \u65b0\u589e\u7684\u65b9\u5f0f\uff0c\u96c6\u6210\u4e86 AOF \u548c RBD \u7684\u4f18\u70b9</li> </ul>","boost":2},{"location":"redis/durability/#1-aof","title":"1. AOF \u65e5\u5fd7","text":"<p>Reids \u662f\u5148\u6267\u884c\u5199\u64cd\u4f5c\u547d\u4ee4\u540e\uff0c\u624d\u5c06\u8be5\u547d\u4ee4\u8bb0\u5f55\u5230 AOF \u65e5\u5fd7\u91cc\u7684\uff0c\u8fd9\u4e48\u505a\u5176\u5b9e\u6709\u4e24\u4e2a\u597d\u5904\u3002</p> <p>\u597d\u5904</p> <ul> <li>\u907f\u514d\u989d\u5916\u7684\u68c0\u67e5\u5f00\u9500\uff1a\u56e0\u4e3a\u5982\u679c\u5148\u5c06\u5199\u64cd\u4f5c\u547d\u4ee4\u8bb0\u5f55\u5230 AOF \u65e5\u5fd7\u91cc\uff0c\u518d\u6267\u884c\u8be5\u547d\u4ee4\u7684\u8bdd\uff0c\u5982\u679c\u5f53\u524d\u7684\u547d\u4ee4\u8bed\u6cd5\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u8fdb\u884c\u547d\u4ee4\u8bed\u6cd5\u68c0\u67e5\uff0c\u8be5\u9519\u8bef\u7684\u547d\u4ee4\u8bb0\u5f55\u5230 AOF \u65e5\u5fd7\u91cc\u540e\uff0cRedis \u5728\u4f7f\u7528\u65e5\u5fd7\u6062\u590d\u6570\u636e\u65f6\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u9519\u3002</li> <li>\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u5199\u64cd\u4f5c\u547d\u4ee4\u7684\u6267\u884c\uff1a\u56e0\u4e3a\u5f53\u5199\u64cd\u4f5c\u547d\u4ee4\u6267\u884c\u6210\u529f\u540e\uff0c\u624d\u4f1a\u5c06\u547d\u4ee4\u8bb0\u5f55\u5230 AOF \u65e5\u5fd7\u3002</li> </ul> <p>\u98ce\u9669</p> <ul> <li>\u6570\u636e\u53ef\u80fd\u4f1a\u4e22\u5931\uff1a \u6267\u884c\u5199\u64cd\u4f5c\u547d\u4ee4\u548c\u8bb0\u5f55\u65e5\u5fd7\u662f\u4e24\u4e2a\u8fc7\u7a0b\uff0c\u90a3\u5f53 Redis \u5728\u8fd8\u6ca1\u6765\u5f97\u53ca\u5c06\u547d\u4ee4\u5199\u5165\u5230\u786c\u76d8\u65f6\uff0c\u670d\u52a1\u5668\u53d1\u751f\u5b95\u673a\u4e86\uff0c\u8fd9\u4e2a\u6570\u636e\u5c31\u4f1a\u6709\u4e22\u5931\u7684\u98ce\u9669\u3002</li> <li>\u53ef\u80fd\u963b\u585e\u5176\u4ed6\u64cd\u4f5c\uff1a \u7531\u4e8e\u5199\u64cd\u4f5c\u547d\u4ee4\u6267\u884c\u6210\u529f\u540e\u624d\u8bb0\u5f55\u5230 AOF \u65e5\u5fd7\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u547d\u4ee4\u7684\u6267\u884c\uff0c\u4f46\u56e0\u4e3a AOF \u65e5\u5fd7\u4e5f\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u6240\u4ee5\u5f53 Redis \u628a\u65e5\u5fd7\u6587\u4ef6\u5199\u5165\u78c1\u76d8\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u4f1a\u963b\u585e\u540e\u7eed\u7684\u64cd\u4f5c\u65e0\u6cd5\u6267\u884c\u3002</li> </ul>","boost":2},{"location":"redis/durability/#redis-aof","title":"Redis \u5199\u5165 AOF \u65e5\u5fd7\u7684\u8fc7\u7a0b","text":"<ol> <li>Redis \u6267\u884c\u5b8c\u5199\u64cd\u4f5c\u547d\u4ee4\u540e\uff0c\u4f1a\u5c06\u547d\u4ee4\u8ffd\u52a0\u5230 server.aof_buf \u7f13\u51b2\u533a\uff1b</li> <li>\u7136\u540e\u901a\u8fc7 write() \u7cfb\u7edf\u8c03\u7528\uff0c\u5c06 aof_buf \u7f13\u51b2\u533a\u7684\u6570\u636e\u5199\u5165\u5230 AOF \u6587\u4ef6\uff0c\u6b64\u65f6\u6570\u636e\u5e76\u6ca1\u6709\u5199\u5165\u5230\u786c\u76d8\uff0c\u800c\u662f\u62f7\u8d1d\u5230\u4e86\u5185\u6838\u7f13\u51b2\u533a page cache\uff0c\u7b49\u5f85\u5185\u6838\u5c06\u6570\u636e\u5199\u5165\u786c\u76d8\uff1b</li> <li>\u5177\u4f53\u5185\u6838\u7f13\u51b2\u533a\u7684\u6570\u636e\u4ec0\u4e48\u65f6\u5019\u5199\u5165\u5230\u786c\u76d8\uff0c\u7531\u5185\u6838\u51b3\u5b9a\u3002</li> </ol>","boost":2},{"location":"redis/durability/#_1","title":"\u5199\u56de\uff08\u5199\u56de\u786c\u76d8\uff09\u7b56\u7565","text":"\u5199\u56de\u7b56\u7565 \u5199\u56de\u65f6\u673a \u4f18\u70b9 \u7f3a\u70b9 Always \u540c\u6b65\u5199\u56de \u53ef\u9760\u6027\u9ad8\u3001\u6700\u5927\u7a0b\u5ea6\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931 \u6bcf\u4e2a\u5199\u547d\u4ee4\u90fd\u8981\u5199\u56de\u786c\u76d8\uff0c\u6027\u80fd\u5f00\u9500\u5927 Everysec \u6bcf\u79d2\u5199\u56de \u6027\u80fd\u9002\u4e2d \u5b95\u673a\u65f6\u4f1a\u4e22\u5f03 1 \u79d2\u5185\u7684\u6570\u636e No \u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\u5199\u56de \u6027\u80fd\u597d \u5b95\u673a\u65f6\u4e22\u5931\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u5f88\u591a <ul> <li>\u5982\u679c\u8981\u9ad8\u6027\u80fd\uff0c\u5c31\u9009\u62e9 No \u7b56\u7565\uff1b</li> <li>\u5982\u679c\u8981\u9ad8\u53ef\u9760\uff0c\u5c31\u9009\u62e9 Always \u7b56\u7565\uff1b</li> <li>\u5982\u679c\u5141\u8bb8\u6570\u636e\u4e22\u5931\u4e00\u70b9\uff0c\u4f46\u53c8\u60f3\u6027\u80fd\u9ad8\uff0c\u5c31\u9009\u62e9 Everysec \u7b56\u7565\u3002</li> </ul>","boost":2},{"location":"redis/durability/#aof","title":"AOF \u91cd\u5199\u673a\u5236","text":"<p>Redis \u4e3a\u4e86\u907f\u514d AOF \u6587\u4ef6\u8d8a\u5199\u8d8a\u5927\uff0c\u63d0\u4f9b\u4e86 AOF \u91cd\u5199\u673a\u5236\uff0c\u5f53 AOF \u6587\u4ef6\u7684\u5927\u5c0f\u8d85\u8fc7\u6240\u8bbe\u5b9a\u7684\u9608\u503c\u540e\uff0cRedis \u5c31\u4f1a\u542f\u7528 AOF \u91cd\u5199\u673a\u5236\uff0c\u6765\u538b\u7f29 AOF \u6587\u4ef6\u3002</p> <p>\u91cd\u5199\u673a\u5236\u7684\u5999\u5904\u5728\u4e8e\uff0c\u5c3d\u7ba1\u67d0\u4e2a\u952e\u503c\u5bf9\u88ab\u591a\u6761\u5199\u547d\u4ee4\u53cd\u590d\u4fee\u6539\uff0c\u6700\u7ec8\u4e5f\u53ea\u9700\u8981\u6839\u636e\u8fd9\u4e2a\u300c\u952e\u503c\u5bf9\u300d\u5f53\u524d\u7684\u6700\u65b0\u72b6\u6001\uff0c\u7136\u540e\u7528\u4e00\u6761\u547d\u4ee4\u53bb\u8bb0\u5f55\u952e\u503c\u5bf9\uff0c\u4ee3\u66ff\u4e4b\u524d\u8bb0\u5f55\u8fd9\u4e2a\u952e\u503c\u5bf9\u7684\u591a\u6761\u547d\u4ee4\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86 AOF \u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\u6570\u91cf\u3002\u6700\u540e\u5728\u91cd\u5199\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u5c06\u65b0\u7684 AOF \u6587\u4ef6\u8986\u76d6\u73b0\u6709\u7684 AOF \u6587\u4ef6\u3002</p>","boost":2},{"location":"redis/durability/#aof_1","title":"AOF \u540e\u53f0\u91cd\u5199","text":"<p>Redis \u7684\u91cd\u5199 AOF \u8fc7\u7a0b\u662f\u7531\u540e\u53f0\u5b50\u8fdb\u7a0b bgrewriteaof \u6765\u5b8c\u6210\u7684</p> <ul> <li>\u5b50\u8fdb\u7a0b\u8fdb\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\u8bf7\u6c42\uff0c\u4ece\u800c\u907f\u514d\u963b\u585e\u4e3b\u8fdb\u7a0b\uff1b</li> <li>\u5b50\u8fdb\u7a0b\u5e26\u6709\u4e3b\u8fdb\u7a0b\u7684\u6570\u636e\u526f\u672c\uff08\u6570\u636e\u526f\u672c\u600e\u4e48\u4ea7\u751f\u7684\u540e\u9762\u4f1a\u8bf4\uff09\uff0c\u8fd9\u91cc\u4f7f\u7528\u5b50\u8fdb\u7a0b\u800c\u4e0d\u662f\u7ebf\u7a0b</li> </ul> <p>\u5b50\u8fdb\u7a0b\u5c31\u5171\u4eab\u4e86\u7236\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u6570\u636e\u4e86\uff0c\u8fd9\u6837\u80fd\u591f\u8282\u7ea6\u7269\u7406\u5185\u5b58\u8d44\u6e90\uff0c\u9875\u8868\u5bf9\u5e94\u7684\u9875\u8868\u9879\u7684\u5c5e\u6027\u4f1a\u6807\u8bb0\u8be5\u7269\u7406\u5185\u5b58\u7684\u6743\u9650\u4e3a\u53ea\u8bfb\u3002</p> <p>\u5199\u65f6\u590d\u5236(Copy On Write)</p> <p>\u5f53\u7236\u8fdb\u7a0b\u6216\u8005\u5b50\u8fdb\u7a0b\u5728\u5411\u8fd9\u4e2a\u5185\u5b58\u53d1\u8d77\u5199\u64cd\u4f5c\u65f6\uff0cCPU \u5c31\u4f1a\u89e6\u53d1\u5199\u4fdd\u62a4\u4e2d\u65ad\uff0c\u8fd9\u4e2a\u5199\u4fdd\u62a4\u4e2d\u65ad\u662f\u7531\u4e8e\u8fdd\u53cd\u6743\u9650\u5bfc\u81f4\u7684\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5728\u300c\u5199\u4fdd\u62a4\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u300d\u91cc\u8fdb\u884c\u7269\u7406\u5185\u5b58\u7684\u590d\u5236\uff0c\u5e76\u91cd\u65b0\u8bbe\u7f6e\u5176\u5185\u5b58\u6620\u5c04\u5173\u7cfb\uff0c\u5c06\u7236\u5b50\u8fdb\u7a0b\u7684\u5185\u5b58\u8bfb\u5199\u6743\u9650\u8bbe\u7f6e\u4e3a\u53ef\u8bfb\u5199\uff0c\u6700\u540e\u624d\u4f1a\u5bf9\u5185\u5b58\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u300c\u5199\u65f6\u590d\u5236(Copy On Write)\u300d\u3002</p> <p> </p> <p>\u5728 bgrewriteaof \u5b50\u8fdb\u7a0b\u6267\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c\u4e3b\u8fdb\u7a0b\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u4e09\u4e2a\u5de5\u4f5c:</p> <ol> <li>\u6267\u884c\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u547d\u4ee4\uff1b</li> <li>\u5c06\u6267\u884c\u540e\u7684\u5199\u547d\u4ee4\u8ffd\u52a0\u5230 \u300cAOF \u7f13\u51b2\u533a\u300d\uff1b</li> <li>\u5c06\u6267\u884c\u540e\u7684\u5199\u547d\u4ee4\u8ffd\u52a0\u5230 \u300cAOF \u91cd\u5199\u7f13\u51b2\u533a\u300d\uff1b</li> </ol> <p>\u5728\u6574\u4e2a AOF \u540e\u53f0\u91cd\u5199\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u53d1\u751f\u5199\u65f6\u590d\u5236\u4f1a\u5bf9\u4e3b\u8fdb\u7a0b\u9020\u6210\u963b\u585e\uff0c\u8fd8\u6709\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u65f6\u4e5f\u4f1a\u5bf9\u4e3b\u8fdb\u7a0b\u9020\u6210\u963b\u585e\uff0c\u5728\u5176\u4ed6\u65f6\u5019\uff0cAOF \u540e\u53f0\u91cd\u5199\u90fd\u4e0d\u4f1a\u963b\u585e\u4e3b\u8fdb\u7a0b\u3002</p>","boost":2},{"location":"redis/durability/#2-rdb","title":"2. RDB \u5feb\u7167","text":"<p>RDB \u5feb\u7167\u5c31\u662f\u8bb0\u5f55\u67d0\u4e00\u4e2a\u77ac\u95f4\u7684\u5185\u5b58\u6570\u636e\uff0c\u8bb0\u5f55\u7684\u662f\u5b9e\u9645\u6570\u636e\uff0c\u800c AOF \u6587\u4ef6\u8bb0\u5f55\u7684\u662f\u547d\u4ee4\u64cd\u4f5c\u7684\u65e5\u5fd7\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u6570\u636e\u3002</p> <p>\u56e0\u6b64\u5728 Redis \u6062\u590d\u6570\u636e\u65f6\uff0c RDB \u6062\u590d\u6570\u636e\u7684\u6548\u7387\u4f1a\u6bd4 AOF \u9ad8\u4e9b\uff0c\u56e0\u4e3a\u76f4\u63a5\u5c06 RDB \u6587\u4ef6\u8bfb\u5165\u5185\u5b58\u5c31\u53ef\u4ee5\uff0c\u4e0d\u9700\u8981\u50cf AOF \u90a3\u6837\u8fd8\u9700\u8981\u989d\u5916\u6267\u884c\u64cd\u4f5c\u547d\u4ee4\u7684\u6b65\u9aa4\u624d\u80fd\u6062\u590d\u6570\u636e\u3002</p> <p>Redis \u63d0\u4f9b\u4e86\u4e24\u4e2a\u547d\u4ee4\u6765\u751f\u6210 RDB \u6587\u4ef6\uff0c\u5206\u522b\u662f save \u548c bgsave\uff0c\u4ed6\u4eec\u7684\u533a\u522b\u5c31\u5728\u4e8e\u662f\u5426\u5728\u300c\u4e3b\u7ebf\u7a0b\u300d\u91cc\u6267\u884c\uff1a</p> <ul> <li>\u6267\u884c\u4e86 save \u547d\u4ee4\uff0c\u5c31\u4f1a\u5728\u4e3b\u7ebf\u7a0b\u751f\u6210 RDB \u6587\u4ef6\uff0c\u7531\u4e8e\u548c\u6267\u884c\u64cd\u4f5c\u547d\u4ee4\u5728\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u5982\u679c\u5199\u5165 RDB \u6587\u4ef6\u7684\u65f6\u95f4\u592a\u957f\uff0c\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\uff1b</li> <li>\u6267\u884c\u4e86 bgsave \u547d\u4ee4\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6765\u751f\u6210 RDB \u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e3b\u7ebf\u7a0b\u7684\u963b\u585e\uff1b</li> </ul> <p>Tip</p> <p>Redis \u7684\u5feb\u7167\u662f\u5168\u91cf\u5feb\u7167\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u6267\u884c\u5feb\u7167\uff0c\u90fd\u662f\u628a\u5185\u5b58\u4e2d\u7684\u300c\u6240\u6709\u6570\u636e\u300d\u90fd\u8bb0\u5f55\u5230\u78c1\u76d8\u4e2d\u3002</p> <p>RDB \u5728\u6267\u884c\u5feb\u7167\u7684\u65f6\u5019\uff0c\u6570\u636e\u80fd\u4fee\u6539\u5417\uff1f</p> <p>\u53ef\u4ee5\u7684\uff0c\u6267\u884c bgsave \u8fc7\u7a0b\u4e2d\uff0cRedis \u4f9d\u7136\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u64cd\u4f5c\u547d\u4ee4\u7684\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u662f\u80fd\u88ab\u4fee\u6539\u7684\uff0c\u5173\u952e\u7684\u6280\u672f\u5c31\u5728\u4e8e\u5199\u65f6\u590d\u5236\u6280\u672f\uff08Copy-On-Write, COW\uff09\u3002</p>","boost":2},{"location":"redis/durability/#3","title":"3. \u6df7\u5408\u6301\u4e45\u5316","text":"<ul> <li>RDB \u4f18\u70b9\u662f\u6570\u636e\u6062\u590d\u901f\u5ea6\u5feb\uff0c\u4f46\u662f\u5feb\u7167\u7684\u9891\u7387\u4e0d\u597d\u628a\u63e1\u3002\u9891\u7387\u592a\u4f4e\uff0c\u4e22\u5931\u7684\u6570\u636e\u5c31\u4f1a\u6bd4\u8f83\u591a\uff0c\u9891\u7387\u592a\u9ad8\uff0c\u5c31\u4f1a\u5f71\u54cd\u6027\u80fd\u3002</li> <li>AOF \u4f18\u70b9\u662f\u4e22\u5931\u6570\u636e\u5c11\uff0c\u4f46\u662f\u6570\u636e\u6062\u590d\u4e0d\u5feb\u3002</li> </ul> <p>\u4e3a\u4e86\u96c6\u6210\u4e86\u4e24\u8005\u7684\u4f18\u70b9\uff0c Redis 4.0 \u63d0\u51fa\u4e86\u6df7\u5408\u4f7f\u7528 AOF \u65e5\u5fd7\u548c\u5185\u5b58\u5feb\u7167\uff0c\u4e5f\u53eb\u6df7\u5408\u6301\u4e45\u5316\uff0c\u65e2\u4fdd\u8bc1\u4e86 Redis \u91cd\u542f\u901f\u5ea6\uff0c\u53c8\u964d\u4f4e\u6570\u636e\u4e22\u5931\u98ce\u9669\u3002</p> <p>\u4f7f\u7528\u4e86\u6df7\u5408\u6301\u4e45\u5316\uff0cAOF \u6587\u4ef6\u7684\u524d\u534a\u90e8\u5206\u662f RDB \u683c\u5f0f\u7684\u5168\u91cf\u6570\u636e\uff0c\u540e\u534a\u90e8\u5206\u662f AOF \u683c\u5f0f\u7684\u589e\u91cf\u6570\u636e\u3002</p> <p>\u6df7\u5408\u6301\u4e45\u5316\u4f18\u70b9\uff1a</p> <ul> <li>\u6df7\u5408\u6301\u4e45\u5316\u7ed3\u5408\u4e86 RDB \u548c AOF \u6301\u4e45\u5316\u7684\u4f18\u70b9\uff0c\u5f00\u5934\u4e3a RDB \u7684\u683c\u5f0f\uff0c\u4f7f\u5f97 Redis \u53ef\u4ee5\u66f4\u5feb\u7684\u542f\u52a8\uff0c\u540c\u65f6\u7ed3\u5408 AOF \u7684\u4f18\u70b9\uff0c\u6709\u51cf\u4f4e\u4e86\u5927\u91cf\u6570\u636e\u4e22\u5931\u7684\u98ce\u9669\u3002</li> </ul> <p>\u6df7\u5408\u6301\u4e45\u5316\u7f3a\u70b9\uff1a</p> <ul> <li>AOF \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e86 RDB \u683c\u5f0f\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97 AOF \u6587\u4ef6\u7684\u53ef\u8bfb\u6027\u53d8\u5f97\u5f88\u5dee\uff1b</li> <li>\u517c\u5bb9\u6027\u5dee\uff0c\u5982\u679c\u5f00\u542f\u6df7\u5408\u6301\u4e45\u5316\uff0c\u90a3\u4e48\u6b64\u6df7\u5408\u6301\u4e45\u5316 AOF \u6587\u4ef6\uff0c\u5c31\u4e0d\u80fd\u7528\u5728 Redis 4.0 \u4e4b\u524d\u7248\u672c\u4e86\u3002</li> </ul>","boost":2},{"location":"redis/durability/#_2","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding - \u56fe\u89e3 Redis\uff1a\u6301\u4e45\u5316\u7bc7</li> </ul>","boost":2},{"location":"redis/expire/","title":"\u8fc7\u671f\u7b56\u7565","text":"","boost":2},{"location":"redis/expire/#1-redis","title":"1. Redis \u8fc7\u671f\u5220\u9664\u7b56\u7565\u6709\u54ea\u4e9b\uff1f","text":"<ol> <li>\u5b9a\u65f6\u5220\u9664\uff1a\u5bf9\u5185\u5b58\u662f\u6700\u53cb\u597d\u7684\u3002\u5bf9 CPU \u4e0d\u53cb\u597d\u3002</li> <li>\u4f18\u70b9\uff1a\u53ef\u4ee5\u4fdd\u8bc1\u8fc7\u671f key \u4f1a\u88ab\u5c3d\u5feb\u5220\u9664\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u53ef\u4ee5\u88ab\u5c3d\u5feb\u5730\u91ca\u653e\u3002</li> <li>\u7f3a\u70b9\uff1a\u5728\u8fc7\u671f key \u6bd4\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u5220\u9664\u8fc7\u671f key \u53ef\u80fd\u4f1a\u5360\u7528\u76f8\u5f53\u4e00\u90e8\u5206 CPU \u65f6\u95f4\uff0c\u5728\u5185\u5b58\u4e0d\u7d27\u5f20\u4f46 CPU \u65f6\u95f4\u7d27\u5f20\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06 CPU \u65f6\u95f4\u7528\u4e8e\u5220\u9664\u548c\u5f53\u524d\u4efb\u52a1\u65e0\u5173\u7684\u8fc7\u671f\u952e\u4e0a\uff0c\u65e0\u7591\u4f1a\u5bf9\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u548c\u541e\u5410\u91cf\u9020\u6210\u5f71\u54cd\u3002</li> <li>\u60f0\u6027\u5220\u9664\uff1a\u5bf9\u5185\u5b58\u662f\u6700\u53cb\u597d\u7684\u3002\u5bf9 CPU \u4e0d\u53cb\u597d\u3002</li> <li>\u5b9a\u671f\u5220\u9664\uff1a\u5bf9\u662f CPU \u6700\u53cb\u597d\u7684\u3002\u5bf9 \u5185\u5b58 \u4e0d\u53cb\u597d\u3002</li> </ol> <p>\u5b9a\u65f6\u5220\u9664\u7b56\u7565\u662f\u600e\u4e48\u6837\u7684\uff1f</p> <p>\u5b9a\u65f6\u5220\u9664\u7b56\u7565\u7684\u505a\u6cd5\u662f\uff0c\u5728\u8bbe\u7f6e key \u7684\u8fc7\u671f\u65f6\u95f4\u65f6\uff0c\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u4e8b\u4ef6\uff0c\u5f53\u65f6\u95f4\u5230\u8fbe\u65f6\uff0c\u7531\u4e8b\u4ef6\u5904\u7406\u5668\u81ea\u52a8\u6267\u884c key \u7684\u5220\u9664\u64cd\u4f5c\u3002</p> <p>\u60f0\u6027\u5220\u9664\u7b56\u7565\u662f\u600e\u4e48\u6837\u7684\uff1f</p> <p>\u60f0\u6027\u5220\u9664\u7b56\u7565\u7684\u505a\u6cd5\u662f\uff0c\u4e0d\u4e3b\u52a8\u5220\u9664\u8fc7\u671f\u952e\uff0c\u6bcf\u6b21\u4ece\u6570\u636e\u5e93\u8bbf\u95ee key \u65f6\uff0c\u90fd\u68c0\u6d4b key \u662f\u5426\u8fc7\u671f\uff0c\u5982\u679c\u8fc7\u671f\u5219\u5220\u9664\u8be5 key\u3002</p> <p>\u5b9a\u671f\u5220\u9664\u7b56\u7565\u662f\u600e\u4e48\u6837\u7684\uff1f</p> <p>\u5b9a\u671f\u5220\u9664\u7b56\u7565\u7684\u505a\u6cd5\u662f\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u300c\u968f\u673a\u300d\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u51fa\u4e00\u5b9a\u6570\u91cf\u7684 key \u8fdb\u884c\u68c0\u67e5\uff0c\u5e76\u5220\u9664\u5176\u4e2d\u7684\u8fc7\u671fkey\u3002</p> <p>Redis \u9009\u62e9 \u300c\u60f0\u6027\u5220\u9664+\u5b9a\u671f\u5220\u9664\u300d\u8fd9\u4e24\u79cd\u7b56\u7565\u914d\u548c\u4f7f\u7528\uff0c\u4ee5\u6c42\u5728\u5408\u7406\u4f7f\u7528 CPU \u65f6\u95f4\u548c\u907f\u514d\u5185\u5b58\u6d6a\u8d39\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002</p>","boost":2},{"location":"redis/expire/#2-redis","title":"2. Redis \u5185\u5b58\u6dd8\u6c70\u7b56\u7565","text":"<p>\u5728\u914d\u7f6e\u6587\u4ef6 <code>redis.conf</code> \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 <code>maxmemory &lt;bytes&gt;</code> \u6765\u8bbe\u5b9a\u6700\u5927\u8fd0\u884c\u5185\u5b58\uff0c\u53ea\u6709\u5728 Redis \u7684\u8fd0\u884c\u5185\u5b58\u8fbe\u5230\u4e86\u6211\u4eec\u8bbe\u7f6e\u7684\u6700\u5927\u8fd0\u884c\u5185\u5b58\uff0c\u624d\u4f1a\u89e6\u53d1\u5185\u5b58\u6dd8\u6c70\u7b56\u7565</p> <p>Redis \u5185\u5b58\u6dd8\u6c70\u7b56\u7565\u5171\u6709\u516b\u79cd\uff0c\u8fd9\u516b\u79cd\u7b56\u7565\u5927\u4f53\u5206\u4e3a\u300c\u4e0d\u8fdb\u884c\u6570\u636e\u6dd8\u6c70\u300d\u548c\u300c\u8fdb\u884c\u6570\u636e\u6dd8\u6c70\u300d\u4e24\u7c7b\u7b56\u7565\u3002</p>","boost":2},{"location":"redis/expire/#21","title":"2.1. \u4e0d\u8fdb\u884c\u6570\u636e\u6dd8\u6c70\u7684\u7b56\u7565","text":"<p>noeviction\uff08Redis3.0 \u4e4b\u540e\uff0c\u9ed8\u8ba4\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff09 \uff1a\u5b83\u8868\u793a\u5f53\u8fd0\u884c\u5185\u5b58\u8d85\u8fc7\u6700\u5927\u8bbe\u7f6e\u5185\u5b58\u65f6\uff0c\u4e0d\u6dd8\u6c70\u4efb\u4f55\u6570\u636e\uff0c\u8fd9\u65f6\u5982\u679c\u6709\u65b0\u7684\u6570\u636e\u5199\u5165\uff0c\u4f1a\u62a5\u9519\u901a\u77e5\u7981\u6b62\u5199\u5165\uff0c\u4e0d\u6dd8\u6c70\u4efb\u4f55\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u7528\u6570\u636e\u5199\u5165\u7684\u8bdd\uff0c\u53ea\u662f\u5355\u7eaf\u7684\u67e5\u8be2\u6216\u8005\u5220\u9664\u64cd\u4f5c\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002</p>","boost":2},{"location":"redis/expire/#22","title":"2.2. \u8fdb\u884c\u6570\u636e\u6dd8\u6c70\u7684\u7b56\u7565","text":"<p>\u9488\u5bf9\u300c\u8fdb\u884c\u6570\u636e\u6dd8\u6c70\u300d\u8fd9\u4e00\u7c7b\u7b56\u7565\uff0c\u53c8\u53ef\u4ee5\u7ec6\u5206\u4e3a\u300c\u5728\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u4e2d\u8fdb\u884c\u6dd8\u6c70\u300d\u548c\u300c\u5728\u6240\u6709\u6570\u636e\u8303\u56f4\u5185\u8fdb\u884c\u6dd8\u6c70\u300d\u8fd9\u4e24\u7c7b\u7b56\u7565\u3002</p> <p>\u5728\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u4e2d\u8fdb\u884c\u6dd8\u6c70\uff1a</p> <ul> <li>volatile-random\uff1a\u968f\u673a\u6dd8\u6c70\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u4efb\u610f\u952e\u503c\uff1b</li> <li>volatile-ttl\uff1a\u4f18\u5148\u6dd8\u6c70\u66f4\u65e9\u8fc7\u671f\u7684\u952e\u503c\u3002</li> <li>volatile-lru\uff08Redis 3.0 \u4e4b\u524d\uff0c\u9ed8\u8ba4\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff09\uff1a\u6dd8\u6c70\u6240\u6709\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e\u503c\u4e2d\uff0c\u6700\u4e45\u672a\u4f7f\u7528\u7684\u952e\u503c\uff1b</li> <li>volatile-lfu\uff08Redis 4.0 \u540e\u65b0\u589e\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff09\uff1a\u6dd8\u6c70\u6240\u6709\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e\u503c\u4e2d\uff0c\u6700\u5c11\u4f7f\u7528\u7684\u952e\u503c\uff1b</li> </ul> <p>\u5728\u6240\u6709\u6570\u636e\u8303\u56f4\u5185\u8fdb\u884c\u6dd8\u6c70\uff1a</p> <ul> <li>allkeys-random\uff1a\u968f\u673a\u6dd8\u6c70\u4efb\u610f\u952e\u503c;</li> <li>allkeys-lru\uff1a\u6dd8\u6c70\u6574\u4e2a\u952e\u503c\u4e2d\u6700\u4e45\u672a\u4f7f\u7528\u7684\u952e\u503c\uff1b</li> <li>allkeys-lfu\uff08Redis 4.0 \u540e\u65b0\u589e\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff09\uff1a\u6dd8\u6c70\u6574\u4e2a\u952e\u503c\u4e2d\u6700\u5c11\u4f7f\u7528\u7684\u952e\u503c\u3002</li> </ul> <p>\u5982\u4f55\u67e5\u770b\u5f53\u524d Redis \u4f7f\u7528\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff1f</p> <pre><code>127.0.0.1:6379&gt; config get maxmemory-policy\n1) \"maxmemory-policy\"\n2) \"noeviction\"\n</code></pre> <p>\u5982\u4f55\u4fee\u6539\u5f53\u524d Redis \u4f7f\u7528\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\uff1f</p> <ul> <li>\u65b9\u5f0f\u4e00\uff1a\u901a\u8fc7 <code>config set maxmemory-policy &lt;\u7b56\u7565&gt;</code> \u547d\u4ee4\u8bbe\u7f6e\u3002<ul> <li>\u4f18\u70b9\uff1a\u8bbe\u7f6e\u4e4b\u540e\u7acb\u5373\u751f\u6548\uff0c\u4e0d\u9700\u8981\u91cd\u542f Redis \u670d\u52a1\uff1b\u7f3a\u70b9\uff1a\u91cd\u542f Redis \u4e4b\u540e\uff0c\u8bbe\u7f6e\u5c31\u4f1a\u5931\u6548\u3002</li> </ul> </li> <li>\u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u4fee\u6539 Redis \u914d\u7f6e\u6587\u4ef6\u4fee\u6539\uff0c\u8bbe\u7f6e <code>maxmemory-policy &lt;\u7b56\u7565&gt;</code><ul> <li>\u4f18\u70b9\uff1a\u91cd\u542f Redis \u670d\u52a1\u540e\u914d\u7f6e\u4e0d\u4f1a\u4e22\u5931\uff1b\u7f3a\u70b9\uff1a\u5fc5\u987b\u91cd\u542f Redis \u670d\u52a1\uff0c\u8bbe\u7f6e\u624d\u80fd\u751f\u6548\u3002</li> </ul> </li> </ul>","boost":2},{"location":"redis/expire/#_1","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding: \u56fe\u89e3 Redis \u4ecb\u7ecd</li> </ul>","boost":2},{"location":"redis/ha/","title":"\u9ad8\u53ef\u7528","text":"","boost":2},{"location":"redis/ha/#_1","title":"\u4e3b\u4ece\u590d\u5236","text":"<p>\u4e3b\u4ece\u590d\u5236\u662f Redis \u9ad8\u53ef\u7528\u670d\u52a1\u7684\u6700\u57fa\u7840\u7684\u4fdd\u8bc1\uff0c\u5b9e\u73b0\u65b9\u6848\u5c31\u662f\u5c06\u4ece\u524d\u7684\u4e00\u53f0 Redis \u670d\u52a1\u5668\uff0c\u540c\u6b65\u6570\u636e\u5230\u591a\u53f0\u4ece Redis \u670d\u52a1\u5668\u4e0a\uff0c\u5373\u4e00\u4e3b\u591a\u4ece\u7684\u6a21\u5f0f\uff0c\u4e14\u4e3b\u4ece\u670d\u52a1\u5668\u4e4b\u95f4\u91c7\u7528\u7684\u662f\u300c\u8bfb\u5199\u5206\u79bb\u300d\u7684\u65b9\u5f0f\u3002</p> <p>\u6240\u6709\u7684\u6570\u636e\u4fee\u6539\u53ea\u5728\u4e3b\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\uff0c\u7136\u540e\u5c06\u6700\u65b0\u7684\u6570\u636e\u540c\u6b65\u7ed9\u4ece\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u5c31\u4f7f\u5f97\u4e3b\u4ece\u670d\u52a1\u5668\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002</p> <p> </p> <p>\u4e3b\u4ece\u590d\u5236\u5171\u6709\u4e09\u79cd\u6a21\u5f0f\uff1a\u5168\u91cf\u590d\u5236\u3001\u57fa\u4e8e\u957f\u8fde\u63a5\u7684\u547d\u4ee4\u4f20\u64ad\u3001\u589e\u91cf\u590d\u5236\u3002</p> <ul> <li>\u4e3b\u4ece\u670d\u52a1\u5668\u7b2c\u4e00\u6b21\u540c\u6b65\u7684\u65f6\u5019\uff0c\u5c31\u662f\u91c7\u7528\u5168\u91cf\u590d\u5236\uff0c\u6b64\u65f6\u4e3b\u670d\u52a1\u5668\u4f1a\u4e24\u4e2a\u8017\u65f6\u7684\u5730\u65b9\uff0c\u5206\u522b\u662f\u751f\u6210 RDB \u6587\u4ef6\u548c\u4f20\u8f93 RDB \u6587\u4ef6\u3002\u4e3a\u4e86\u907f\u514d\u8fc7\u591a\u7684\u4ece\u670d\u52a1\u5668\u548c\u4e3b\u670d\u52a1\u5668\u8fdb\u884c\u5168\u91cf\u590d\u5236\uff0c\u53ef\u4ee5\u628a\u4e00\u90e8\u5206\u4ece\u670d\u52a1\u5668\u5347\u7ea7\u4e3a\u300c\u7ecf\u7406\u89d2\u8272\u300d\uff0c\u8ba9\u5b83\u4e5f\u6709\u81ea\u5df1\u7684\u4ece\u670d\u52a1\u5668\uff0c\u901a\u8fc7\u8fd9\u6837\u53ef\u4ee5\u5206\u644a\u4e3b\u670d\u52a1\u5668\u7684\u538b\u529b\u3002</li> <li>\u7b2c\u4e00\u6b21\u540c\u6b65\u5b8c\u6210\u540e\uff0c\u4e3b\u4ece\u670d\u52a1\u5668\u90fd\u4f1a\u7ef4\u62a4\u7740\u4e00\u4e2a\u957f\u8fde\u63a5\uff0c\u4e3b\u670d\u52a1\u5668\u5728\u63a5\u6536\u5230\u5199\u64cd\u4f5c\u547d\u4ee4\u540e\uff0c\u5c31\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u8fde\u63a5\u5c06\u5199\u547d\u4ee4\u4f20\u64ad\u7ed9\u4ece\u670d\u52a1\u5668\uff0c\u6765\u4fdd\u8bc1\u4e3b\u4ece\u670d\u52a1\u5668\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002</li> <li>\u5982\u679c\u9047\u5230\u7f51\u7edc\u65ad\u5f00\uff0c\u589e\u91cf\u590d\u5236\u5c31\u53ef\u4ee5\u4e0a\u573a\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u8fd8\u8ddf repl_backlog_size \u8fd9\u4e2a\u5927\u5c0f\u6709\u5173\u7cfb\u3002</li> </ul>","boost":2},{"location":"redis/ha/#_2","title":"\u54e8\u5175\u673a\u5236","text":"<p>Redis \u5728 2.8 \u7248\u672c\u4ee5\u540e\u63d0\u4f9b\u7684\u54e8\u5175\uff08Sentinel\uff09\u673a\u5236\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4e3b\u4ece\u8282\u70b9\u6545\u969c\u8f6c\u79fb\u3002\u5b83\u4f1a\u76d1\u6d4b\u4e3b\u8282\u70b9\u662f\u5426\u5b58\u6d3b\uff0c\u5982\u679c\u53d1\u73b0\u4e3b\u8282\u70b9\u6302\u4e86\uff0c\u5b83\u5c31\u4f1a\u9009\u4e3e\u4e00\u4e2a\u4ece\u8282\u70b9\u5207\u6362\u4e3a\u4e3b\u8282\u70b9\uff0c\u5e76\u4e14\u628a\u65b0\u4e3b\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f\u901a\u77e5\u7ed9\u4ece\u8282\u70b9\u548c\u5ba2\u6237\u7aef\u3002</p> <p>\u4e3b\u4ece\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u547d\u4ee4\u590d\u5236\u662f\u5f02\u6b65\u8fdb\u884c\u7684\u3002</p>","boost":2},{"location":"redis/ha/#_3","title":"\u54e8\u5175\u673a\u5236\u5982\u4f55\u5de5\u4f5c\uff1f","text":"<p>\u54e8\u5175\u5176\u5b9e\u662f\u4e00\u4e2a\u8fd0\u884c\u5728\u7279\u6b8a\u6a21\u5f0f\u4e0b\u7684 Redis \u8fdb\u7a0b\uff0c\u6240\u4ee5\u5b83\u4e5f\u662f\u4e00\u4e2a\u8282\u70b9\u3002\u4ece\u201c\u54e8\u5175\u201d\u8fd9\u4e2a\u540d\u5b57\u4e5f\u53ef\u4ee5\u770b\u5f97\u51fa\u6765\uff0c\u5b83\u76f8\u5f53\u4e8e\u662f\u201c\u89c2\u5bdf\u8005\u8282\u70b9\u201d\uff0c\u89c2\u5bdf\u7684\u5bf9\u8c61\u662f\u4e3b\u4ece\u8282\u70b9\u3002</p> <p>\u54e8\u5175\u4e00\u822c\u662f\u4ee5\u96c6\u7fa4\u7684\u65b9\u5f0f\u90e8\u7f72\uff0c\u81f3\u5c11\u9700\u8981 3 \u4e2a\u54e8\u5175\u8282\u70b9\uff0c\u54e8\u5175\u96c6\u7fa4\u4e3b\u8981\u8d1f\u8d23\u4e09\u4ef6\u4e8b\u60c5\uff1a\u76d1\u63a7\u3001\u9009\u4e3b\u3001\u901a\u77e5\u3002</p> <p>Tip</p> <p>\u4e3a\u4e86\u51cf\u5c11\u8bef\u5224\u7684\u60c5\u51b5\uff0c\u54e8\u5175\u5728\u90e8\u7f72\u7684\u65f6\u5019\u4e0d\u4f1a\u53ea\u90e8\u7f72\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u662f\u7528\u591a\u4e2a\u8282\u70b9\u90e8\u7f72\u6210\u54e8\u5175\u96c6\u7fa4\uff08\u6700\u5c11\u9700\u8981\u4e09\u53f0\u673a\u5668\u6765\u90e8\u7f72\u54e8\u5175\u96c6\u7fa4\uff09\uff0c\u901a\u8fc7\u591a\u4e2a\u54e8\u5175\u8282\u70b9\u4e00\u8d77\u5224\u65ad\uff0c\u5c31\u53ef\u4ee5\u5c31\u53ef\u4ee5\u907f\u514d\u5355\u4e2a\u54e8\u5175\u56e0\u4e3a\u81ea\u8eab\u7f51\u7edc\u72b6\u51b5\u4e0d\u597d\uff0c\u800c\u8bef\u5224\u4e3b\u8282\u70b9\u4e0b\u7ebf\u7684\u60c5\u51b5\u3002</p> <p>\u54e8\u5175\u96c6\u7fa4\u4e2d\u4f1a\u9009\u51fa\u4e00\u4e2a leader\uff0c\u8ba9 leader \u6765\u6267\u884c\u4e3b\u4ece\u5207\u6362\u3002</p> <p>\u54e8\u5175\u8282\u70b9\u901a\u8fc7 Redis \u7684\u53d1\u5e03\u8005/\u8ba2\u9605\u8005\u673a\u5236\uff0c\u54e8\u5175\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u611f\u77e5\uff0c\u76f8\u4e92\u8fde\u63a5\uff0c\u7136\u540e\u7ec4\u6210\u54e8\u5175\u96c6\u7fa4\uff0c\u540c\u65f6\u54e8\u5175\u53c8\u901a\u8fc7 INFO \u547d\u4ee4\uff0c\u5728\u4e3b\u8282\u70b9\u91cc\u83b7\u5f97\u4e86\u6240\u6709\u4ece\u8282\u70b9\u8fde\u63a5\u4fe1\u606f\uff0c\u4e8e\u662f\u5c31\u80fd\u548c\u4ece\u8282\u70b9\u5efa\u7acb\u8fde\u63a5\uff0c\u5e76\u8fdb\u884c\u76d1\u63a7\u4e86\u3002</p> <p>1\u3001\u7b2c\u4e00\u8f6e\u6295\u7968\uff1a\u5224\u65ad\u4e3b\u8282\u70b9\u4e0b\u7ebf</p> <p>\u5f53\u54e8\u5175\u96c6\u7fa4\u4e2d\u7684\u67d0\u4e2a\u54e8\u5175\u5224\u5b9a\u4e3b\u8282\u70b9\u4e0b\u7ebf\uff08\u4e3b\u89c2\u4e0b\u7ebf\uff09\u540e\uff0c\u5c31\u4f1a\u5411\u5176\u4ed6\u54e8\u5175\u53d1\u8d77\u547d\u4ee4\uff0c\u5176\u4ed6\u54e8\u5175\u6536\u5230\u8fd9\u4e2a\u547d\u4ee4\u540e\uff0c\u5c31\u4f1a\u6839\u636e\u81ea\u8eab\u548c\u4e3b\u8282\u70b9\u7684\u7f51\u7edc\u72b6\u51b5\uff0c\u505a\u51fa\u8d5e\u6210\u6295\u7968\u6216\u8005\u62d2\u7edd\u6295\u7968\u7684\u54cd\u5e94\u3002</p> <p>\u5f53\u8fd9\u4e2a\u54e8\u5175\u7684\u8d5e\u540c\u7968\u6570\u8fbe\u5230\u54e8\u5175\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 quorum \u914d\u7f6e\u9879\u8bbe\u5b9a\u7684\u503c\u540e\uff0c\u8fd9\u65f6\u4e3b\u8282\u70b9\u5c31\u4f1a\u88ab\u8be5\u54e8\u5175\u6807\u8bb0\u4e3a\u300c\u5ba2\u89c2\u4e0b\u7ebf\u300d\u3002</p> <p>2\u3001\u7b2c\u4e8c\u8f6e\u6295\u7968\uff1a\u9009\u51fa\u54e8\u5175 leader</p> <p>\u67d0\u4e2a\u54e8\u5175\u5224\u5b9a\u4e3b\u8282\u70b9\u5ba2\u89c2\u4e0b\u7ebf\u540e\uff0c\u8be5\u54e8\u5175\u5c31\u4f1a\u53d1\u8d77\u6295\u7968\uff0c\u544a\u8bc9\u5176\u4ed6\u54e8\u5175\uff0c\u5b83\u60f3\u6210\u4e3a leader\uff0c\u60f3\u6210\u4e3a leader \u7684\u54e8\u5175\u8282\u70b9\uff0c\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <p>\u7b2c\u4e00\uff0c\u62ff\u5230\u534a\u6570\u4ee5\u4e0a\u7684\u8d5e\u6210\u7968\uff1b \u7b2c\u4e8c\uff0c\u62ff\u5230\u7684\u7968\u6570\u540c\u65f6\u8fd8\u9700\u8981\u5927\u4e8e\u7b49\u4e8e\u54e8\u5175\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 quorum \u503c\u3002</p> <p>3\u3001\u7531\u54e8\u5175 leader \u8fdb\u884c\u4e3b\u4ece\u6545\u969c\u8f6c\u79fb</p> <p>\u9009\u4e3e\u51fa\u4e86\u54e8\u5175 leader \u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e3b\u4ece\u6545\u969c\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e86\u3002\u8be5\u64cd\u4f5c\u5305\u542b\u4ee5\u4e0b\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b65\uff1a\u5728\u5df2\u4e0b\u7ebf\u4e3b\u8282\u70b9\uff08\u65e7\u4e3b\u8282\u70b9\uff09\u5c5e\u4e0b\u7684\u6240\u6709\u300c\u4ece\u8282\u70b9\u300d\u91cc\u9762\uff0c\u6311\u9009\u51fa\u4e00\u4e2a\u4ece\u8282\u70b9\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e3b\u8282\u70b9\uff0c\u9009\u62e9\u7684\u89c4\u5219\uff1a\u8fc7\u6ee4\u6389\u5df2\u7ecf\u79bb\u7ebf\u7684\u4ece\u8282\u70b9\uff1b\u8fc7\u6ee4\u6389\u5386\u53f2\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\u4e0d\u597d\u7684\u4ece\u8282\u70b9\uff1b\u5c06\u5269\u4e0b\u7684\u4ece\u8282\u70b9\uff0c\u8fdb\u884c\u4e09\u8f6e\u8003\u5bdf\uff1a\u4f18\u5148\u7ea7\u3001\u590d\u5236\u8fdb\u5ea6\u3001ID \u53f7\u3002\u5728\u6bcf\u4e00\u8f6e\u8003\u5bdf\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a\u80dc\u51fa\u7684\u4ece\u8282\u70b9\uff0c\u5c31\u5c06\u5176\u4f5c\u4e3a\u65b0\u4e3b\u8282\u70b9\u3002</li> <li>\u7b2c\u4e8c\u6b65\uff1a\u8ba9\u5df2\u4e0b\u7ebf\u4e3b\u8282\u70b9\u5c5e\u4e0b\u7684\u6240\u6709\u300c\u4ece\u8282\u70b9\u300d\u4fee\u6539\u590d\u5236\u76ee\u6807\uff0c\u4fee\u6539\u4e3a\u590d\u5236\u300c\u65b0\u4e3b\u8282\u70b9\u300d\uff1b</li> <li>\u7b2c\u4e09\u6b65\uff1a\u5c06\u65b0\u4e3b\u8282\u70b9\u7684 IP \u5730\u5740\u548c\u4fe1\u606f\uff0c\u901a\u8fc7\u300c\u53d1\u5e03\u8005/\u8ba2\u9605\u8005\u673a\u5236\u300d\u901a\u77e5\u7ed9\u5ba2\u6237\u7aef\uff1b</li> <li>\u7b2c\u56db\u6b65\uff1a\u7ee7\u7eed\u76d1\u89c6\u65e7\u4e3b\u8282\u70b9\uff0c\u5f53\u8fd9\u4e2a\u65e7\u4e3b\u8282\u70b9\u91cd\u65b0\u4e0a\u7ebf\u65f6\uff0c\u5c06\u5b83\u8bbe\u7f6e\u4e3a\u65b0\u4e3b\u8282\u70b9\u7684\u4ece\u8282\u70b9\uff1b</li> </ul>","boost":2},{"location":"redis/ha/#_4","title":"\u53c2\u8003","text":"<ul> <li>\u5c0f\u6797 coding - \u56fe\u89e3 Redis\uff1a\u4e3b\u4ece\u590d\u5236\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f</li> <li>\u5c0f\u6797 coding - \u56fe\u89e3 Redis\uff1a\u4e3a\u4ec0\u4e48\u8981\u6709\u54e8\u5175\uff1f</li> </ul>","boost":2}]}